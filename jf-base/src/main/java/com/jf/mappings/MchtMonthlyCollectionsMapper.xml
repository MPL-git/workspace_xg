<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.MchtMonthlyCollectionsMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.MchtMonthlyCollections" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="collection_date" property="collectionDate" jdbcType="VARCHAR" />
    <result column="mcht_id" property="mchtId" jdbcType="INTEGER" />
    <result column="begin_unpay" property="beginUnpay" jdbcType="DECIMAL" />
    <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
    <result column="settle_amount" property="settleAmount" jdbcType="DECIMAL" />
    <result column="refund_amount" property="refundAmount" jdbcType="DECIMAL" />
    <result column="return_amount" property="returnAmount" jdbcType="DECIMAL" />
    <result column="return_order_amount" property="returnOrderAmount" jdbcType="DECIMAL" />
    <result column="need_pay_amount" property="needPayAmount" jdbcType="DECIMAL" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="end_unpay" property="endUnpay" jdbcType="DECIMAL" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
    <result column="deduction_deposit_total" property="deductionDepositTotal" jdbcType="DECIMAL" />
    <result column="collection_product_amount" property="collectionProductAmount" jdbcType="DECIMAL" />
    <result column="collection_product_count" property="collectionProductCount" jdbcType="INTEGER" />
    <result column="collection_mcht_preferential" property="collectionMchtPreferential" jdbcType="DECIMAL" />
    <result column="collection_platform_preferential" property="collectionPlatformPreferential" jdbcType="DECIMAL" />
    <result column="collection_integral_preferential" property="collectionIntegralPreferential" jdbcType="DECIMAL" />
    <result column="collection_commission_amount" property="collectionCommissionAmount" jdbcType="DECIMAL" />
    <result column="refund_product_amount" property="refundProductAmount" jdbcType="DECIMAL" />
    <result column="refund_product_count" property="refundProductCount" jdbcType="INTEGER" />
    <result column="refund_mcht_preferential" property="refundMchtPreferential" jdbcType="DECIMAL" />
    <result column="refund_platform_preferential" property="refundPlatformPreferential" jdbcType="DECIMAL" />
    <result column="refund_integral_preferential" property="refundIntegralPreferential" jdbcType="DECIMAL" />
    <result column="refund_commission_amount" property="refundCommissionAmount" jdbcType="DECIMAL" />
    <result column="discount" property="discount" jdbcType="DECIMAL" />
    <result column="discount_desc" property="discountDesc" jdbcType="VARCHAR" />
    <result column="discounted_end_need_pay" property="discountedEndNeedPay" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, collection_date, mcht_id, begin_unpay, order_amount, settle_amount, refund_amount, 
    return_amount, return_order_amount, need_pay_amount, pay_amount, end_unpay, create_by, 
    create_date, update_by, update_date, remarks, del_flag, deduction_deposit_total, 
    collection_product_amount, collection_product_count, collection_mcht_preferential, 
    collection_platform_preferential, collection_integral_preferential, collection_commission_amount, 
    refund_product_amount, refund_product_count, refund_mcht_preferential, refund_platform_preferential, 
    refund_integral_preferential, refund_commission_amount, discount, discount_desc, 
    discounted_end_need_pay
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MchtMonthlyCollectionsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_mcht_monthly_collections
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_mcht_monthly_collections
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bu_mcht_monthly_collections
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jf.entity.MchtMonthlyCollectionsExample" >
    delete from bu_mcht_monthly_collections
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.entity.MchtMonthlyCollections" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_mcht_monthly_collections (collection_date, mcht_id, begin_unpay, 
      order_amount, settle_amount, refund_amount, 
      return_amount, return_order_amount, need_pay_amount, 
      pay_amount, end_unpay, create_by, 
      create_date, update_by, update_date, 
      remarks, del_flag, deduction_deposit_total, 
      collection_product_amount, collection_product_count, 
      collection_mcht_preferential, collection_platform_preferential, 
      collection_integral_preferential, collection_commission_amount, 
      refund_product_amount, refund_product_count, 
      refund_mcht_preferential, refund_platform_preferential, 
      refund_integral_preferential, refund_commission_amount, 
      discount, discount_desc, discounted_end_need_pay
      )
    values (#{collectionDate,jdbcType=VARCHAR}, #{mchtId,jdbcType=INTEGER}, #{beginUnpay,jdbcType=DECIMAL}, 
      #{orderAmount,jdbcType=DECIMAL}, #{settleAmount,jdbcType=DECIMAL}, #{refundAmount,jdbcType=DECIMAL}, 
      #{returnAmount,jdbcType=DECIMAL}, #{returnOrderAmount,jdbcType=DECIMAL}, #{needPayAmount,jdbcType=DECIMAL}, 
      #{payAmount,jdbcType=DECIMAL}, #{endUnpay,jdbcType=DECIMAL}, #{createBy,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}, #{deductionDepositTotal,jdbcType=DECIMAL}, 
      #{collectionProductAmount,jdbcType=DECIMAL}, #{collectionProductCount,jdbcType=INTEGER}, 
      #{collectionMchtPreferential,jdbcType=DECIMAL}, #{collectionPlatformPreferential,jdbcType=DECIMAL}, 
      #{collectionIntegralPreferential,jdbcType=DECIMAL}, #{collectionCommissionAmount,jdbcType=DECIMAL}, 
      #{refundProductAmount,jdbcType=DECIMAL}, #{refundProductCount,jdbcType=INTEGER}, 
      #{refundMchtPreferential,jdbcType=DECIMAL}, #{refundPlatformPreferential,jdbcType=DECIMAL}, 
      #{refundIntegralPreferential,jdbcType=DECIMAL}, #{refundCommissionAmount,jdbcType=DECIMAL}, 
      #{discount,jdbcType=DECIMAL}, #{discountDesc,jdbcType=VARCHAR}, #{discountedEndNeedPay,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jf.entity.MchtMonthlyCollections" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_mcht_monthly_collections
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="collectionDate != null" >
        collection_date,
      </if>
      <if test="mchtId != null" >
        mcht_id,
      </if>
      <if test="beginUnpay != null" >
        begin_unpay,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="settleAmount != null" >
        settle_amount,
      </if>
      <if test="refundAmount != null" >
        refund_amount,
      </if>
      <if test="returnAmount != null" >
        return_amount,
      </if>
      <if test="returnOrderAmount != null" >
        return_order_amount,
      </if>
      <if test="needPayAmount != null" >
        need_pay_amount,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="endUnpay != null" >
        end_unpay,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="deductionDepositTotal != null" >
        deduction_deposit_total,
      </if>
      <if test="collectionProductAmount != null" >
        collection_product_amount,
      </if>
      <if test="collectionProductCount != null" >
        collection_product_count,
      </if>
      <if test="collectionMchtPreferential != null" >
        collection_mcht_preferential,
      </if>
      <if test="collectionPlatformPreferential != null" >
        collection_platform_preferential,
      </if>
      <if test="collectionIntegralPreferential != null" >
        collection_integral_preferential,
      </if>
      <if test="collectionCommissionAmount != null" >
        collection_commission_amount,
      </if>
      <if test="refundProductAmount != null" >
        refund_product_amount,
      </if>
      <if test="refundProductCount != null" >
        refund_product_count,
      </if>
      <if test="refundMchtPreferential != null" >
        refund_mcht_preferential,
      </if>
      <if test="refundPlatformPreferential != null" >
        refund_platform_preferential,
      </if>
      <if test="refundIntegralPreferential != null" >
        refund_integral_preferential,
      </if>
      <if test="refundCommissionAmount != null" >
        refund_commission_amount,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="discountDesc != null" >
        discount_desc,
      </if>
      <if test="discountedEndNeedPay != null" >
        discounted_end_need_pay,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="collectionDate != null" >
        #{collectionDate,jdbcType=VARCHAR},
      </if>
      <if test="mchtId != null" >
        #{mchtId,jdbcType=INTEGER},
      </if>
      <if test="beginUnpay != null" >
        #{beginUnpay,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null" >
        #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null" >
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnAmount != null" >
        #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnOrderAmount != null" >
        #{returnOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="needPayAmount != null" >
        #{needPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="endUnpay != null" >
        #{endUnpay,jdbcType=DECIMAL},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="deductionDepositTotal != null" >
        #{deductionDepositTotal,jdbcType=DECIMAL},
      </if>
      <if test="collectionProductAmount != null" >
        #{collectionProductAmount,jdbcType=DECIMAL},
      </if>
      <if test="collectionProductCount != null" >
        #{collectionProductCount,jdbcType=INTEGER},
      </if>
      <if test="collectionMchtPreferential != null" >
        #{collectionMchtPreferential,jdbcType=DECIMAL},
      </if>
      <if test="collectionPlatformPreferential != null" >
        #{collectionPlatformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="collectionIntegralPreferential != null" >
        #{collectionIntegralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="collectionCommissionAmount != null" >
        #{collectionCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundProductAmount != null" >
        #{refundProductAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundProductCount != null" >
        #{refundProductCount,jdbcType=INTEGER},
      </if>
      <if test="refundMchtPreferential != null" >
        #{refundMchtPreferential,jdbcType=DECIMAL},
      </if>
      <if test="refundPlatformPreferential != null" >
        #{refundPlatformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="refundIntegralPreferential != null" >
        #{refundIntegralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="refundCommissionAmount != null" >
        #{refundCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="discountDesc != null" >
        #{discountDesc,jdbcType=VARCHAR},
      </if>
      <if test="discountedEndNeedPay != null" >
        #{discountedEndNeedPay,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.entity.MchtMonthlyCollectionsExample" resultType="java.lang.Integer" >
    select count(*) from bu_mcht_monthly_collections
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bu_mcht_monthly_collections
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.collectionDate != null" >
        collection_date = #{record.collectionDate,jdbcType=VARCHAR},
      </if>
      <if test="record.mchtId != null" >
        mcht_id = #{record.mchtId,jdbcType=INTEGER},
      </if>
      <if test="record.beginUnpay != null" >
        begin_unpay = #{record.beginUnpay,jdbcType=DECIMAL},
      </if>
      <if test="record.orderAmount != null" >
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.settleAmount != null" >
        settle_amount = #{record.settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundAmount != null" >
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.returnAmount != null" >
        return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.returnOrderAmount != null" >
        return_order_amount = #{record.returnOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.needPayAmount != null" >
        need_pay_amount = #{record.needPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.endUnpay != null" >
        end_unpay = #{record.endUnpay,jdbcType=DECIMAL},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
      <if test="record.deductionDepositTotal != null" >
        deduction_deposit_total = #{record.deductionDepositTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.collectionProductAmount != null" >
        collection_product_amount = #{record.collectionProductAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.collectionProductCount != null" >
        collection_product_count = #{record.collectionProductCount,jdbcType=INTEGER},
      </if>
      <if test="record.collectionMchtPreferential != null" >
        collection_mcht_preferential = #{record.collectionMchtPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.collectionPlatformPreferential != null" >
        collection_platform_preferential = #{record.collectionPlatformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.collectionIntegralPreferential != null" >
        collection_integral_preferential = #{record.collectionIntegralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.collectionCommissionAmount != null" >
        collection_commission_amount = #{record.collectionCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundProductAmount != null" >
        refund_product_amount = #{record.refundProductAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundProductCount != null" >
        refund_product_count = #{record.refundProductCount,jdbcType=INTEGER},
      </if>
      <if test="record.refundMchtPreferential != null" >
        refund_mcht_preferential = #{record.refundMchtPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.refundPlatformPreferential != null" >
        refund_platform_preferential = #{record.refundPlatformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.refundIntegralPreferential != null" >
        refund_integral_preferential = #{record.refundIntegralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.refundCommissionAmount != null" >
        refund_commission_amount = #{record.refundCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=DECIMAL},
      </if>
      <if test="record.discountDesc != null" >
        discount_desc = #{record.discountDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.discountedEndNeedPay != null" >
        discounted_end_need_pay = #{record.discountedEndNeedPay,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bu_mcht_monthly_collections
    set id = #{record.id,jdbcType=INTEGER},
      collection_date = #{record.collectionDate,jdbcType=VARCHAR},
      mcht_id = #{record.mchtId,jdbcType=INTEGER},
      begin_unpay = #{record.beginUnpay,jdbcType=DECIMAL},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      settle_amount = #{record.settleAmount,jdbcType=DECIMAL},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      return_order_amount = #{record.returnOrderAmount,jdbcType=DECIMAL},
      need_pay_amount = #{record.needPayAmount,jdbcType=DECIMAL},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      end_unpay = #{record.endUnpay,jdbcType=DECIMAL},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR},
      deduction_deposit_total = #{record.deductionDepositTotal,jdbcType=DECIMAL},
      collection_product_amount = #{record.collectionProductAmount,jdbcType=DECIMAL},
      collection_product_count = #{record.collectionProductCount,jdbcType=INTEGER},
      collection_mcht_preferential = #{record.collectionMchtPreferential,jdbcType=DECIMAL},
      collection_platform_preferential = #{record.collectionPlatformPreferential,jdbcType=DECIMAL},
      collection_integral_preferential = #{record.collectionIntegralPreferential,jdbcType=DECIMAL},
      collection_commission_amount = #{record.collectionCommissionAmount,jdbcType=DECIMAL},
      refund_product_amount = #{record.refundProductAmount,jdbcType=DECIMAL},
      refund_product_count = #{record.refundProductCount,jdbcType=INTEGER},
      refund_mcht_preferential = #{record.refundMchtPreferential,jdbcType=DECIMAL},
      refund_platform_preferential = #{record.refundPlatformPreferential,jdbcType=DECIMAL},
      refund_integral_preferential = #{record.refundIntegralPreferential,jdbcType=DECIMAL},
      refund_commission_amount = #{record.refundCommissionAmount,jdbcType=DECIMAL},
      discount = #{record.discount,jdbcType=DECIMAL},
      discount_desc = #{record.discountDesc,jdbcType=VARCHAR},
      discounted_end_need_pay = #{record.discountedEndNeedPay,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jf.entity.MchtMonthlyCollections" >
    update bu_mcht_monthly_collections
    <set >
      <if test="collectionDate != null" >
        collection_date = #{collectionDate,jdbcType=VARCHAR},
      </if>
      <if test="mchtId != null" >
        mcht_id = #{mchtId,jdbcType=INTEGER},
      </if>
      <if test="beginUnpay != null" >
        begin_unpay = #{beginUnpay,jdbcType=DECIMAL},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null" >
        settle_amount = #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null" >
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnAmount != null" >
        return_amount = #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnOrderAmount != null" >
        return_order_amount = #{returnOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="needPayAmount != null" >
        need_pay_amount = #{needPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="endUnpay != null" >
        end_unpay = #{endUnpay,jdbcType=DECIMAL},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="deductionDepositTotal != null" >
        deduction_deposit_total = #{deductionDepositTotal,jdbcType=DECIMAL},
      </if>
      <if test="collectionProductAmount != null" >
        collection_product_amount = #{collectionProductAmount,jdbcType=DECIMAL},
      </if>
      <if test="collectionProductCount != null" >
        collection_product_count = #{collectionProductCount,jdbcType=INTEGER},
      </if>
      <if test="collectionMchtPreferential != null" >
        collection_mcht_preferential = #{collectionMchtPreferential,jdbcType=DECIMAL},
      </if>
      <if test="collectionPlatformPreferential != null" >
        collection_platform_preferential = #{collectionPlatformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="collectionIntegralPreferential != null" >
        collection_integral_preferential = #{collectionIntegralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="collectionCommissionAmount != null" >
        collection_commission_amount = #{collectionCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundProductAmount != null" >
        refund_product_amount = #{refundProductAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundProductCount != null" >
        refund_product_count = #{refundProductCount,jdbcType=INTEGER},
      </if>
      <if test="refundMchtPreferential != null" >
        refund_mcht_preferential = #{refundMchtPreferential,jdbcType=DECIMAL},
      </if>
      <if test="refundPlatformPreferential != null" >
        refund_platform_preferential = #{refundPlatformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="refundIntegralPreferential != null" >
        refund_integral_preferential = #{refundIntegralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="refundCommissionAmount != null" >
        refund_commission_amount = #{refundCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="discountDesc != null" >
        discount_desc = #{discountDesc,jdbcType=VARCHAR},
      </if>
      <if test="discountedEndNeedPay != null" >
        discounted_end_need_pay = #{discountedEndNeedPay,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jf.entity.MchtMonthlyCollections" >
    update bu_mcht_monthly_collections
    set collection_date = #{collectionDate,jdbcType=VARCHAR},
      mcht_id = #{mchtId,jdbcType=INTEGER},
      begin_unpay = #{beginUnpay,jdbcType=DECIMAL},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      settle_amount = #{settleAmount,jdbcType=DECIMAL},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      return_amount = #{returnAmount,jdbcType=DECIMAL},
      return_order_amount = #{returnOrderAmount,jdbcType=DECIMAL},
      need_pay_amount = #{needPayAmount,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      end_unpay = #{endUnpay,jdbcType=DECIMAL},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      deduction_deposit_total = #{deductionDepositTotal,jdbcType=DECIMAL},
      collection_product_amount = #{collectionProductAmount,jdbcType=DECIMAL},
      collection_product_count = #{collectionProductCount,jdbcType=INTEGER},
      collection_mcht_preferential = #{collectionMchtPreferential,jdbcType=DECIMAL},
      collection_platform_preferential = #{collectionPlatformPreferential,jdbcType=DECIMAL},
      collection_integral_preferential = #{collectionIntegralPreferential,jdbcType=DECIMAL},
      collection_commission_amount = #{collectionCommissionAmount,jdbcType=DECIMAL},
      refund_product_amount = #{refundProductAmount,jdbcType=DECIMAL},
      refund_product_count = #{refundProductCount,jdbcType=INTEGER},
      refund_mcht_preferential = #{refundMchtPreferential,jdbcType=DECIMAL},
      refund_platform_preferential = #{refundPlatformPreferential,jdbcType=DECIMAL},
      refund_integral_preferential = #{refundIntegralPreferential,jdbcType=DECIMAL},
      refund_commission_amount = #{refundCommissionAmount,jdbcType=DECIMAL},
      discount = #{discount,jdbcType=DECIMAL},
      discount_desc = #{discountDesc,jdbcType=VARCHAR},
      discounted_end_need_pay = #{discountedEndNeedPay,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.MchtProductBrandMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.MchtProductBrand" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mcht_id" property="mchtId" jdbcType="INTEGER" />
    <result column="product_brand_id" property="productBrandId" jdbcType="INTEGER" />
    <result column="product_brand_name" property="productBrandName" jdbcType="VARCHAR" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="inspection_exp_date" property="inspectionExpDate" jdbcType="DATE" />
    <result column="other_exp_date" property="otherExpDate" jdbcType="DATE" />
    <result column="aptitude_type" property="aptitudeType" jdbcType="CHAR" />
    <result column="aptitude_exp_date" property="aptitudeExpDate" jdbcType="DATE" />
    <result column="aptitude_pic" property="aptitudePic" jdbcType="VARCHAR" />
    <result column="platform_auth_pic" property="platformAuthPic" jdbcType="VARCHAR" />
    <result column="platform_auth_exp_date" property="platformAuthExpDate" jdbcType="DATE" />
    <result column="pop_commission_rate" property="popCommissionRate" jdbcType="DECIMAL" />
    <result column="price_model" property="priceModel" jdbcType="CHAR" />
    <result column="price_model_desc" property="priceModelDesc" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="is_activity" property="isActivity" jdbcType="CHAR" />
    <result column="audit_status" property="auditStatus" jdbcType="CHAR" />
    <result column="audit_remarks" property="auditRemarks" jdbcType="VARCHAR" />
    <result column="is_specially_approved" property="isSpeciallyApproved" jdbcType="CHAR" />
    <result column="specially_approved_remarks" property="speciallyApprovedRemarks" jdbcType="VARCHAR" />
    <result column="specially_approved_source" property="speciallyApprovedSource" jdbcType="CHAR" />
    <result column="specially_approved_date" property="speciallyApprovedDate" jdbcType="TIMESTAMP" />
    <result column="status_remarks" property="statusRemarks" jdbcType="VARCHAR" />
    <result column="status_date" property="statusDate" jdbcType="TIMESTAMP" />
    <result column="status_by" property="statusBy" jdbcType="INTEGER" />
    <result column="zs_audit_status" property="zsAuditStatus" jdbcType="CHAR" />
    <result column="zs_audit_remarks" property="zsAuditRemarks" jdbcType="VARCHAR" />
    <result column="zs_audit_inner_remarks" property="zsAuditInnerRemarks" jdbcType="VARCHAR" />
    <result column="zs_audit_by" property="zsAuditBy" jdbcType="INTEGER" />
    <result column="zs_commit_audit_date" property="zsCommitAuditDate" jdbcType="TIMESTAMP" />
    <result column="zs_audit_date" property="zsAuditDate" jdbcType="TIMESTAMP" />
    <result column="is_zs_audit_recommit" property="isZsAuditRecommit" jdbcType="CHAR" />
    <result column="audit_inner_remarks" property="auditInnerRemarks" jdbcType="VARCHAR" />
    <result column="audit_by" property="auditBy" jdbcType="INTEGER" />
    <result column="commit_audit_date" property="commitAuditDate" jdbcType="TIMESTAMP" />
    <result column="audit_date" property="auditDate" jdbcType="TIMESTAMP" />
    <result column="is_audit_recommit" property="isAuditRecommit" jdbcType="CHAR" />
    <result column="archive_status" property="archiveStatus" jdbcType="CHAR" />
    <result column="express_id" property="expressId" jdbcType="INTEGER" />
    <result column="express_no" property="expressNo" jdbcType="VARCHAR" />
    <result column="brand_source" property="brandSource" jdbcType="CHAR" />
    <result column="delay_status" property="delayStatus" jdbcType="CHAR" />
    <result column="delay_days" property="delayDays" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mcht_id, product_brand_id, product_brand_name, logo, inspection_exp_date, other_exp_date, 
    aptitude_type, aptitude_exp_date, aptitude_pic, platform_auth_pic, platform_auth_exp_date, 
    pop_commission_rate, price_model, price_model_desc, status, is_activity, audit_status, 
    audit_remarks, is_specially_approved, specially_approved_remarks, specially_approved_source, 
    specially_approved_date, status_remarks, status_date, status_by, zs_audit_status, 
    zs_audit_remarks, zs_audit_inner_remarks, zs_audit_by, zs_commit_audit_date, zs_audit_date, 
    is_zs_audit_recommit, audit_inner_remarks, audit_by, commit_audit_date, audit_date, 
    is_audit_recommit, archive_status, express_id, express_no, brand_source, delay_status, 
    delay_days, create_by, create_date, update_by, update_date, remarks, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MchtProductBrandExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_mcht_product_brand
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_mcht_product_brand
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bu_mcht_product_brand
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jf.entity.MchtProductBrandExample" >
    delete from bu_mcht_product_brand
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.entity.MchtProductBrand" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_mcht_product_brand (mcht_id, product_brand_id, product_brand_name, 
      logo, inspection_exp_date, other_exp_date, 
      aptitude_type, aptitude_exp_date, aptitude_pic, 
      platform_auth_pic, platform_auth_exp_date, pop_commission_rate, 
      price_model, price_model_desc, status, 
      is_activity, audit_status, audit_remarks, 
      is_specially_approved, specially_approved_remarks, 
      specially_approved_source, specially_approved_date, 
      status_remarks, status_date, status_by, 
      zs_audit_status, zs_audit_remarks, zs_audit_inner_remarks, 
      zs_audit_by, zs_commit_audit_date, zs_audit_date, 
      is_zs_audit_recommit, audit_inner_remarks, audit_by, 
      commit_audit_date, audit_date, is_audit_recommit, 
      archive_status, express_id, express_no, 
      brand_source, delay_status, delay_days, 
      create_by, create_date, update_by, 
      update_date, remarks, del_flag
      )
    values (#{mchtId,jdbcType=INTEGER}, #{productBrandId,jdbcType=INTEGER}, #{productBrandName,jdbcType=VARCHAR}, 
      #{logo,jdbcType=VARCHAR}, #{inspectionExpDate,jdbcType=DATE}, #{otherExpDate,jdbcType=DATE}, 
      #{aptitudeType,jdbcType=CHAR}, #{aptitudeExpDate,jdbcType=DATE}, #{aptitudePic,jdbcType=VARCHAR}, 
      #{platformAuthPic,jdbcType=VARCHAR}, #{platformAuthExpDate,jdbcType=DATE}, #{popCommissionRate,jdbcType=DECIMAL}, 
      #{priceModel,jdbcType=CHAR}, #{priceModelDesc,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{isActivity,jdbcType=CHAR}, #{auditStatus,jdbcType=CHAR}, #{auditRemarks,jdbcType=VARCHAR}, 
      #{isSpeciallyApproved,jdbcType=CHAR}, #{speciallyApprovedRemarks,jdbcType=VARCHAR}, 
      #{speciallyApprovedSource,jdbcType=CHAR}, #{speciallyApprovedDate,jdbcType=TIMESTAMP}, 
      #{statusRemarks,jdbcType=VARCHAR}, #{statusDate,jdbcType=TIMESTAMP}, #{statusBy,jdbcType=INTEGER}, 
      #{zsAuditStatus,jdbcType=CHAR}, #{zsAuditRemarks,jdbcType=VARCHAR}, #{zsAuditInnerRemarks,jdbcType=VARCHAR}, 
      #{zsAuditBy,jdbcType=INTEGER}, #{zsCommitAuditDate,jdbcType=TIMESTAMP}, #{zsAuditDate,jdbcType=TIMESTAMP}, 
      #{isZsAuditRecommit,jdbcType=CHAR}, #{auditInnerRemarks,jdbcType=VARCHAR}, #{auditBy,jdbcType=INTEGER}, 
      #{commitAuditDate,jdbcType=TIMESTAMP}, #{auditDate,jdbcType=TIMESTAMP}, #{isAuditRecommit,jdbcType=CHAR}, 
      #{archiveStatus,jdbcType=CHAR}, #{expressId,jdbcType=INTEGER}, #{expressNo,jdbcType=VARCHAR}, 
      #{brandSource,jdbcType=CHAR}, #{delayStatus,jdbcType=CHAR}, #{delayDays,jdbcType=INTEGER}, 
      #{createBy,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jf.entity.MchtProductBrand" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_mcht_product_brand
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mchtId != null" >
        mcht_id,
      </if>
      <if test="productBrandId != null" >
        product_brand_id,
      </if>
      <if test="productBrandName != null" >
        product_brand_name,
      </if>
      <if test="logo != null" >
        logo,
      </if>
      <if test="inspectionExpDate != null" >
        inspection_exp_date,
      </if>
      <if test="otherExpDate != null" >
        other_exp_date,
      </if>
      <if test="aptitudeType != null" >
        aptitude_type,
      </if>
      <if test="aptitudeExpDate != null" >
        aptitude_exp_date,
      </if>
      <if test="aptitudePic != null" >
        aptitude_pic,
      </if>
      <if test="platformAuthPic != null" >
        platform_auth_pic,
      </if>
      <if test="platformAuthExpDate != null" >
        platform_auth_exp_date,
      </if>
      <if test="popCommissionRate != null" >
        pop_commission_rate,
      </if>
      <if test="priceModel != null" >
        price_model,
      </if>
      <if test="priceModelDesc != null" >
        price_model_desc,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isActivity != null" >
        is_activity,
      </if>
      <if test="auditStatus != null" >
        audit_status,
      </if>
      <if test="auditRemarks != null" >
        audit_remarks,
      </if>
      <if test="isSpeciallyApproved != null" >
        is_specially_approved,
      </if>
      <if test="speciallyApprovedRemarks != null" >
        specially_approved_remarks,
      </if>
      <if test="speciallyApprovedSource != null" >
        specially_approved_source,
      </if>
      <if test="speciallyApprovedDate != null" >
        specially_approved_date,
      </if>
      <if test="statusRemarks != null" >
        status_remarks,
      </if>
      <if test="statusDate != null" >
        status_date,
      </if>
      <if test="statusBy != null" >
        status_by,
      </if>
      <if test="zsAuditStatus != null" >
        zs_audit_status,
      </if>
      <if test="zsAuditRemarks != null" >
        zs_audit_remarks,
      </if>
      <if test="zsAuditInnerRemarks != null" >
        zs_audit_inner_remarks,
      </if>
      <if test="zsAuditBy != null" >
        zs_audit_by,
      </if>
      <if test="zsCommitAuditDate != null" >
        zs_commit_audit_date,
      </if>
      <if test="zsAuditDate != null" >
        zs_audit_date,
      </if>
      <if test="isZsAuditRecommit != null" >
        is_zs_audit_recommit,
      </if>
      <if test="auditInnerRemarks != null" >
        audit_inner_remarks,
      </if>
      <if test="auditBy != null" >
        audit_by,
      </if>
      <if test="commitAuditDate != null" >
        commit_audit_date,
      </if>
      <if test="auditDate != null" >
        audit_date,
      </if>
      <if test="isAuditRecommit != null" >
        is_audit_recommit,
      </if>
      <if test="archiveStatus != null" >
        archive_status,
      </if>
      <if test="expressId != null" >
        express_id,
      </if>
      <if test="expressNo != null" >
        express_no,
      </if>
      <if test="brandSource != null" >
        brand_source,
      </if>
      <if test="delayStatus != null" >
        delay_status,
      </if>
      <if test="delayDays != null" >
        delay_days,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mchtId != null" >
        #{mchtId,jdbcType=INTEGER},
      </if>
      <if test="productBrandId != null" >
        #{productBrandId,jdbcType=INTEGER},
      </if>
      <if test="productBrandName != null" >
        #{productBrandName,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="inspectionExpDate != null" >
        #{inspectionExpDate,jdbcType=DATE},
      </if>
      <if test="otherExpDate != null" >
        #{otherExpDate,jdbcType=DATE},
      </if>
      <if test="aptitudeType != null" >
        #{aptitudeType,jdbcType=CHAR},
      </if>
      <if test="aptitudeExpDate != null" >
        #{aptitudeExpDate,jdbcType=DATE},
      </if>
      <if test="aptitudePic != null" >
        #{aptitudePic,jdbcType=VARCHAR},
      </if>
      <if test="platformAuthPic != null" >
        #{platformAuthPic,jdbcType=VARCHAR},
      </if>
      <if test="platformAuthExpDate != null" >
        #{platformAuthExpDate,jdbcType=DATE},
      </if>
      <if test="popCommissionRate != null" >
        #{popCommissionRate,jdbcType=DECIMAL},
      </if>
      <if test="priceModel != null" >
        #{priceModel,jdbcType=CHAR},
      </if>
      <if test="priceModelDesc != null" >
        #{priceModelDesc,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="isActivity != null" >
        #{isActivity,jdbcType=CHAR},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=CHAR},
      </if>
      <if test="auditRemarks != null" >
        #{auditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="isSpeciallyApproved != null" >
        #{isSpeciallyApproved,jdbcType=CHAR},
      </if>
      <if test="speciallyApprovedRemarks != null" >
        #{speciallyApprovedRemarks,jdbcType=VARCHAR},
      </if>
      <if test="speciallyApprovedSource != null" >
        #{speciallyApprovedSource,jdbcType=CHAR},
      </if>
      <if test="speciallyApprovedDate != null" >
        #{speciallyApprovedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="statusRemarks != null" >
        #{statusRemarks,jdbcType=VARCHAR},
      </if>
      <if test="statusDate != null" >
        #{statusDate,jdbcType=TIMESTAMP},
      </if>
      <if test="statusBy != null" >
        #{statusBy,jdbcType=INTEGER},
      </if>
      <if test="zsAuditStatus != null" >
        #{zsAuditStatus,jdbcType=CHAR},
      </if>
      <if test="zsAuditRemarks != null" >
        #{zsAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="zsAuditInnerRemarks != null" >
        #{zsAuditInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="zsAuditBy != null" >
        #{zsAuditBy,jdbcType=INTEGER},
      </if>
      <if test="zsCommitAuditDate != null" >
        #{zsCommitAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="zsAuditDate != null" >
        #{zsAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isZsAuditRecommit != null" >
        #{isZsAuditRecommit,jdbcType=CHAR},
      </if>
      <if test="auditInnerRemarks != null" >
        #{auditInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="auditBy != null" >
        #{auditBy,jdbcType=INTEGER},
      </if>
      <if test="commitAuditDate != null" >
        #{commitAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditDate != null" >
        #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isAuditRecommit != null" >
        #{isAuditRecommit,jdbcType=CHAR},
      </if>
      <if test="archiveStatus != null" >
        #{archiveStatus,jdbcType=CHAR},
      </if>
      <if test="expressId != null" >
        #{expressId,jdbcType=INTEGER},
      </if>
      <if test="expressNo != null" >
        #{expressNo,jdbcType=VARCHAR},
      </if>
      <if test="brandSource != null" >
        #{brandSource,jdbcType=CHAR},
      </if>
      <if test="delayStatus != null" >
        #{delayStatus,jdbcType=CHAR},
      </if>
      <if test="delayDays != null" >
        #{delayDays,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.entity.MchtProductBrandExample" resultType="java.lang.Integer" >
    select count(*) from bu_mcht_product_brand
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bu_mcht_product_brand
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mchtId != null" >
        mcht_id = #{record.mchtId,jdbcType=INTEGER},
      </if>
      <if test="record.productBrandId != null" >
        product_brand_id = #{record.productBrandId,jdbcType=INTEGER},
      </if>
      <if test="record.productBrandName != null" >
        product_brand_name = #{record.productBrandName,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null" >
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectionExpDate != null" >
        inspection_exp_date = #{record.inspectionExpDate,jdbcType=DATE},
      </if>
      <if test="record.otherExpDate != null" >
        other_exp_date = #{record.otherExpDate,jdbcType=DATE},
      </if>
      <if test="record.aptitudeType != null" >
        aptitude_type = #{record.aptitudeType,jdbcType=CHAR},
      </if>
      <if test="record.aptitudeExpDate != null" >
        aptitude_exp_date = #{record.aptitudeExpDate,jdbcType=DATE},
      </if>
      <if test="record.aptitudePic != null" >
        aptitude_pic = #{record.aptitudePic,jdbcType=VARCHAR},
      </if>
      <if test="record.platformAuthPic != null" >
        platform_auth_pic = #{record.platformAuthPic,jdbcType=VARCHAR},
      </if>
      <if test="record.platformAuthExpDate != null" >
        platform_auth_exp_date = #{record.platformAuthExpDate,jdbcType=DATE},
      </if>
      <if test="record.popCommissionRate != null" >
        pop_commission_rate = #{record.popCommissionRate,jdbcType=DECIMAL},
      </if>
      <if test="record.priceModel != null" >
        price_model = #{record.priceModel,jdbcType=CHAR},
      </if>
      <if test="record.priceModelDesc != null" >
        price_model_desc = #{record.priceModelDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.isActivity != null" >
        is_activity = #{record.isActivity,jdbcType=CHAR},
      </if>
      <if test="record.auditStatus != null" >
        audit_status = #{record.auditStatus,jdbcType=CHAR},
      </if>
      <if test="record.auditRemarks != null" >
        audit_remarks = #{record.auditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.isSpeciallyApproved != null" >
        is_specially_approved = #{record.isSpeciallyApproved,jdbcType=CHAR},
      </if>
      <if test="record.speciallyApprovedRemarks != null" >
        specially_approved_remarks = #{record.speciallyApprovedRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.speciallyApprovedSource != null" >
        specially_approved_source = #{record.speciallyApprovedSource,jdbcType=CHAR},
      </if>
      <if test="record.speciallyApprovedDate != null" >
        specially_approved_date = #{record.speciallyApprovedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statusRemarks != null" >
        status_remarks = #{record.statusRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.statusDate != null" >
        status_date = #{record.statusDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statusBy != null" >
        status_by = #{record.statusBy,jdbcType=INTEGER},
      </if>
      <if test="record.zsAuditStatus != null" >
        zs_audit_status = #{record.zsAuditStatus,jdbcType=CHAR},
      </if>
      <if test="record.zsAuditRemarks != null" >
        zs_audit_remarks = #{record.zsAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.zsAuditInnerRemarks != null" >
        zs_audit_inner_remarks = #{record.zsAuditInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.zsAuditBy != null" >
        zs_audit_by = #{record.zsAuditBy,jdbcType=INTEGER},
      </if>
      <if test="record.zsCommitAuditDate != null" >
        zs_commit_audit_date = #{record.zsCommitAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.zsAuditDate != null" >
        zs_audit_date = #{record.zsAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isZsAuditRecommit != null" >
        is_zs_audit_recommit = #{record.isZsAuditRecommit,jdbcType=CHAR},
      </if>
      <if test="record.auditInnerRemarks != null" >
        audit_inner_remarks = #{record.auditInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.auditBy != null" >
        audit_by = #{record.auditBy,jdbcType=INTEGER},
      </if>
      <if test="record.commitAuditDate != null" >
        commit_audit_date = #{record.commitAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditDate != null" >
        audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isAuditRecommit != null" >
        is_audit_recommit = #{record.isAuditRecommit,jdbcType=CHAR},
      </if>
      <if test="record.archiveStatus != null" >
        archive_status = #{record.archiveStatus,jdbcType=CHAR},
      </if>
      <if test="record.expressId != null" >
        express_id = #{record.expressId,jdbcType=INTEGER},
      </if>
      <if test="record.expressNo != null" >
        express_no = #{record.expressNo,jdbcType=VARCHAR},
      </if>
      <if test="record.brandSource != null" >
        brand_source = #{record.brandSource,jdbcType=CHAR},
      </if>
      <if test="record.delayStatus != null" >
        delay_status = #{record.delayStatus,jdbcType=CHAR},
      </if>
      <if test="record.delayDays != null" >
        delay_days = #{record.delayDays,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bu_mcht_product_brand
    set id = #{record.id,jdbcType=INTEGER},
      mcht_id = #{record.mchtId,jdbcType=INTEGER},
      product_brand_id = #{record.productBrandId,jdbcType=INTEGER},
      product_brand_name = #{record.productBrandName,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      inspection_exp_date = #{record.inspectionExpDate,jdbcType=DATE},
      other_exp_date = #{record.otherExpDate,jdbcType=DATE},
      aptitude_type = #{record.aptitudeType,jdbcType=CHAR},
      aptitude_exp_date = #{record.aptitudeExpDate,jdbcType=DATE},
      aptitude_pic = #{record.aptitudePic,jdbcType=VARCHAR},
      platform_auth_pic = #{record.platformAuthPic,jdbcType=VARCHAR},
      platform_auth_exp_date = #{record.platformAuthExpDate,jdbcType=DATE},
      pop_commission_rate = #{record.popCommissionRate,jdbcType=DECIMAL},
      price_model = #{record.priceModel,jdbcType=CHAR},
      price_model_desc = #{record.priceModelDesc,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      is_activity = #{record.isActivity,jdbcType=CHAR},
      audit_status = #{record.auditStatus,jdbcType=CHAR},
      audit_remarks = #{record.auditRemarks,jdbcType=VARCHAR},
      is_specially_approved = #{record.isSpeciallyApproved,jdbcType=CHAR},
      specially_approved_remarks = #{record.speciallyApprovedRemarks,jdbcType=VARCHAR},
      specially_approved_source = #{record.speciallyApprovedSource,jdbcType=CHAR},
      specially_approved_date = #{record.speciallyApprovedDate,jdbcType=TIMESTAMP},
      status_remarks = #{record.statusRemarks,jdbcType=VARCHAR},
      status_date = #{record.statusDate,jdbcType=TIMESTAMP},
      status_by = #{record.statusBy,jdbcType=INTEGER},
      zs_audit_status = #{record.zsAuditStatus,jdbcType=CHAR},
      zs_audit_remarks = #{record.zsAuditRemarks,jdbcType=VARCHAR},
      zs_audit_inner_remarks = #{record.zsAuditInnerRemarks,jdbcType=VARCHAR},
      zs_audit_by = #{record.zsAuditBy,jdbcType=INTEGER},
      zs_commit_audit_date = #{record.zsCommitAuditDate,jdbcType=TIMESTAMP},
      zs_audit_date = #{record.zsAuditDate,jdbcType=TIMESTAMP},
      is_zs_audit_recommit = #{record.isZsAuditRecommit,jdbcType=CHAR},
      audit_inner_remarks = #{record.auditInnerRemarks,jdbcType=VARCHAR},
      audit_by = #{record.auditBy,jdbcType=INTEGER},
      commit_audit_date = #{record.commitAuditDate,jdbcType=TIMESTAMP},
      audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      is_audit_recommit = #{record.isAuditRecommit,jdbcType=CHAR},
      archive_status = #{record.archiveStatus,jdbcType=CHAR},
      express_id = #{record.expressId,jdbcType=INTEGER},
      express_no = #{record.expressNo,jdbcType=VARCHAR},
      brand_source = #{record.brandSource,jdbcType=CHAR},
      delay_status = #{record.delayStatus,jdbcType=CHAR},
      delay_days = #{record.delayDays,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jf.entity.MchtProductBrand" >
    update bu_mcht_product_brand
    <set >
      <if test="mchtId != null" >
        mcht_id = #{mchtId,jdbcType=INTEGER},
      </if>
      <if test="productBrandId != null" >
        product_brand_id = #{productBrandId,jdbcType=INTEGER},
      </if>
      <if test="productBrandName != null" >
        product_brand_name = #{productBrandName,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="inspectionExpDate != null" >
        inspection_exp_date = #{inspectionExpDate,jdbcType=DATE},
      </if>
      <if test="otherExpDate != null" >
        other_exp_date = #{otherExpDate,jdbcType=DATE},
      </if>
      <if test="aptitudeType != null" >
        aptitude_type = #{aptitudeType,jdbcType=CHAR},
      </if>
      <if test="aptitudeExpDate != null" >
        aptitude_exp_date = #{aptitudeExpDate,jdbcType=DATE},
      </if>
      <if test="aptitudePic != null" >
        aptitude_pic = #{aptitudePic,jdbcType=VARCHAR},
      </if>
      <if test="platformAuthPic != null" >
        platform_auth_pic = #{platformAuthPic,jdbcType=VARCHAR},
      </if>
      <if test="platformAuthExpDate != null" >
        platform_auth_exp_date = #{platformAuthExpDate,jdbcType=DATE},
      </if>
      <if test="popCommissionRate != null" >
        pop_commission_rate = #{popCommissionRate,jdbcType=DECIMAL},
      </if>
      <if test="priceModel != null" >
        price_model = #{priceModel,jdbcType=CHAR},
      </if>
      <if test="priceModelDesc != null" >
        price_model_desc = #{priceModelDesc,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="isActivity != null" >
        is_activity = #{isActivity,jdbcType=CHAR},
      </if>
      <if test="auditStatus != null" >
        audit_status = #{auditStatus,jdbcType=CHAR},
      </if>
      <if test="auditRemarks != null" >
        audit_remarks = #{auditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="isSpeciallyApproved != null" >
        is_specially_approved = #{isSpeciallyApproved,jdbcType=CHAR},
      </if>
      <if test="speciallyApprovedRemarks != null" >
        specially_approved_remarks = #{speciallyApprovedRemarks,jdbcType=VARCHAR},
      </if>
      <if test="speciallyApprovedSource != null" >
        specially_approved_source = #{speciallyApprovedSource,jdbcType=CHAR},
      </if>
      <if test="speciallyApprovedDate != null" >
        specially_approved_date = #{speciallyApprovedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="statusRemarks != null" >
        status_remarks = #{statusRemarks,jdbcType=VARCHAR},
      </if>
      <if test="statusDate != null" >
        status_date = #{statusDate,jdbcType=TIMESTAMP},
      </if>
      <if test="statusBy != null" >
        status_by = #{statusBy,jdbcType=INTEGER},
      </if>
      <if test="zsAuditStatus != null" >
        zs_audit_status = #{zsAuditStatus,jdbcType=CHAR},
      </if>
      <if test="zsAuditRemarks != null" >
        zs_audit_remarks = #{zsAuditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="zsAuditInnerRemarks != null" >
        zs_audit_inner_remarks = #{zsAuditInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="zsAuditBy != null" >
        zs_audit_by = #{zsAuditBy,jdbcType=INTEGER},
      </if>
      <if test="zsCommitAuditDate != null" >
        zs_commit_audit_date = #{zsCommitAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="zsAuditDate != null" >
        zs_audit_date = #{zsAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isZsAuditRecommit != null" >
        is_zs_audit_recommit = #{isZsAuditRecommit,jdbcType=CHAR},
      </if>
      <if test="auditInnerRemarks != null" >
        audit_inner_remarks = #{auditInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="auditBy != null" >
        audit_by = #{auditBy,jdbcType=INTEGER},
      </if>
      <if test="commitAuditDate != null" >
        commit_audit_date = #{commitAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditDate != null" >
        audit_date = #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isAuditRecommit != null" >
        is_audit_recommit = #{isAuditRecommit,jdbcType=CHAR},
      </if>
      <if test="archiveStatus != null" >
        archive_status = #{archiveStatus,jdbcType=CHAR},
      </if>
      <if test="expressId != null" >
        express_id = #{expressId,jdbcType=INTEGER},
      </if>
      <if test="expressNo != null" >
        express_no = #{expressNo,jdbcType=VARCHAR},
      </if>
      <if test="brandSource != null" >
        brand_source = #{brandSource,jdbcType=CHAR},
      </if>
      <if test="delayStatus != null" >
        delay_status = #{delayStatus,jdbcType=CHAR},
      </if>
      <if test="delayDays != null" >
        delay_days = #{delayDays,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jf.entity.MchtProductBrand" >
    update bu_mcht_product_brand
    set mcht_id = #{mchtId,jdbcType=INTEGER},
      product_brand_id = #{productBrandId,jdbcType=INTEGER},
      product_brand_name = #{productBrandName,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      inspection_exp_date = #{inspectionExpDate,jdbcType=DATE},
      other_exp_date = #{otherExpDate,jdbcType=DATE},
      aptitude_type = #{aptitudeType,jdbcType=CHAR},
      aptitude_exp_date = #{aptitudeExpDate,jdbcType=DATE},
      aptitude_pic = #{aptitudePic,jdbcType=VARCHAR},
      platform_auth_pic = #{platformAuthPic,jdbcType=VARCHAR},
      platform_auth_exp_date = #{platformAuthExpDate,jdbcType=DATE},
      pop_commission_rate = #{popCommissionRate,jdbcType=DECIMAL},
      price_model = #{priceModel,jdbcType=CHAR},
      price_model_desc = #{priceModelDesc,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      is_activity = #{isActivity,jdbcType=CHAR},
      audit_status = #{auditStatus,jdbcType=CHAR},
      audit_remarks = #{auditRemarks,jdbcType=VARCHAR},
      is_specially_approved = #{isSpeciallyApproved,jdbcType=CHAR},
      specially_approved_remarks = #{speciallyApprovedRemarks,jdbcType=VARCHAR},
      specially_approved_source = #{speciallyApprovedSource,jdbcType=CHAR},
      specially_approved_date = #{speciallyApprovedDate,jdbcType=TIMESTAMP},
      status_remarks = #{statusRemarks,jdbcType=VARCHAR},
      status_date = #{statusDate,jdbcType=TIMESTAMP},
      status_by = #{statusBy,jdbcType=INTEGER},
      zs_audit_status = #{zsAuditStatus,jdbcType=CHAR},
      zs_audit_remarks = #{zsAuditRemarks,jdbcType=VARCHAR},
      zs_audit_inner_remarks = #{zsAuditInnerRemarks,jdbcType=VARCHAR},
      zs_audit_by = #{zsAuditBy,jdbcType=INTEGER},
      zs_commit_audit_date = #{zsCommitAuditDate,jdbcType=TIMESTAMP},
      zs_audit_date = #{zsAuditDate,jdbcType=TIMESTAMP},
      is_zs_audit_recommit = #{isZsAuditRecommit,jdbcType=CHAR},
      audit_inner_remarks = #{auditInnerRemarks,jdbcType=VARCHAR},
      audit_by = #{auditBy,jdbcType=INTEGER},
      commit_audit_date = #{commitAuditDate,jdbcType=TIMESTAMP},
      audit_date = #{auditDate,jdbcType=TIMESTAMP},
      is_audit_recommit = #{isAuditRecommit,jdbcType=CHAR},
      archive_status = #{archiveStatus,jdbcType=CHAR},
      express_id = #{expressId,jdbcType=INTEGER},
      express_no = #{expressNo,jdbcType=VARCHAR},
      brand_source = #{brandSource,jdbcType=CHAR},
      delay_status = #{delayStatus,jdbcType=CHAR},
      delay_days = #{delayDays,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.WithdrawOrderMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.WithdrawOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="acc_id" property="accId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="withdraw_type" property="withdrawType" jdbcType="CHAR" />
    <result column="coupon_id" property="couponId" jdbcType="INTEGER" />
    <result column="member_coupon_id" property="memberCouponId" jdbcType="INTEGER" />
    <result column="withdraw_cnf_id" property="withdrawCnfId" jdbcType="INTEGER" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="alipay_account" property="alipayAccount" jdbcType="VARCHAR" />
    <result column="withdraw_method" property="withdrawMethod" jdbcType="CHAR" />
    <result column="yy_audit_by" property="yyAuditBy" jdbcType="INTEGER" />
    <result column="yy_audit_status" property="yyAuditStatus" jdbcType="CHAR" />
    <result column="yy_audit_date" property="yyAuditDate" jdbcType="TIMESTAMP" />
    <result column="yy_reject_reason" property="yyRejectReason" jdbcType="VARCHAR" />
    <result column="yy_inner_remarks" property="yyInnerRemarks" jdbcType="VARCHAR" />
    <result column="cw_audit_by" property="cwAuditBy" jdbcType="INTEGER" />
    <result column="cw_audit_status" property="cwAuditStatus" jdbcType="CHAR" />
    <result column="cw_audit_date" property="cwAuditDate" jdbcType="TIMESTAMP" />
    <result column="cw_reject_reason" property="cwRejectReason" jdbcType="VARCHAR" />
    <result column="cw_inner_remarks" property="cwInnerRemarks" jdbcType="VARCHAR" />
    <result column="nova_balance" property="novaBalance" jdbcType="DECIMAL" />
    <result column="bank_branch_id" property="bankBranchId" jdbcType="INTEGER" />
    <result column="bank_id" property="bankId" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_code, member_id, acc_id, amount, status, withdraw_type, coupon_id, member_coupon_id, 
    withdraw_cnf_id, real_name, alipay_account, withdraw_method, yy_audit_by, yy_audit_status, 
    yy_audit_date, yy_reject_reason, yy_inner_remarks, cw_audit_by, cw_audit_status, 
    cw_audit_date, cw_reject_reason, cw_inner_remarks, nova_balance, bank_branch_id, 
    bank_id, create_by, create_date, update_by, update_date, remarks, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.WithdrawOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_withdraw_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_withdraw_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bu_withdraw_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jf.entity.WithdrawOrderExample" >
    delete from bu_withdraw_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.entity.WithdrawOrder" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_withdraw_order (order_code, member_id, acc_id, 
      amount, status, withdraw_type, 
      coupon_id, member_coupon_id, withdraw_cnf_id, 
      real_name, alipay_account, withdraw_method, 
      yy_audit_by, yy_audit_status, yy_audit_date, 
      yy_reject_reason, yy_inner_remarks, cw_audit_by, 
      cw_audit_status, cw_audit_date, cw_reject_reason, 
      cw_inner_remarks, nova_balance, bank_branch_id, 
      bank_id, create_by, create_date, 
      update_by, update_date, remarks, 
      del_flag)
    values (#{orderCode,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER}, #{accId,jdbcType=INTEGER}, 
      #{amount,jdbcType=DECIMAL}, #{status,jdbcType=CHAR}, #{withdrawType,jdbcType=CHAR}, 
      #{couponId,jdbcType=INTEGER}, #{memberCouponId,jdbcType=INTEGER}, #{withdrawCnfId,jdbcType=INTEGER}, 
      #{realName,jdbcType=VARCHAR}, #{alipayAccount,jdbcType=VARCHAR}, #{withdrawMethod,jdbcType=CHAR}, 
      #{yyAuditBy,jdbcType=INTEGER}, #{yyAuditStatus,jdbcType=CHAR}, #{yyAuditDate,jdbcType=TIMESTAMP}, 
      #{yyRejectReason,jdbcType=VARCHAR}, #{yyInnerRemarks,jdbcType=VARCHAR}, #{cwAuditBy,jdbcType=INTEGER}, 
      #{cwAuditStatus,jdbcType=CHAR}, #{cwAuditDate,jdbcType=TIMESTAMP}, #{cwRejectReason,jdbcType=VARCHAR}, 
      #{cwInnerRemarks,jdbcType=VARCHAR}, #{novaBalance,jdbcType=DECIMAL}, #{bankBranchId,jdbcType=INTEGER}, 
      #{bankId,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jf.entity.WithdrawOrder" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_withdraw_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="accId != null" >
        acc_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="withdrawType != null" >
        withdraw_type,
      </if>
      <if test="couponId != null" >
        coupon_id,
      </if>
      <if test="memberCouponId != null" >
        member_coupon_id,
      </if>
      <if test="withdrawCnfId != null" >
        withdraw_cnf_id,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="alipayAccount != null" >
        alipay_account,
      </if>
      <if test="withdrawMethod != null" >
        withdraw_method,
      </if>
      <if test="yyAuditBy != null" >
        yy_audit_by,
      </if>
      <if test="yyAuditStatus != null" >
        yy_audit_status,
      </if>
      <if test="yyAuditDate != null" >
        yy_audit_date,
      </if>
      <if test="yyRejectReason != null" >
        yy_reject_reason,
      </if>
      <if test="yyInnerRemarks != null" >
        yy_inner_remarks,
      </if>
      <if test="cwAuditBy != null" >
        cw_audit_by,
      </if>
      <if test="cwAuditStatus != null" >
        cw_audit_status,
      </if>
      <if test="cwAuditDate != null" >
        cw_audit_date,
      </if>
      <if test="cwRejectReason != null" >
        cw_reject_reason,
      </if>
      <if test="cwInnerRemarks != null" >
        cw_inner_remarks,
      </if>
      <if test="novaBalance != null" >
        nova_balance,
      </if>
      <if test="bankBranchId != null" >
        bank_branch_id,
      </if>
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderCode != null" >
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="accId != null" >
        #{accId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="withdrawType != null" >
        #{withdrawType,jdbcType=CHAR},
      </if>
      <if test="couponId != null" >
        #{couponId,jdbcType=INTEGER},
      </if>
      <if test="memberCouponId != null" >
        #{memberCouponId,jdbcType=INTEGER},
      </if>
      <if test="withdrawCnfId != null" >
        #{withdrawCnfId,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="alipayAccount != null" >
        #{alipayAccount,jdbcType=VARCHAR},
      </if>
      <if test="withdrawMethod != null" >
        #{withdrawMethod,jdbcType=CHAR},
      </if>
      <if test="yyAuditBy != null" >
        #{yyAuditBy,jdbcType=INTEGER},
      </if>
      <if test="yyAuditStatus != null" >
        #{yyAuditStatus,jdbcType=CHAR},
      </if>
      <if test="yyAuditDate != null" >
        #{yyAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="yyRejectReason != null" >
        #{yyRejectReason,jdbcType=VARCHAR},
      </if>
      <if test="yyInnerRemarks != null" >
        #{yyInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="cwAuditBy != null" >
        #{cwAuditBy,jdbcType=INTEGER},
      </if>
      <if test="cwAuditStatus != null" >
        #{cwAuditStatus,jdbcType=CHAR},
      </if>
      <if test="cwAuditDate != null" >
        #{cwAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cwRejectReason != null" >
        #{cwRejectReason,jdbcType=VARCHAR},
      </if>
      <if test="cwInnerRemarks != null" >
        #{cwInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="novaBalance != null" >
        #{novaBalance,jdbcType=DECIMAL},
      </if>
      <if test="bankBranchId != null" >
        #{bankBranchId,jdbcType=INTEGER},
      </if>
      <if test="bankId != null" >
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.entity.WithdrawOrderExample" resultType="java.lang.Integer" >
    select count(*) from bu_withdraw_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bu_withdraw_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderCode != null" >
        order_code = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.accId != null" >
        acc_id = #{record.accId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.withdrawType != null" >
        withdraw_type = #{record.withdrawType,jdbcType=CHAR},
      </if>
      <if test="record.couponId != null" >
        coupon_id = #{record.couponId,jdbcType=INTEGER},
      </if>
      <if test="record.memberCouponId != null" >
        member_coupon_id = #{record.memberCouponId,jdbcType=INTEGER},
      </if>
      <if test="record.withdrawCnfId != null" >
        withdraw_cnf_id = #{record.withdrawCnfId,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null" >
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.alipayAccount != null" >
        alipay_account = #{record.alipayAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawMethod != null" >
        withdraw_method = #{record.withdrawMethod,jdbcType=CHAR},
      </if>
      <if test="record.yyAuditBy != null" >
        yy_audit_by = #{record.yyAuditBy,jdbcType=INTEGER},
      </if>
      <if test="record.yyAuditStatus != null" >
        yy_audit_status = #{record.yyAuditStatus,jdbcType=CHAR},
      </if>
      <if test="record.yyAuditDate != null" >
        yy_audit_date = #{record.yyAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.yyRejectReason != null" >
        yy_reject_reason = #{record.yyRejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.yyInnerRemarks != null" >
        yy_inner_remarks = #{record.yyInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.cwAuditBy != null" >
        cw_audit_by = #{record.cwAuditBy,jdbcType=INTEGER},
      </if>
      <if test="record.cwAuditStatus != null" >
        cw_audit_status = #{record.cwAuditStatus,jdbcType=CHAR},
      </if>
      <if test="record.cwAuditDate != null" >
        cw_audit_date = #{record.cwAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cwRejectReason != null" >
        cw_reject_reason = #{record.cwRejectReason,jdbcType=VARCHAR},
      </if>
      <if test="record.cwInnerRemarks != null" >
        cw_inner_remarks = #{record.cwInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.novaBalance != null" >
        nova_balance = #{record.novaBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.bankBranchId != null" >
        bank_branch_id = #{record.bankBranchId,jdbcType=INTEGER},
      </if>
      <if test="record.bankId != null" >
        bank_id = #{record.bankId,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bu_withdraw_order
    set id = #{record.id,jdbcType=INTEGER},
      order_code = #{record.orderCode,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER},
      acc_id = #{record.accId,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=CHAR},
      withdraw_type = #{record.withdrawType,jdbcType=CHAR},
      coupon_id = #{record.couponId,jdbcType=INTEGER},
      member_coupon_id = #{record.memberCouponId,jdbcType=INTEGER},
      withdraw_cnf_id = #{record.withdrawCnfId,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      alipay_account = #{record.alipayAccount,jdbcType=VARCHAR},
      withdraw_method = #{record.withdrawMethod,jdbcType=CHAR},
      yy_audit_by = #{record.yyAuditBy,jdbcType=INTEGER},
      yy_audit_status = #{record.yyAuditStatus,jdbcType=CHAR},
      yy_audit_date = #{record.yyAuditDate,jdbcType=TIMESTAMP},
      yy_reject_reason = #{record.yyRejectReason,jdbcType=VARCHAR},
      yy_inner_remarks = #{record.yyInnerRemarks,jdbcType=VARCHAR},
      cw_audit_by = #{record.cwAuditBy,jdbcType=INTEGER},
      cw_audit_status = #{record.cwAuditStatus,jdbcType=CHAR},
      cw_audit_date = #{record.cwAuditDate,jdbcType=TIMESTAMP},
      cw_reject_reason = #{record.cwRejectReason,jdbcType=VARCHAR},
      cw_inner_remarks = #{record.cwInnerRemarks,jdbcType=VARCHAR},
      nova_balance = #{record.novaBalance,jdbcType=DECIMAL},
      bank_branch_id = #{record.bankBranchId,jdbcType=INTEGER},
      bank_id = #{record.bankId,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jf.entity.WithdrawOrder" >
    update bu_withdraw_order
    <set >
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="accId != null" >
        acc_id = #{accId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="withdrawType != null" >
        withdraw_type = #{withdrawType,jdbcType=CHAR},
      </if>
      <if test="couponId != null" >
        coupon_id = #{couponId,jdbcType=INTEGER},
      </if>
      <if test="memberCouponId != null" >
        member_coupon_id = #{memberCouponId,jdbcType=INTEGER},
      </if>
      <if test="withdrawCnfId != null" >
        withdraw_cnf_id = #{withdrawCnfId,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="alipayAccount != null" >
        alipay_account = #{alipayAccount,jdbcType=VARCHAR},
      </if>
      <if test="withdrawMethod != null" >
        withdraw_method = #{withdrawMethod,jdbcType=CHAR},
      </if>
      <if test="yyAuditBy != null" >
        yy_audit_by = #{yyAuditBy,jdbcType=INTEGER},
      </if>
      <if test="yyAuditStatus != null" >
        yy_audit_status = #{yyAuditStatus,jdbcType=CHAR},
      </if>
      <if test="yyAuditDate != null" >
        yy_audit_date = #{yyAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="yyRejectReason != null" >
        yy_reject_reason = #{yyRejectReason,jdbcType=VARCHAR},
      </if>
      <if test="yyInnerRemarks != null" >
        yy_inner_remarks = #{yyInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="cwAuditBy != null" >
        cw_audit_by = #{cwAuditBy,jdbcType=INTEGER},
      </if>
      <if test="cwAuditStatus != null" >
        cw_audit_status = #{cwAuditStatus,jdbcType=CHAR},
      </if>
      <if test="cwAuditDate != null" >
        cw_audit_date = #{cwAuditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cwRejectReason != null" >
        cw_reject_reason = #{cwRejectReason,jdbcType=VARCHAR},
      </if>
      <if test="cwInnerRemarks != null" >
        cw_inner_remarks = #{cwInnerRemarks,jdbcType=VARCHAR},
      </if>
      <if test="novaBalance != null" >
        nova_balance = #{novaBalance,jdbcType=DECIMAL},
      </if>
      <if test="bankBranchId != null" >
        bank_branch_id = #{bankBranchId,jdbcType=INTEGER},
      </if>
      <if test="bankId != null" >
        bank_id = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jf.entity.WithdrawOrder" >
    update bu_withdraw_order
    set order_code = #{orderCode,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      acc_id = #{accId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      status = #{status,jdbcType=CHAR},
      withdraw_type = #{withdrawType,jdbcType=CHAR},
      coupon_id = #{couponId,jdbcType=INTEGER},
      member_coupon_id = #{memberCouponId,jdbcType=INTEGER},
      withdraw_cnf_id = #{withdrawCnfId,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      alipay_account = #{alipayAccount,jdbcType=VARCHAR},
      withdraw_method = #{withdrawMethod,jdbcType=CHAR},
      yy_audit_by = #{yyAuditBy,jdbcType=INTEGER},
      yy_audit_status = #{yyAuditStatus,jdbcType=CHAR},
      yy_audit_date = #{yyAuditDate,jdbcType=TIMESTAMP},
      yy_reject_reason = #{yyRejectReason,jdbcType=VARCHAR},
      yy_inner_remarks = #{yyInnerRemarks,jdbcType=VARCHAR},
      cw_audit_by = #{cwAuditBy,jdbcType=INTEGER},
      cw_audit_status = #{cwAuditStatus,jdbcType=CHAR},
      cw_audit_date = #{cwAuditDate,jdbcType=TIMESTAMP},
      cw_reject_reason = #{cwRejectReason,jdbcType=VARCHAR},
      cw_inner_remarks = #{cwInnerRemarks,jdbcType=VARCHAR},
      nova_balance = #{novaBalance,jdbcType=DECIMAL},
      bank_branch_id = #{bankBranchId,jdbcType=INTEGER},
      bank_id = #{bankId,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
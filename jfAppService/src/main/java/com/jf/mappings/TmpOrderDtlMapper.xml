<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.TmpOrderDtlMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.TmpOrderDtl" >
    <result column="order_dtl_id" property="orderDtlId" jdbcType="INTEGER" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="plat_amount" property="platAmount" jdbcType="DECIMAL" />
    <result column="integral_amount" property="integralAmount" jdbcType="DECIMAL" />
    <result column="sub_order_id" property="subOrderId" jdbcType="INTEGER" />
    <result column="combine_order_id" property="combineOrderId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_dtl_id, pay_amount, plat_amount, integral_amount, sub_order_id, combine_order_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.TmpOrderDtlExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tmp_order_dtl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jf.entity.TmpOrderDtlExample" >
    delete from tmp_order_dtl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.entity.TmpOrderDtl" >
    insert into tmp_order_dtl (order_dtl_id, pay_amount, plat_amount, 
      integral_amount, sub_order_id, combine_order_id
      )
    values (#{orderDtlId,jdbcType=INTEGER}, #{payAmount,jdbcType=DECIMAL}, #{platAmount,jdbcType=DECIMAL}, 
      #{integralAmount,jdbcType=DECIMAL}, #{subOrderId,jdbcType=INTEGER}, #{combineOrderId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jf.entity.TmpOrderDtl" >
    insert into tmp_order_dtl
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderDtlId != null" >
        order_dtl_id,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="platAmount != null" >
        plat_amount,
      </if>
      <if test="integralAmount != null" >
        integral_amount,
      </if>
      <if test="subOrderId != null" >
        sub_order_id,
      </if>
      <if test="combineOrderId != null" >
        combine_order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderDtlId != null" >
        #{orderDtlId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="platAmount != null" >
        #{platAmount,jdbcType=DECIMAL},
      </if>
      <if test="integralAmount != null" >
        #{integralAmount,jdbcType=DECIMAL},
      </if>
      <if test="subOrderId != null" >
        #{subOrderId,jdbcType=INTEGER},
      </if>
      <if test="combineOrderId != null" >
        #{combineOrderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.entity.TmpOrderDtlExample" resultType="java.lang.Integer" >
    select count(*) from tmp_order_dtl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tmp_order_dtl
    <set >
      <if test="record.orderDtlId != null" >
        order_dtl_id = #{record.orderDtlId,jdbcType=INTEGER},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.platAmount != null" >
        plat_amount = #{record.platAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.integralAmount != null" >
        integral_amount = #{record.integralAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.subOrderId != null" >
        sub_order_id = #{record.subOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.combineOrderId != null" >
        combine_order_id = #{record.combineOrderId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tmp_order_dtl
    set order_dtl_id = #{record.orderDtlId,jdbcType=INTEGER},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      plat_amount = #{record.platAmount,jdbcType=DECIMAL},
      integral_amount = #{record.integralAmount,jdbcType=DECIMAL},
      sub_order_id = #{record.subOrderId,jdbcType=INTEGER},
      combine_order_id = #{record.combineOrderId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
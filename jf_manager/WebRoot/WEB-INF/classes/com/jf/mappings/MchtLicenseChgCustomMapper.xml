<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.MchtLicenseChgCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.MchtLicenseChgCustom" extends="com.jf.dao.MchtLicenseChgMapper.BaseResultMap" >
    <result column="mcht_code" property="mchtCode" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="product_type_name" property="productTypeName" jdbcType="VARCHAR" />
    <result column="fw_name" property="fwName" jdbcType="VARCHAR" />
    <result column="archive_status_desc" property="archiveStatusDesc" jdbcType="VARCHAR" />
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
   t.*,
   (select mi.mcht_code from bu_mcht_info mi where mi.del_flag = '0' and mi.id = t.mcht_id LIMIT 1 ) mcht_code,
   (select mi.company_name from bu_mcht_info mi where mi.del_flag = '0' and mi.id = t.mcht_id LIMIT 1 ) company_name,
   (select mi.shop_name from bu_mcht_info mi where mi.del_flag = '0' and mi.id = t.mcht_id LIMIT 1 ) shop_name,
   FUN_GET_STATUS_DESC("BU_MCHT_LICENSE_CHG","ARCHIVE_STATUS", t.archive_status) archive_status_desc,
   (select pt.name from bu_mcht_product_type mt, bu_product_type pt where mt.del_flag = '0' and pt.del_flag = '0' and mt.is_main = '1' and mt.status = '1' and pt.status = '1' and mt.mcht_id = t.mcht_id and mt.product_type_id = pt.id LIMIT 1 ) product_type_name,
   (select pc.contact_name from bu_mcht_platform_contact mpc,bu_platform_contact pc where mpc.mcht_id = t.mcht_id and mpc.platform_contact_id = pc.id and mpc.status='1' and pc.contact_type='7' and pc.status='0')fw_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MchtLicenseChgCustomExample" >
    select 
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_mcht_license_chg t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="countByExample" parameterType="com.jf.entity.MchtLicenseChgCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_mcht_license_chg t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="mchtLicenseChgHandleArchiveUpdate" parameterType="java.util.HashMap" >
		 update bu_mcht_license_chg set update_by = #{updateBy},update_date = #{updateDate}
		<if test="archiveDealStatus !=null and archiveDealStatus != ''">
		 	,archive_deal_status = #{archiveDealStatus}		
		</if>
		<if test="expressIdIsNull !=null and expressIdIsNull != ''">
			,${expressIdIsNull}
		</if>
		<if test="expressNoIsNull !=null and expressNoIsNull != ''">
			,${expressNoIsNull}
		</if>
		<if test="archiveDealRemarks != '' and archiveDealRemarks != null">
			,archive_deal_remarks = #{archiveDealRemarks}
		</if>	
		<if test="archiveDealInnerRemarks !='' and archiveDealInnerRemarks !=null">
			,archive_deal_inner_remarks = #{archiveDealInnerRemarks}
		</if>
		<if test="archiveDealInnerRemarksIsNull !='' and archiveDealInnerRemarksIsNull !=null">
			,${archiveDealInnerRemarksIsNull}
		</if>
		where id = #{id}
	</update>
</mapper>
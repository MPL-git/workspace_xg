<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.MchtMonthlyCollectionsCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.MchtMonthlyCollectionsCustom"  extends="com.jf.dao.MchtMonthlyCollectionsMapper.BaseResultMap">
     <result column="mcht_code" property="mchtCode" jdbcType="VARCHAR"/>
     <result column="mcht_short_name" property="mchtShortName" jdbcType="VARCHAR"/>
     <result column="mcht_shop_name" property="mchtShopName" jdbcType="VARCHAR"/>
     <result column="mcht_company_name" property="mchtCompanyName" jdbcType="VARCHAR"/>
     <result column="mcht_status_desc" property="mchtStatusDesc" jdbcType="VARCHAR"/>
     <result column="product_count" property="productCount" jdbcType="INTEGER"/>
     <result column="product_amount" property="productAmount" jdbcType="DECIMAL"/>
     <result column="mcht_preferential" property="mchtPreferential" jdbcType="DECIMAL"/>
     <result column="platform_preferential" property="platformPreferential" jdbcType="DECIMAL"/>
     <result column="integral_preferential" property="integralPreferential" jdbcType="DECIMAL"/>
     <result column="order_client_pay_amount" property="orderClientPayAmount" jdbcType="DECIMAL"/>
     <result column="commission_amount" property="commissionAmount" jdbcType="DECIMAL"/>
     <result column="total_amt" property="totalAmt" jdbcType="DECIMAL"/>
     <result column="pay_amt" property="payAmt" jdbcType="DECIMAL"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, collection_date, mcht_id, begin_unpay, order_amount, settle_amount, refund_amount, 
    return_amount, return_order_amount, need_pay_amount, pay_amount, end_unpay, create_by, 
    create_date, update_by, update_date, remarks, del_flag, deduction_deposit_total, 
    collection_product_amount, collection_product_count, collection_mcht_preferential, 
    collection_platform_preferential, collection_integral_preferential, collection_commission_amount, 
    refund_product_amount, refund_product_count, refund_mcht_preferential, refund_platform_preferential, 
    refund_integral_preferential, refund_commission_amount, discount, discount_desc, 
    discounted_end_need_pay,
    FUN_GET_STATUS_DESC("BU_MCHT_INFO","STATUS", (select b.status from bu_mcht_info b where b.id = a.mcht_id)) mcht_status_desc,
    (select b.mcht_code from bu_mcht_info b where b.id = a.mcht_id)mcht_code,
    (select b.short_name from bu_mcht_info b where b.id = a.mcht_id)mcht_short_name,
    (select b.shop_name from bu_mcht_info b where b.id = a.mcht_id)mcht_shop_name,
    (select b.company_name from bu_mcht_info b where b.id = a.mcht_id)mcht_company_name,
    (select md.total_amt from bu_mcht_deposit md where md.del_flag = '0' and md.mcht_id = a.mcht_id) total_amt,
	(select md.pay_amt from bu_mcht_deposit md where md.del_flag = '0' and md.mcht_id = a.mcht_id ) pay_amt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MchtMonthlyCollectionsCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_mcht_monthly_collections a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_mcht_monthly_collections a
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByExample" parameterType="com.jf.entity.MchtMonthlyCollectionsCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_mcht_monthly_collections a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
   <select id="selectNoMonthlyCollectionsOrderDtlList" resultMap="com.jf.dao.OrderDtlCustomMapper.BaseResultMap">
 select so.mcht_id, mi.mcht_type,od.* from bu_combine_order co, bu_sub_order so,bu_order_dtl od,bu_mcht_info mi where co.id=so.combine_order_id and so.id=od.sub_order_id and mi.id=so.mcht_id and co.del_flag='0'  and so.del_flag='0' and od.del_flag='0' and co.pay_status='1' and mi.mcht_type=#{mchtType} <if test="mchtCode!=null">and mi.mcht_code=#{mchtCode}</if> and not EXISTS(select mcc.id from bu_mcht_monthly_collections mcc where mcc.collection_date=#{collectionDate,jdbcType=VARCHAR} and mcc.mcht_id=so.mcht_id)   and od.is_give='0' and  DATE_FORMAT(co.pay_date,'%Y-%m')=#{collectionDate,jdbcType=VARCHAR}
 </select>
 
  <select id="selectCustomServiceOrderDList" resultMap="com.jf.dao.CustomerServiceOrderCustomMapper.BaseResultMap">
 select cso.*,so.mcht_id ,mi.mcht_type from bu_customer_service_order cso,bu_customer_service_status_log cssl,bu_sub_order so,bu_mcht_info mi where cso.id=cssl.service_order_id and cso.sub_order_id=so.id and mi.id=so.mcht_id and  cso.service_type='D' and cssl.pro_status='D2' and mi.mcht_type=#{mchtType} <if test="mchtCode!=null">and mi.mcht_code=#{mchtCode}</if> and not EXISTS(select mcc.id from bu_mcht_monthly_collections mcc where mcc.collection_date=#{collectionDate,jdbcType=VARCHAR} and mcc.mcht_id=so.mcht_id) and cso.del_flag='0' and cssl.del_flag='0' and  DATE_FORMAT(cssl.create_date,'%Y-%m')=#{collectionDate,jdbcType=VARCHAR}
 </select>
 
  <select id="selectCustomServiceOrderABList" resultMap="com.jf.dao.CustomerServiceOrderCustomMapper.BaseResultMap">
 select cso.*,so.mcht_id  from bu_customer_service_order cso,bu_customer_service_status_log cssl,bu_sub_order so,bu_mcht_info mi where cso.id=cssl.service_order_id and cso.sub_order_id=so.id and mi.id=so.mcht_id and mi.mcht_type=#{mchtType} <if test="mchtCode!=null">and mi.mcht_code=#{mchtCode}</if> and cso.service_type in ('A','B') and cssl.pro_status in ('A4','B7') and not EXISTS(select mmc.id from bu_mcht_monthly_collections mmc where mmc.collection_date=#{collectionDate,jdbcType=VARCHAR} and mmc.mcht_id=so.mcht_id) and cso.del_flag='0' and cssl.del_flag='0' and  DATE_FORMAT(cssl.create_date,'%Y-%m')=#{collectionDate,jdbcType=VARCHAR}
 </select>
 
 
  <select id="selectOrderDtlList4CustomServiceOrderAB" resultMap="com.jf.dao.OrderDtlCustomMapper.BaseResultMap">
 select od.*,so.mcht_id  from bu_customer_service_order cso,bu_customer_service_status_log cssl,bu_sub_order so,bu_order_dtl od,bu_mcht_info mi where cso.id=cssl.service_order_id and cso.sub_order_id=so.id and so.id=od.sub_order_id and mi.id=so.mcht_id and mi.mcht_type=#{mchtType} <if test="mchtCode!=null">and mi.mcht_code=#{mchtCode}</if> and  cso.service_type in ('A','B') and cssl.pro_status in ('A4','B7') and not EXISTS(select mmc.id from bu_mcht_monthly_collections mmc where mmc.collection_date=#{collectionDate,jdbcType=VARCHAR} and mmc.mcht_id=so.mcht_id) and cso.del_flag='0' and od.del_flag='0' and cssl.del_flag='0' and  DATE_FORMAT(cssl.create_date,'%Y-%m')=#{collectionDate,jdbcType=VARCHAR}
 </select>
 
  <select id="getListByYear" parameterType="map" resultMap="BaseResultMap" >
  	SELECT
  		mi.id as mcht_id,
		mi.mcht_code,
		mi.company_name as mcht_company_name,
		mi.shop_name as mcht_shop_name,
		(SELECT mmc.begin_unpay FROM bu_mcht_monthly_collections mmc where mmc.mcht_id = mi.id AND mmc.collection_date=#{beginDate} AND mmc.del_flag = '0')begin_unpay,
		SUM(mmc.collection_product_count-mmc.refund_product_count)product_count,
		SUM(mmc.collection_product_amount-mmc.refund_product_amount)product_amount,
		SUM(mmc.collection_mcht_preferential-mmc.refund_mcht_preferential)mcht_preferential,
		SUM(mmc.collection_platform_preferential-mmc.refund_platform_preferential)platform_preferential,
		SUM(mmc.collection_integral_preferential-mmc.refund_integral_preferential)integral_preferential,
		SUM(mmc.order_amount-mmc.return_amount)order_client_pay_amount,
		SUM(mmc.collection_commission_amount-mmc.refund_commission_amount)commission_amount,
		SUM(mmc.settle_amount-mmc.return_order_amount)settle_amount,
		SUM(mmc.refund_amount)refund_amount,
		SUM(mmc.pay_amount)pay_amount,
		SUM(mmc.deduction_deposit_total)deduction_deposit_total,
		SUM(mmc.discount)discount,
		(SELECT mmc.discounted_end_need_pay FROM bu_mcht_monthly_collections mmc where mmc.mcht_id = mi.id AND mmc.collection_date=#{endDate} AND mmc.del_flag = '0')discounted_end_need_pay
	FROM
		bu_mcht_monthly_collections mmc,
		bu_mcht_info mi
	WHERE
		mmc.mcht_id = mi.id
		AND mi.mcht_type = '2'
		AND mmc.collection_date<![CDATA[ >= ]]>#{beginDate}
		AND mmc.collection_date<![CDATA[ <= ]]>#{endDate}
		AND mmc.del_flag = '0'
		<if test="name!=null">
		AND (mi.company_name LIKE concat('%',#{name},'%') OR mi.shop_name LIKE concat('%',#{name},'%')) 
		</if>
		<if test="mchtCode!=null">
		AND mi.mcht_code=#{mchtCode}
		</if>
		<if test="productTypeId!=null and productTypeId != ''">
		AND mmc.mcht_id in (select mpt.mcht_id from bu_mcht_product_type mpt where mpt.del_flag = '0' and mmc.mcht_id=mpt.mcht_id and mpt.status = '1' and mpt.product_type_id=#{productTypeId})
		</if> 
		GROUP BY mi.id
 </select>
 
 <select id="getListByDay" parameterType="map" resultMap="BaseResultMap">
 	SELECT t.*,
			 t.collection_product_count-t.refund_product_count as product_count,
			 t.collection_product_amount-t.refund_product_amount as product_amount,
			 t.collection_mcht_preferential-t.refund_mcht_preferential as mcht_preferential,
			 t.collection_platform_preferential-t.refund_platform_preferential as platform_preferential,
			 t.collection_integral_preferential-t.refund_integral_preferential as integral_preferential,
			 t.order_amount-t.return_amount as order_client_pay_amount,
			 t.collection_commission_amount-t.refund_commission_amount as commission_amount,
			 t.settle_amount-t.return_order_amount as settle_amount,
			 t.begin_unpay+(t.settle_amount-t.return_order_amount)-t.refund_amount-t.pay_amount-t.deduction_deposit_total as discounted_end_need_pay
	FROM (SELECT
				mi.id as mcht_id,
				mi.mcht_code,
				mi.company_name as mcht_company_name,
				mi.shop_name as mcht_shop_name,
				IFNULL((SELECT mmc.end_unpay FROM bu_mcht_monthly_collections mmc WHERE mmc.mcht_id = mi.id AND mmc.collection_date=#{collectionDate} AND mmc.del_flag='0'),0)begin_unpay,
			    IFNULL(SUM(od.quantity),0)collection_product_count,
				IFNULL((SELECT SUM(od.quantity) FROM bu_refund_order ro,bu_customer_service_order cso WHERE ro.combine_order_id=co.id AND ro.service_order_id = cso.id AND cso.order_dtl_id = od.id),0)refund_product_count,
				IFNULL(SUM(od.sale_price),0)collection_product_amount,
				IFNULL((SELECT SUM(od.sale_price) FROM bu_refund_order ro,bu_customer_service_order cso WHERE ro.combine_order_id=co.id AND ro.service_order_id = cso.id AND cso.order_dtl_id = od.id),0)refund_product_amount,
				IFNULL(SUM(od.mcht_preferential),0)collection_mcht_preferential,
				IFNULL((SELECT SUM(od.mcht_preferential) FROM bu_refund_order ro,bu_customer_service_order cso WHERE ro.combine_order_id=co.id AND ro.service_order_id = cso.id AND cso.order_dtl_id = od.id),0)refund_mcht_preferential,
				IFNULL(SUM(od.platform_preferential),0)collection_platform_preferential,
				IFNULL((SELECT SUM(od.platform_preferential) FROM bu_refund_order ro,bu_customer_service_order cso WHERE ro.combine_order_id=co.id AND ro.service_order_id = cso.id AND cso.order_dtl_id = od.id),0)refund_platform_preferential,
				IFNULL(SUM(od.integral_preferential),0)collection_integral_preferential,
				IFNULL((SELECT SUM(od.integral_preferential) FROM bu_refund_order ro,bu_customer_service_order cso WHERE ro.combine_order_id=co.id AND ro.service_order_id = cso.id AND cso.order_dtl_id = od.id),0)refund_integral_preferential,
				IFNULL(SUM(od.pay_amount),0)order_amount,
				IFNULL((SELECT SUM(ro.refund_amount) FROM bu_refund_order ro,bu_customer_service_order cso WHERE ro.combine_order_id=co.id AND ro.service_order_id = cso.id AND cso.order_dtl_id = od.id),0)return_amount,
				IFNULL(SUM(od.commission_amount),0)collection_commission_amount,
				IFNULL((SELECT SUM(od.commission_amount) FROM bu_refund_order ro,bu_customer_service_order cso WHERE ro.combine_order_id=co.id AND ro.service_order_id = cso.id AND cso.order_dtl_id = od.id),0)refund_commission_amount,
				IFNULL(SUM(od.settle_amount),0)settle_amount,
				IFNULL((SELECT SUM(od.settle_amount) FROM bu_refund_order ro,bu_customer_service_order cso WHERE ro.combine_order_id=co.id AND ro.service_order_id = cso.id AND cso.order_dtl_id = od.id),0)return_order_amount,
				IFNULL((SELECT SUM(cso.amount) FROM bu_refund_order ro,bu_customer_service_order cso WHERE ro.combine_order_id=co.id AND ro.service_order_id = cso.id AND cso.service_type='D' AND DATE_FORMAT(ro.success_date,'%Y-%m-%d')<![CDATA[ >= ]]>#{beginDate} AND DATE_FORMAT(ro.success_date,'%Y-%m-%d')<![CDATA[ <= ]]>#{endDate}),0)refund_amount,
				IFNULL((SELECT SUM(ptml.pay_amount) FROM bu_pay_to_mcht_log ptml WHERE ptml.mcht_id = mi.id AND ptml.mcht_settle_order_id = od.mcht_settle_order_id AND ptml.type='1' AND DATE_FORMAT(ptml.pay_date,'%Y-%m-%d')<![CDATA[ >= ]]>#{beginDate} AND DATE_FORMAT(ptml.pay_date,'%Y-%m-%d')<![CDATA[ <= ]]>#{endDate}),0)pay_amount,
				IFNULL((SELECT SUM(ptml.deposit_amount) FROM bu_pay_to_mcht_log ptml WHERE ptml.mcht_id = mi.id AND ptml.mcht_settle_order_id = od.mcht_settle_order_id AND ptml.type='1' AND DATE_FORMAT(ptml.pay_date,'%Y-%m-%d')<![CDATA[ >= ]]>#{beginDate} AND DATE_FORMAT(ptml.pay_date,'%Y-%m-%d')<![CDATA[ <= ]]>#{endDate}),0)deduction_deposit_total
			FROM
				bu_mcht_info mi,
				bu_sub_order so,
				bu_combine_order co,
				bu_order_dtl od
			WHERE
				mi.mcht_type = '2'
				AND mi.del_flag = '0'
				AND so.mcht_id = mi.id
				AND co.id=so.combine_order_id
				AND co.STATUS = '1'
				AND DATE_FORMAT(co.pay_date,'%Y-%m-%d')<![CDATA[ >= ]]>#{beginDate}
				AND DATE_FORMAT(co.pay_date,'%Y-%m-%d')<![CDATA[ <= ]]>#{endDate}
				AND od.sub_order_id = so.id	
    			AND od.is_give = '0'
				AND od.del_flag = '0'
				<if test="name!=null">
				AND (mi.company_name LIKE concat('%',#{name},'%') OR mi.shop_name LIKE concat('%',#{name},'%')) 
				</if>
				<if test="mchtCode!=null">
				AND mi.mcht_code=#{mchtCode}
				</if>
				<if test="productTypeId!=null and productTypeId != ''">
		        AND mi.id in (select mpt.mcht_id from bu_mcht_product_type mpt where mpt.del_flag = '0' and mpt.mcht_id=mi.id and mpt.status = '1' and mpt.product_type_id=#{productTypeId})
		        </if>
			GROUP BY mi.id)t
 	
 </select>
 
 <select id="getMonthlyCollectionsByMonth" parameterType="java.util.HashMap" resultMap="BaseResultMap">
 	SELECT t.*,
 		   t.settle_amount-t.return_order_amount-t.refund_amount as need_pay_amount,
 		   t.begin_unpay+t.settle_amount-t.return_order_amount-t.refund_amount-t.pay_amount as end_unpay
    FROM (SELECT 
				mi.mcht_code,
				mi.short_name,
				mi.shop_name,
				mi.company_name,
				IFNULL((SELECT mmc.end_unpay FROM bu_mcht_monthly_collections mmc WHERE mmc.mcht_id = mi.id AND mmc.collection_date = #{collectionDate} AND mmc.del_flag='0'),0)begin_unpay,
				IFNULL(SUM(od.pay_amount),0)order_amount,
				IFNULL(SUM(od.settle_amount),0)settle_amount,
				IFNULL((SELECT SUM(ro.refund_amount) FROM bu_refund_order ro WHERE ro.combine_order_id = co.id AND ro.service_type IN ('A','B') AND DATE_FORMAT(success_date,'%Y-%m-%d')<![CDATA[ >= ]]>#{beginDate} AND DATE_FORMAT(success_date,'%Y-%m-%d')<![CDATA[ <= ]]>#{endDate} AND ro.del_flag='0'),0)return_amount,
				IFNULL((SELECT SUM(od.settle_amount) FROM bu_refund_order ro,bu_customer_service_order cso WHERE ro.combine_order_id=co.id AND ro.service_order_id = cso.id AND cso.order_dtl_id = od.id AND ro.service_type IN ('A','B')),0)return_order_amount,
				IFNULL((SELECT SUM(cso.amount) FROM bu_customer_service_order cso WHERE cso.service_type='D' AND cso.sub_order_id = so.id AND DATE_FORMAT(cso.create_date,'%Y-%m-%d')<![CDATA[ >= ]]>#{beginDate} AND DATE_FORMAT(cso.create_date,'%Y-%m-%d')<![CDATA[ <= ]]>#{endDate}),0)refund_amount,
				IFNULL((SELECT SUM(ptml.pay_amount) FROM bu_pay_to_mcht_log ptml WHERE ptml.mcht_id = mi.id AND ptml.mcht_settle_order_id = od.mcht_settle_order_id AND ptml.type='1' AND DATE_FORMAT(ptml.pay_date,'%Y-%m-%d')<![CDATA[ >= ]]>#{beginDate} AND DATE_FORMAT(ptml.pay_date,'%Y-%m-%d')<![CDATA[ <= ]]>#{endDate}),0)pay_amount
		   FROM 
				bu_mcht_info mi,bu_combine_order co,bu_sub_order so,bu_order_dtl od
		   WHERE 
				mi.id = so.mcht_id AND 
				so.combine_order_id = co.id AND 
				so.id = od.sub_order_id AND
				mi.mcht_type = '2' AND 
				co.`status`='1' AND 
				od.is_give='0' AND
				DATE_FORMAT(co.create_date,'%Y-%m-%d')<![CDATA[ >= ]]>#{beginDate} AND
				DATE_FORMAT(co.create_date,'%Y-%m-%d')<![CDATA[ <= ]]>#{beginEnd}
		   GROUP BY 
		   		mi.id
		   )t
 </select>
 
</mapper>
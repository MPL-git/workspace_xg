<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.NodeApproverCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.NodeApproverCustom"  extends="com.jf.dao.NodeApproverMapper.BaseResultMap">
   <result column="application_commit_date" property="applicationCommitDate" jdbcType="TIMESTAMP" />
 	  <result column="procedure_name" property="procedureName" jdbcType="VARCHAR" />
 	  <result column="application_name" property="applicationName" jdbcType="VARCHAR" />
 	  <result column="create_name" property="createName" jdbcType="VARCHAR" />
 	  <result column="department" property="department" jdbcType="VARCHAR" />
 	  
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
  id, node_id, approver, status, create_by, create_date, update_by, update_date, remarks, 
    del_flag,
    (select aa.commit_date from bu_approval_application_node aan, bu_approval_application aa where aan.approval_application_id = aa.id  and aan.id = na.node_id and aa.del_flag = "0" ) application_commit_date,
	(select p.name from bu_approval_application_node aan,bu_approval_application aa , bu_procedure p where aan.id = na.node_id and aa.id = aan.approval_application_id and aa.procedure_id = p.id) procedure_name,
	 (select aa.name from bu_approval_application_node aan, bu_approval_application aa where aan.id = na.node_id and aan.approval_application_id = aa.id ) application_name,
	(select si.STAFF_NAME from sys_staff_info si where si.STAFF_ID = na.create_by)create_name,
	(select so.ORG_NAME from sys_staff_info si , sys_organization so where si.STAFF_ID = na.create_by and si.ORG_ID = so.ORG_ID )department
  </sql>
 
  <select id="selectCustomByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.NodeApproverCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_node_approver na
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>

   <select id="selectCustomByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
       from bu_node_approver na
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  
  
  <select id="countCustomByExample" parameterType="com.jf.entity.NodeApproverCustomExample" resultType="java.lang.Integer" >
    select count(*)  from bu_node_approver na
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
</mapper>
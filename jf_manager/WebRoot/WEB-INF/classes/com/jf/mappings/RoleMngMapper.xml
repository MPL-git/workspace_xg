<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jf.dao.RoleMngMapper"> 
    <sql id="queryDataList-condition">
        SELECT T.ROLE_ID,
		       T.ROLE_NAME,
		       T.ROLE_DESC,
		       T.PARENT_ID,
		       (SELECT SR.ROLE_NAME
		          FROM SYS_ROLE_INFO SR
		         WHERE SR.ROLE_ID = T.PARENT_ID
		           AND SR.STATUS = 'A') PARENT_ROLE_NAME,
		       date_format(T.CREATE_DATE,'%Y-%m-%d')  CREATE_DATE,
		       date_format(T.STATUS_DATE,'%Y-%m-%d')  STATUS_DATE,
		       T.STATUS,
		       FUN_GET_STATUS_DESC('SYS_ROLE_INFO', 'STATUS', T.STATUS)  STATUS_NAME,
		       (SELECT STAFF_NAME
		          FROM SYS_STAFF_INFO F
		         WHERE F.STAFF_ID = T.CREATE_STAFF_ID
		           AND F.STATUS = 'A'
		           LIMIT 1) CREATE_STAFF_ID,
		       (SELECT STAFF_NAME
		          FROM SYS_STAFF_INFO F
		         WHERE F.STAFF_ID = T.MODIFY_STAFF_ID
		           AND F.STATUS = 'A'
		           LIMIT 1) MODIFY_STAFF_ID,
		       <if test="CHECK_STAFF_ID!=null and CHECK_STAFF_ID!=''">
		       (SELECT IF(COUNT(1) = 0, '', '√') IF_CONFIG
		          FROM SYS_STAFF_ROLE T1 
		         WHERE T1.STATUS='A'
		           AND T1.STAFF_ID=${CHECK_STAFF_ID}
		           AND T1.ROLE_ID=T.ROLE_ID
		           LIMIT 1)  IF_CONFIG,    
		        </if>
		       T.ROLE_TYPE,
		       FUN_GET_STATUS_DESC('SYS_ROLE_INFO', 'ROLE_TYPE', T.ROLE_TYPE) ROLE_TYPE_NAME
		  FROM SYS_ROLE_INFO T
		 WHERE 1=1
		 AND STATUS='A'
		 <if test="ROLE_NAME !=null and ROLE_NAME != ''">
		   AND T.ROLE_NAME LIKE '%${ROLE_NAME}%'
		 </if>
		 <if test="ROLE_TYPE !=null and ROLE_TYPE != ''">
		   AND T.ROLE_TYPE = #{ROLE_TYPE}
		 </if>
		  <!-- 是否已授权 1已授权 0 未授权 -->
		 <if test="IF_CONFIG !=null and IF_CONFIG != '' and IF_CONFIG ==1">
		   AND EXISTS (SELECT 1
		          FROM SYS_STAFF_ROLE T1 
		         WHERE T1.STATUS='A'
		           AND T1.STAFF_ID=#{CHECK_STAFF_ID}
		           AND T1.ROLE_ID=T.ROLE_ID
		           LIMIT 1)  
		 </if>
		  <if test="IF_CONFIG !=null and IF_CONFIG != '' and IF_CONFIG ==0">
		   AND NOT EXISTS (SELECT 1
		          FROM SYS_STAFF_ROLE T1 
		         WHERE T1.STATUS='A'
		           AND T1.STAFF_ID=#{CHECK_STAFF_ID}
		           AND T1.ROLE_ID=T.ROLE_ID
		           LIMIT 1)  
		 </if>
		 <if test="CUR_ROLE_ID !=null and CUR_ROLE_ID != ''">
		   AND T.ROLE_ID = #{CUR_ROLE_ID} 
		 </if>
		 <if test="STAFF_ID !=null and STAFF_ID != ''">
		   AND T.STATUS='A'
		   AND EXISTS (SELECT 1 
		                 FROM SYS_STAFF_ROLE SR 
		                WHERE SR.ROLE_ID =T.ROLE_ID 
		                  AND SR.STATUS='A'
		                  AND SR.STAFF_ID=#{STAFF_ID}
		                  UNION ALL 
		                SELECT 1 
		                 FROM DUAL 
		                 WHERE T.CREATE_STAFF_ID=#{STAFF_ID}
		                 )
		 </if>
		 
		 <!-- 验证唯一 START -->
		 <if test="CHECK_ROLE_NAME !=null and CHECK_ROLE_NAME != ''">
		   AND T.ROLE_NAME =#{CHECK_ROLE_NAME}
		 </if>
		 <if test="CHECK_ROLE_ID !=null and CHECK_ROLE_ID != ''">
		   AND T.ROLE_ID != #{CHECK_ROLE_ID} 
		 </if>
		 ORDER BY T.ROLE_TYPE ASC, T.ROLE_NAME ASC
		 <!-- 验证唯一 END -->
		 
		  
    
    </sql>
     <!-- 查询 统计 -->
    <select id="queryDataCount" parameterType="java.util.HashMap" resultType="java.lang.Integer"  >  
		SELECT count(*) totalNum FROM (
		<include refid="queryDataList-condition"/>
		) TAB 
    </select>
    <!-- 查询 清单 -->
    <select id="queryDataList" parameterType="java.util.HashMap" resultType="java.util.HashMap"  >  
		SELECT * FROM (
		<include refid="queryDataList-condition"/>
		) TAB 
        <if test="MAX_NUM!=null and MAX_NUM!=''">
			LIMIT ${MIN_NUM},${MAX_NUM}
	       </if>

    </select>
    <!--   T.ROLE_ID, -->
    <insert id="saveData" parameterType="java.util.HashMap">
      INSERT INTO SYS_ROLE_INFO(
		       ROLE_NAME,
		       ROLE_DESC,
		       PARENT_ID,
		       CREATE_DATE,
		       STATUS,
		       STATUS_DATE,
		       CREATE_STAFF_ID,
		       MODIFY_STAFF_ID,
		       ROLE_TYPE)
	    VALUES(#{ROLE_NAME},
	           #{ROLE_DESC},
	           #{PARENT_ID},
	           SYSDATE() ,
	           'A',
	           SYSDATE() ,
	           #{STAFF_ID},
	           #{STAFF_ID},
	           #{ROLE_TYPE}
	          )
    </insert>
    <update id="updateData" parameterType="java.util.HashMap">
      UPDATE SYS_ROLE_INFO
	     SET ROLE_NAME=#{ROLE_NAME},
	         ROLE_DESC=#{ROLE_DESC},
	         PARENT_ID=#{PARENT_ID},
	         ROLE_TYPE=#{ROLE_TYPE},
	         MODIFY_STAFF_ID=#{STAFF_ID},
	         STATUS_DATE= SYSDATE()
	   WHERE ROLE_ID=#{ROLE_ID}
    </update>
    
    <update id="deleteData" parameterType="java.util.HashMap">
      UPDATE SYS_ROLE_INFO
	     SET STATUS='P',
	         MODIFY_STAFF_ID=#{STAFF_ID},
	         STATUS_DATE= SYSDATE()
	   WHERE ROLE_ID  in(${ROLE_ID})
    </update>

     <resultMap type="com.gzs.common.beans.Menu" id="queryStaffMenusList-map">
    	<id column="MENU_ID" property="menuID" />
		<result column="MENU_CODE" property="menuCode" />
		<result column="MENU_NAME" property="menuName" />
		<result column="MENU_DESC" property="menuDesc" />
		<result column="PARENT_ID" property="parentID" />
		<result column="MENU_PATH" property="menuPath" />
		<result column="MENU_ORDER" property="menuOrder" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="STATUS" property="status" />
		<result column="STATUS_DATE" property="statusDate" />
		<result column="CREATE_STAFF_ID" property="createStaffID" />
		<result column="MODIFY_STAFF_ID" property="modifyStaffID" />
		<result column="IS_CHECK" property="isCheck" />
    </resultMap>
    <!--   
    <select id="selectMenuTree" resultMap="resultMenu">
    	SELECT * FROM SYS_MENU A WHERE A.STATUS = 'A'
    </select>
  
   -->
     <!-- 用户菜单列表 -->
    <select id="queryStaffMenusList" parameterType="java.util.HashMap" resultMap="queryStaffMenusList-map" flushCache="true">
        SELECT         TAB.MENU_ID, 
		               TAB.PARENT_ID , 
		               IF(TAB.IS_CHECK='true',CONCAT(TAB.MENU_NAME,' &lt;font color="red" &gt;√&lt;/font&gt;'),TAB.MENU_NAME) MENU_NAME,
                       TAB.IS_CHECK
          FROM (
		        SELECT M.MENU_ID, 
		               M.PARENT_ID , 
		               M.MENU_NAME, 
		               M.MENU_PATH MENU_PATH,
		               M.MENU_ORDER,
				       date_format(M.CREATE_DATE,'%Y-%m-%d')  CREATE_DATE,
				       date_format(M.STATUS_DATE,'%Y-%m-%d')  STATUS_DATE,
		               M.STATUS,
		               M.CREATE_STAFF_ID,
		               M.MODIFY_STAFF_ID,
		        <!--     (SELECT IF(COUNT(*) = 0, 0, 1) HAS_CHILD
				          FROM SYS_MENU T1
				         WHERE T1.STATUS = 'A'
				           AND T1.PARENT_ID = M.MENU_ID) HAS_CHILD, -->    
		              (SELECT IF(COUNT(*) = 0, '', 'true') IS_CHECK  
		                 FROM SYS_ROLE_MENU RM 
		                WHERE RM.MENU_ID=M.MENU_ID
		                  AND RM.ROLE_ID= #{CHECK_ROLE_ID}
		                  AND RM.STATUS=M.STATUS ) IS_CHECK
				  FROM SYS_MENU M
				 WHERE M.STATUS = 'A'
				   AND MENU_ID IN (SELECT D.MENU_ID
				                     FROM SYS_STAFF_ROLE B, SYS_ROLE_MENU D
				                    WHERE B.ROLE_ID = D.ROLE_ID
				                      AND B.STAFF_ID = #{STAFF_ID}
				                      AND B.STATUS = 'A'
				                      AND D.STATUS = 'A')
				   <if test="PARENT_ROLE_ID != null and PARENT_ROLE_ID != ''">
				   AND MENU_ID IN (SELECT T1.MENU_ID 
				   				   FROM (SELECT B.MENU_ID 
				   				   		 	FROM SYS_ROLE_MENU B 
				   				   		 	WHERE B.ROLE_ID = #{ROLE_ID} AND B.STATUS = 'A') T1,
				   						(SELECT D.MENU_ID
				                     		FROM SYS_ROLE_MENU D
				                    		WHERE D.ROLE_ID = #{PARENT_ROLE_ID}
				                      		AND D.STATUS = 'A') T2
				                   WHERE T1.MENU_ID = T2.MENU_ID)
				   </if>
				 ORDER BY PARENT_ID, M.MENU_ORDER
		 )TAB


    </select>
	<!-- 用户菜单列表已勾选的 -->
	<select id="queryCheckedStaffMenusList" parameterType="java.util.HashMap" resultMap="queryStaffMenusList-map" flushCache="true">
		SELECT         TAB.MENU_ID,
		TAB.PARENT_ID ,
		IF(TAB.IS_CHECK='true',CONCAT(TAB.MENU_NAME,' &lt;font color="red" &gt;√&lt;/font&gt;'),TAB.MENU_NAME) MENU_NAME,
		TAB.IS_CHECK
		FROM (
		SELECT M.MENU_ID,
		M.PARENT_ID ,
		M.MENU_NAME,
		M.MENU_PATH MENU_PATH,
		M.MENU_ORDER,
		date_format(M.CREATE_DATE,'%Y-%m-%d')  CREATE_DATE,
		date_format(M.STATUS_DATE,'%Y-%m-%d')  STATUS_DATE,
		M.STATUS,
		M.CREATE_STAFF_ID,
		M.MODIFY_STAFF_ID,
		<!--     (SELECT IF(COUNT(*) = 0, 0, 1) HAS_CHILD
                  FROM SYS_MENU T1
                 WHERE T1.STATUS = 'A'
                   AND T1.PARENT_ID = M.MENU_ID) HAS_CHILD, -->
		(SELECT IF(COUNT(*) = 0, '', 'true') IS_CHECK
		FROM SYS_ROLE_MENU RM
		WHERE RM.MENU_ID=M.MENU_ID
		AND RM.ROLE_ID= #{CHECK_ROLE_ID}
		AND RM.STATUS=M.STATUS ) IS_CHECK
		FROM SYS_MENU M
		WHERE M.STATUS = 'A'
		AND MENU_ID IN (SELECT D.MENU_ID
		FROM SYS_STAFF_ROLE B, SYS_ROLE_MENU D
		WHERE B.ROLE_ID = D.ROLE_ID
		AND B.STAFF_ID = #{STAFF_ID}
		AND B.STATUS = 'A'
		AND D.STATUS = 'A')
		<if test="PARENT_ROLE_ID != null and PARENT_ROLE_ID != ''">
			AND MENU_ID IN (SELECT T1.MENU_ID
			FROM (SELECT B.MENU_ID
			FROM SYS_ROLE_MENU B
			WHERE B.ROLE_ID = #{ROLE_ID} AND B.STATUS = 'A') T1,
			(SELECT D.MENU_ID
			FROM SYS_ROLE_MENU D
			WHERE D.ROLE_ID = #{PARENT_ROLE_ID}
			AND D.STATUS = 'A') T2
			WHERE T1.MENU_ID = T2.MENU_ID)
		</if>
		ORDER BY PARENT_ID, M.MENU_ORDER
		)TAB WHERE TAB.IS_CHECK='true'
	</select>


    <insert id="insertStaffMenusPreTmp"  parameterType="java.util.HashMap">
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
             INSERT TMP_SYS_MENU (MENU_ID, OPERATOR_SEQ)
              SELECT D.MENU_ID,#{operatorSeq}
                FROM SYS_STAFF_ROLE B, SYS_ROLE_MENU D
               WHERE B.ROLE_ID = D.ROLE_ID
                 AND B.STAFF_ID = #{STAFF_ID}
                 AND B.STATUS = 'A'
                 AND D.STATUS = 'A'
    </insert>
    
    <!--  菜单权限新增前，注销原权限 -->
    <update id="insertStaffMenusPreX" parameterType="java.util.HashMap">
        UPDATE SYS_ROLE_MENU 
           SET STATUS='P' ,
               STATUS_DATE=SYSDATE(),
               MODIFY_STAFF_ID=#{STAFF_ID}
         WHERE ROLE_ID=  #{ROLE_ID}
           AND STATUS='A'
           AND MENU_ID IN  (SELECT MENU_ID FROM TMP_SYS_MENU WHERE OPERATOR_SEQ=#{operatorSeq})
    </update>
 
    <delete id="insertStaffMenusTmpDel" parameterType="java.util.HashMap">
        DELETE FROM TMP_SYS_MENU WHERE OPERATOR_SEQ=#{operatorSeq}
    </delete>
    
    <insert id="insertStaffMenus"  parameterType="java.util.HashMap" flushCache="true">
      INSERT SYS_ROLE_MENU  (
				ROLE_ID,
				MENU_ID,
				CREATE_DATE,
				STATUS,
				STATUS_DATE,
				CREATE_STAFF_ID,
				MODIFY_STAFF_ID
				)      
         SELECT DISTINCT ${ROLE_ID} ROLE_ID,
                MENU_ID,
                SYSDATE() CREATE_DATE,
                'A' STATUS,
                SYSDATE() STATUS_DATE,
                ${STAFF_ID} CREATE_STAFF_ID,
                ${STAFF_ID} MODIFY_STAFF_ID
		  FROM SYS_MENU M
		 WHERE M.STATUS = 'A'
		   AND EXISTS
		 (SELECT 1
		          FROM SYS_MENU M1
		         WHERE M1.MENU_ID IN (${CHECK_MENUS})
		           AND M1.STATUS = M.STATUS
		           AND FIND_IN_SET(M.MENU_ID, FUN_GET_PARENT_MENU(M1.MENU_ID)))
    </insert>
  
   <!--获取角色类型集合-->  
  <select id="getroletypeNameList" resultType="java.util.Map">
  	SELECT DISTINCT
	T.ROLE_TYPE,
    FUN_GET_STATUS_DESC('SYS_ROLE_INFO', 'ROLE_TYPE', T.ROLE_TYPE) ROLE_TYPE_NAME
    FROM SYS_ROLE_INFO T
    WHERE T.STATUS = 'A' 
  </select>

	<insert id="newInsertStaffMenus" parameterType="java.util.HashMap" flushCache="true">
      INSERT SYS_ROLE_MENU  (
				ROLE_ID,
				MENU_ID,
				CREATE_DATE,
				STATUS,
				STATUS_DATE,
				CREATE_STAFF_ID,
				MODIFY_STAFF_ID
				)
         SELECT DISTINCT ${ROLE_ID} ROLE_ID,
                MENU_ID,
                SYSDATE() CREATE_DATE,
                'A' STATUS,
                SYSDATE() STATUS_DATE,
                ${STAFF_ID} CREATE_STAFF_ID,
                ${STAFF_ID} MODIFY_STAFF_ID
		  FROM SYS_MENU
		 WHERE STATUS = 'A'
		   AND MENU_ID IN (${menuParentIds})
    </insert>
	<!--由于没有MenuMapper,在这简单创建两个查询方法-->
	<!--根据CHECK_MENUS查询Menus-->
	<select id="queryMenusList" parameterType="java.util.HashMap" resultMap="queryStaffMenusList-map" flushCache="true">
		SELECT MENU_ID,MENU_CODE,MENU_NAME,MENU_DESC,PARENT_ID,MENU_PATH,MENU_ORDER,CREATE_DATE,STATUS,STATUS_DATE,CREATE_STAFF_ID,MODIFY_STAFF_ID
		FROM sys_menu
		WHERE STATUS = 'A'
		AND MENU_ID IN (${CHECK_MENUS})
	</select>
	<!--根据id查询Menu-->
	<select id="selectMenuByPrimaryKey" resultMap="queryStaffMenusList-map" parameterType="java.lang.Integer" >
		select MENU_ID,MENU_CODE,MENU_NAME,MENU_DESC,PARENT_ID,MENU_PATH,MENU_ORDER,CREATE_DATE,STATUS,STATUS_DATE,CREATE_STAFF_ID,MODIFY_STAFF_ID
		from sys_menu
		where MENU_ID = #{id}
	</select>
	
	
 <!-- 查询用户菜单权限 -->
 <select id="getRoleIdMenusList" parameterType="java.util.HashMap" resultMap="queryStaffMenusList-map" flushCache="true">
  SELECT
	TAB.MENU_ID,
	TAB.PARENT_ID,
	TAB.MENU_NAME
  FROM
	(
		SELECT
			M.MENU_ID,
			M.PARENT_ID,
			M.MENU_NAME,
			M.MENU_PATH MENU_PATH,
			M.MENU_ORDER,
			date_format(M.CREATE_DATE, '%Y-%m-%d') CREATE_DATE,
			date_format(M.STATUS_DATE, '%Y-%m-%d') STATUS_DATE,
			M. STATUS,
			M.CREATE_STAFF_ID,
			M.MODIFY_STAFF_ID
		FROM
			SYS_MENU M
		WHERE
			M. STATUS = 'A'
		AND MENU_ID IN (
			SELECT
				D.MENU_ID
			FROM
				SYS_STAFF_ROLE B,
				SYS_ROLE_MENU D
			WHERE
				B.ROLE_ID = D.ROLE_ID
			AND B.STAFF_ID =#{STAFF_ID}
			AND B. STATUS = 'A'
			AND D. STATUS = 'A'
		)
       AND MENU_ID IN (
			SELECT
               RM.MENU_ID
			FROM
				SYS_ROLE_MENU RM
			WHERE
				RM.MENU_ID = M.MENU_ID
			AND RM.ROLE_ID IN
			<foreach collection="getRoleIdList" item="getRoleId" index="index" open="(" close=")" separator=",">
	           #{getRoleId}
			</foreach>
			AND RM. STATUS = M. STATUS
		)
		ORDER BY
			PARENT_ID,
			M.MENU_ORDER
	) TAB
   </select>
</mapper>
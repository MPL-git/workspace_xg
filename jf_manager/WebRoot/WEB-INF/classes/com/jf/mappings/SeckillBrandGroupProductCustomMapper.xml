<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.SeckillBrandGroupProductCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.SeckillBrandGroupProductCustom" extends="com.jf.dao.SeckillBrandGroupProductMapper.BaseResultMap" >
    <result column="product_pic" property="productPic" jdbcType="VARCHAR" />
    <result column="product_art_no" property="productArtNo" jdbcType="VARCHAR" />
    <result column="product_code" property="productCode" jdbcType="VARCHAR" />
    <result column="product_brand_name" property="productBrandName" jdbcType="VARCHAR" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_activity_price" property="productActivityPrice" jdbcType="DECIMAL" />
    <result column="discount" property="discount" jdbcType="VARCHAR" />
    <result column="stock_sum" property="stockSum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, seckill_brand_group_id, single_product_activity_id, create_by, create_date, update_by, 
    update_date, remarks, del_flag,
    (select pp.pic from bu_single_product_activity spa, bu_product p, bu_product_pic pp where p.del_flag = '0' and spa.del_flag = '0' and pp.del_flag = '0' and spa.type = '3' and spa.is_close = '0' and spa.audit_status = '3' and spa.product_id = p.id and spa.id = t.single_product_activity_id and pp.is_default = '1' and p.id = pp.product_id order by pp.id desc limit 1 ) product_pic,
    (select p.art_no from bu_single_product_activity spa, bu_product p where p.del_flag = '0' and spa.del_flag = '0' and spa.type = '3' and spa.is_close = '0' and spa.audit_status = '3' and spa.product_id = p.id and spa.id = t.single_product_activity_id ) product_art_no,
    (select p.code from bu_single_product_activity spa, bu_product p where p.del_flag = '0' and spa.del_flag = '0' and spa.type = '3' and spa.is_close = '0' and spa.audit_status = '3' and spa.product_id = p.id and spa.id = t.single_product_activity_id ) product_code,
    (select pb.name from bu_single_product_activity spa, bu_product p, bu_product_brand pb where pb.del_flag = '0' and p.del_flag = '0' and spa.del_flag = '0' and spa.type = '3' and spa.is_close = '0' and spa.audit_status = '3' and spa.product_id = p.id and p.brand_id = pb.id and spa.id = t.single_product_activity_id order by pb.id desc limit 1 ) product_brand_name,
  	(select mi.shop_name from bu_single_product_activity spa, bu_mcht_info mi where mi.del_flag = '0' and spa.del_flag = '0' and spa.type = '3' and spa.is_close = '0' and spa.audit_status = '3' and spa.mcht_id = mi.id and spa.id = t.single_product_activity_id ) shop_name,
  	(select p.name from bu_single_product_activity spa, bu_product p where p.del_flag = '0' and spa.del_flag = '0' and spa.type = '3' and spa.is_close = '0' and spa.audit_status = '3' and spa.product_id = p.id and spa.id = t.single_product_activity_id ) product_name,
  	(select spa.activity_price from bu_single_product_activity spa where spa.del_flag = '0' and spa.type = '3' and spa.is_close = '0' and spa.audit_status = '3' and spa.id = t.single_product_activity_id ) product_activity_price,
  	<![CDATA[
  		(select TRUNCATE(IFNULL(spa.activity_price/MAX(pi.tag_price), 0)*10, 1) from bu_single_product_activity spa, bu_product_item pi where pi.del_flag = '0' and spa.del_flag = '0' and spa.type = '3' and spa.is_close = '0' and spa.audit_status = '3' and spa.product_id = pi.product_id and spa.id = t.single_product_activity_id ) discount,
  	]]>
  	(select IFNULL(SUM(pi.stock), 0) from bu_single_product_activity spa, bu_product_item pi where pi.del_flag = '0' and spa.del_flag = '0' and spa.type = '3' and spa.is_close = '0' and spa.audit_status = '3' and spa.product_id = pi.product_id and spa.id = t.single_product_activity_id ) stock_sum
  </sql>
  <select id="selectByCustomExample" resultMap="BaseResultMap" parameterType="com.jf.entity.SeckillBrandGroupProductCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_seckill_brand_group_product t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryCustomKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_seckill_brand_group_product t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByCustomExample" parameterType="com.jf.entity.SeckillBrandGroupProductCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_seckill_brand_group_product t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByCustomExampleSelective" parameterType="map" >
    update bu_seckill_brand_group_product t
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.seckillBrandGroupId != null" >
        seckill_brand_group_id = #{record.seckillBrandGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.singleProductActivityId != null" >
        single_product_activity_id = #{record.singleProductActivityId,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.ActivityPvStatisticalCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.ActivityPvStatisticalCustom" extends="com.jf.dao.ActivityPvStatisticalMapper.BaseResultMap">
  <result column="name" property="name" jdbcType="VARCHAR" />
  <result column="product_type_name" property="productTypeName" jdbcType="VARCHAR" />
  <result column="total_exposure" property="totalExposure" jdbcType="INTEGER" />
  <result column="inversion_rate" property="inversionRate" jdbcType="DECIMAL" />
  <result column="exposure_amount" property="exposureAmount" jdbcType="DECIMAL" />
  <result column="preheat_time" property="preheatTime" jdbcType="TIMESTAMP" />
  <result column="activity_begin_time" property="activityBeginTime" jdbcType="TIMESTAMP" />
  <result column="activity_end_time" property="activityEndTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, statistical_date, activity_id, home_page_position, classify_page_position, home_page_exposure_count, 
    classify_page_exposure_count, total_visitor_count, total_visitor_count_tourist, total_pv_count,
    total_pv_count_tourist, pay_amount, pay_combine_order_count, pay_sub_order_count,
    create_by, create_date, update_by, update_date, remarks, del_flag,
    (SELECT b.name FROM bu_activity b where b.id = a.activity_id and b.del_flag = '0') name,
    (SELECT ba.preheat_time FROM bu_activity b, bu_activity_area ba where b.activity_area_id = ba.id and b.del_flag = '0' and ba.del_flag = '0' and b.id = a.activity_id limit 1 ) preheat_time,
    (SELECT ba.activity_begin_time FROM bu_activity b, bu_activity_area ba where b.activity_area_id = ba.id and b.del_flag = '0' and ba.del_flag = '0' and b.id = a.activity_id limit 1 ) activity_begin_time,
    (SELECT ba.activity_end_time FROM bu_activity b, bu_activity_area ba where b.activity_area_id = ba.id and b.del_flag = '0' and ba.del_flag = '0' and b.id = a.activity_id limit 1 ) activity_end_time,
	(select b.name FROM bu_activity c left join  bu_product_type b on c.product_type_id = b.id WHERE a.activity_id = c.id AND c.del_flag='0' AND b.del_flag = '0') product_type_name,
	IFNULL(home_page_exposure_count,0)+IFNULL(classify_page_exposure_count,0) AS total_exposure,
	CASE when total_pv_count IS NULL THEN 0.00 ELSE convert(pay_combine_order_count/IFNULL((total_pv_count+total_pv_count_tourist),0)*100,decimal(15,2)) END AS inversion_rate,
	CASE when pay_amount IS NULL THEN 0.00 ELSE convert(pay_amount/IFNULL((home_page_exposure_count+classify_page_exposure_count),0),decimal(15,2)) END AS exposure_amount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.ActivityPvStatisticalExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_activity_pv_statistical a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_activity_pv_statistical a
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bu_activity_pv_statistical
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jf.entity.ActivityPvStatisticalExample" >
    delete from bu_activity_pv_statistical
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.entity.ActivityPvStatistical" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_activity_pv_statistical (statistical_date, activity_id, home_page_position, 
      classify_page_position, home_page_exposure_count, 
      classify_page_exposure_count, total_visitor_count, 
      total_pv_count, pay_amount, pay_sub_order_count, 
      create_by, create_date, update_by, 
      update_date, remarks, del_flag
      )
    values (#{statisticalDate,jdbcType=CHAR}, #{activityId,jdbcType=INTEGER}, #{homePagePosition,jdbcType=VARCHAR}, 
      #{classifyPagePosition,jdbcType=VARCHAR}, #{homePageExposureCount,jdbcType=INTEGER}, 
      #{classifyPageExposureCount,jdbcType=INTEGER}, #{totalVisitorCount,jdbcType=INTEGER}, 
      #{totalPvCount,jdbcType=INTEGER}, #{payAmount,jdbcType=DECIMAL}, #{paySubOrderCount,jdbcType=INTEGER}, 
      #{createBy,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jf.entity.ActivityPvStatistical" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_activity_pv_statistical
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="statisticalDate != null" >
        statistical_date,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
      <if test="homePagePosition != null" >
        home_page_position,
      </if>
      <if test="classifyPagePosition != null" >
        classify_page_position,
      </if>
      <if test="homePageExposureCount != null" >
        home_page_exposure_count,
      </if>
      <if test="classifyPageExposureCount != null" >
        classify_page_exposure_count,
      </if>
      <if test="totalVisitorCount != null" >
        total_visitor_count,
      </if>
      <if test="totalPvCount != null" >
        total_pv_count,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="paySubOrderCount != null" >
        pay_sub_order_count,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="statisticalDate != null" >
        #{statisticalDate,jdbcType=CHAR},
      </if>
      <if test="activityId != null" >
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="homePagePosition != null" >
        #{homePagePosition,jdbcType=VARCHAR},
      </if>
      <if test="classifyPagePosition != null" >
        #{classifyPagePosition,jdbcType=VARCHAR},
      </if>
      <if test="homePageExposureCount != null" >
        #{homePageExposureCount,jdbcType=INTEGER},
      </if>
      <if test="classifyPageExposureCount != null" >
        #{classifyPageExposureCount,jdbcType=INTEGER},
      </if>
      <if test="totalVisitorCount != null" >
        #{totalVisitorCount,jdbcType=INTEGER},
      </if>
      <if test="totalPvCount != null" >
        #{totalPvCount,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="paySubOrderCount != null" >
        #{paySubOrderCount,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.entity.ActivityPvStatisticalExample" resultType="java.lang.Integer" >
    select count(*) from bu_activity_pv_statistical a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bu_activity_pv_statistical
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.statisticalDate != null" >
        statistical_date = #{record.statisticalDate,jdbcType=CHAR},
      </if>
      <if test="record.activityId != null" >
        activity_id = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.homePagePosition != null" >
        home_page_position = #{record.homePagePosition,jdbcType=VARCHAR},
      </if>
      <if test="record.classifyPagePosition != null" >
        classify_page_position = #{record.classifyPagePosition,jdbcType=VARCHAR},
      </if>
      <if test="record.homePageExposureCount != null" >
        home_page_exposure_count = #{record.homePageExposureCount,jdbcType=INTEGER},
      </if>
      <if test="record.classifyPageExposureCount != null" >
        classify_page_exposure_count = #{record.classifyPageExposureCount,jdbcType=INTEGER},
      </if>
      <if test="record.totalVisitorCount != null" >
        total_visitor_count = #{record.totalVisitorCount,jdbcType=INTEGER},
      </if>
      <if test="record.totalPvCount != null" >
        total_pv_count = #{record.totalPvCount,jdbcType=INTEGER},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.paySubOrderCount != null" >
        pay_sub_order_count = #{record.paySubOrderCount,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bu_activity_pv_statistical
    set id = #{record.id,jdbcType=INTEGER},
      statistical_date = #{record.statisticalDate,jdbcType=CHAR},
      activity_id = #{record.activityId,jdbcType=INTEGER},
      home_page_position = #{record.homePagePosition,jdbcType=VARCHAR},
      classify_page_position = #{record.classifyPagePosition,jdbcType=VARCHAR},
      home_page_exposure_count = #{record.homePageExposureCount,jdbcType=INTEGER},
      classify_page_exposure_count = #{record.classifyPageExposureCount,jdbcType=INTEGER},
      total_visitor_count = #{record.totalVisitorCount,jdbcType=INTEGER},
      total_pv_count = #{record.totalPvCount,jdbcType=INTEGER},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      pay_sub_order_count = #{record.paySubOrderCount,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jf.entity.ActivityPvStatistical" >
    update bu_activity_pv_statistical
    <set >
      <if test="statisticalDate != null" >
        statistical_date = #{statisticalDate,jdbcType=CHAR},
      </if>
      <if test="activityId != null" >
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="homePagePosition != null" >
        home_page_position = #{homePagePosition,jdbcType=VARCHAR},
      </if>
      <if test="classifyPagePosition != null" >
        classify_page_position = #{classifyPagePosition,jdbcType=VARCHAR},
      </if>
      <if test="homePageExposureCount != null" >
        home_page_exposure_count = #{homePageExposureCount,jdbcType=INTEGER},
      </if>
      <if test="classifyPageExposureCount != null" >
        classify_page_exposure_count = #{classifyPageExposureCount,jdbcType=INTEGER},
      </if>
      <if test="totalVisitorCount != null" >
        total_visitor_count = #{totalVisitorCount,jdbcType=INTEGER},
      </if>
      <if test="totalPvCount != null" >
        total_pv_count = #{totalPvCount,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="paySubOrderCount != null" >
        pay_sub_order_count = #{paySubOrderCount,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jf.entity.ActivityPvStatistical" >
    update bu_activity_pv_statistical
    set statistical_date = #{statisticalDate,jdbcType=CHAR},
      activity_id = #{activityId,jdbcType=INTEGER},
      home_page_position = #{homePagePosition,jdbcType=VARCHAR},
      classify_page_position = #{classifyPagePosition,jdbcType=VARCHAR},
      home_page_exposure_count = #{homePageExposureCount,jdbcType=INTEGER},
      classify_page_exposure_count = #{classifyPageExposureCount,jdbcType=INTEGER},
      total_visitor_count = #{totalVisitorCount,jdbcType=INTEGER},
      total_pv_count = #{totalPvCount,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_sub_order_count = #{paySubOrderCount,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <select id="countCustomByExample" parameterType="com.jf.entity.ActivityPvStatisticalCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_activity_pv_statistical a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="selectActivityPvStatisticalCustomByExample" parameterType="com.jf.entity.ActivityPvStatisticalCustomExample" resultMap="BaseResultMap">
  	 select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_activity_pv_statistical a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>


  <select id="countActivityPvStatistical" parameterType="java.util.HashMap" resultType="java.lang.Integer" >
    SELECT
    count(DISTINCT activity_id)
    FROM
    bu_activity_pv_statistical a
    WHERE
    a.del_flag = '0'
    <if test="createDateBegin != null " >
      AND DATE_FORMAT(a.statistical_date, '%Y-%m-%d %H:%i:%s') <![CDATA[ >= ]]> #{createDateBegin,jdbcType=TIMESTAMP}
    </if>
    <if test="createDateEnd != null " >
      AND DATE_FORMAT(a.statistical_date, '%Y-%m-%d %H:%i:%s') <![CDATA[ <= ]]> #{createDateEnd,jdbcType=TIMESTAMP}
    </if>
    <if test="activityStatus != null " >
      and ${activityStatus}
    </if>
    <if test="activityId != null " >
      and a.activity_id = #{activityId}
    </if>
    <if test="name != null " >
      and ${name}
    </if>
    <if test="productTypeName != null " >
      and ${productTypeName}
    </if>
    <if test="mchtCodeOrMchtName != null " >
      and ${mchtCodeOrMchtName}
    </if>
  </select>

  <select id="selectActivityPvStatistical" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT
    activity_id,
    home_page_position,
    classify_page_position,
    sum(home_page_exposure_count) home_page_exposure_count,
    sum(classify_page_exposure_count) classify_page_exposure_count,
    sum(total_pv_count) total_pv_count,
    sum(total_pv_count_tourist) total_pv_count_tourist,
    sum(pay_amount) pay_amount,
    sum(pay_combine_order_count) pay_combine_order_count,
    ( SELECT b.NAME FROM bu_activity b WHERE b.id = a.activity_id AND b.del_flag = '0' ) NAME,
    (
    SELECT
    ba.preheat_time
    FROM
    bu_activity b,
    bu_activity_area ba
    WHERE
    b.activity_area_id = ba.id
    AND b.del_flag = '0'
    AND ba.del_flag = '0'
    AND b.id = a.activity_id
    LIMIT 1
    ) preheat_time,
    (
    SELECT
    ba.activity_begin_time
    FROM
    bu_activity b,
    bu_activity_area ba
    WHERE
    b.activity_area_id = ba.id
    AND b.del_flag = '0'
    AND ba.del_flag = '0'
    AND b.id = a.activity_id
    LIMIT 1
    ) activity_begin_time,
    (
    SELECT
    ba.activity_end_time
    FROM
    bu_activity b,
    bu_activity_area ba
    WHERE
    b.activity_area_id = ba.id
    AND b.del_flag = '0'
    AND ba.del_flag = '0'
    AND b.id = a.activity_id
    LIMIT 1
    ) activity_end_time,
    (
    SELECT
    b.NAME
    FROM
    bu_activity c
    LEFT JOIN bu_product_type b ON c.product_type_id = b.id
    WHERE
    a.activity_id = c.id
    AND c.del_flag = '0'
    AND b.del_flag = '0'
    ) product_type_name,
    IFNULL( sum(home_page_exposure_count), 0 ) + IFNULL( sum(classify_page_exposure_count), 0 ) AS total_exposure,
    CASE
    WHEN sum(total_pv_count) IS NULL THEN
    0.00 ELSE CONVERT ( sum(pay_combine_order_count) / IFNULL( ( sum(total_pv_count) + sum(total_pv_count_tourist) ), 0 ) * 100, DECIMAL ( 15, 2 ) )
    END AS inversion_rate,
    CASE
    WHEN sum(pay_amount) IS NULL THEN
    0.00 ELSE CONVERT ( sum(pay_amount) / IFNULL( ( sum(home_page_exposure_count) + sum(classify_page_exposure_count) ), 0 ), DECIMAL ( 15, 2 ) )
    END AS exposure_amount
    FROM
    bu_activity_pv_statistical a
    WHERE
    a.del_flag = '0'
    <if test="createDateBegin != null " >
    AND DATE_FORMAT(a.statistical_date, '%Y-%m-%d %H:%i:%s') <![CDATA[ >= ]]> #{createDateBegin,jdbcType=TIMESTAMP}
    </if>
    <if test="createDateEnd != null " >
    AND DATE_FORMAT(a.statistical_date, '%Y-%m-%d %H:%i:%s') <![CDATA[ <= ]]> #{createDateEnd,jdbcType=TIMESTAMP}
    </if>
    <if test="activityStatus != null " >
      and ${activityStatus}
    </if>
    <if test="activityId != null " >
      and a.activity_id = #{activityId}
    </if>
    <if test="name != null " >
      and ${name}
    </if>
    <if test="productTypeName != null " >
      and ${productTypeName}
    </if>
    <if test="mchtCodeOrMchtName != null " >
      and ${mchtCodeOrMchtName}
    </if>
    GROUP BY
    activity_id
    ORDER BY
    a.statistical_date,
    ifnull( a.home_page_position, 9999999 ),
    ifnull( a.classify_page_position, 9999999 )
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>

  <select id="selectBrowseNumberByActivityId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT
    pv.value_id AS valueId,
    COUNT( DISTINCT pv.member_id ) AS totalVisitorCount ,
    COUNT( DISTINCT IF ( pv.member_id IS NOT NULL, NULL, pv.device_number ) ) AS totalVisitorCountTourist
    FROM
    bu_member_pv pv
    WHERE
    pv.page_classify = '9'
    <if test="createDateBegin != null " >
      AND pv.create_date <![CDATA[ >= ]]> #{createDateBegin,jdbcType=TIMESTAMP}
    </if>
    <if test="createDateEnd != null " >
      AND pv.create_date <![CDATA[ <= ]]> #{createDateEnd,jdbcType=TIMESTAMP}
    </if>
    AND pv.page_type = '27'
    <if test="activityIds != null " >
    AND pv.value_id in
      <foreach collection="activityIds" item="item" separator="," open="(" close=")" >
        #{item, jdbcType=INTEGER}
      </foreach>
    </if>
    AND pv.del_flag = '0'
    GROUP BY
    pv.value_id
  </select>

</mapper>
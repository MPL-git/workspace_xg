<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.CouponExchangeCodeMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.CouponExchangeCode" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="batch_num" property="batchNum" jdbcType="VARCHAR" />
    <result column="channel" property="channel" jdbcType="CHAR" />
    <result column="is_exchange" property="isExchange" jdbcType="CHAR" />
    <result column="coupon_id" property="couponId" jdbcType="INTEGER" />
    <result column="member_coupon_id" property="memberCouponId" jdbcType="INTEGER" />
    <result column="exchange_date" property="exchangeDate" jdbcType="TIMESTAMP" />
    <result column="is_allocation" property="isAllocation" jdbcType="CHAR" />
    <result column="exchange_limit" property="exchangeLimit" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, batch_num, channel, is_exchange, coupon_id, member_coupon_id, exchange_date, 
    is_allocation, exchange_limit, create_by, create_date, update_by, update_date, remarks, 
    del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.CouponExchangeCodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_coupon_exchange_code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_coupon_exchange_code
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bu_coupon_exchange_code
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jf.entity.CouponExchangeCodeExample" >
    delete from bu_coupon_exchange_code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.entity.CouponExchangeCode" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_coupon_exchange_code (code, batch_num, channel, 
      is_exchange, coupon_id, member_coupon_id, 
      exchange_date, is_allocation, exchange_limit, 
      create_by, create_date, update_by, 
      update_date, remarks, del_flag
      )
    values (#{code,jdbcType=VARCHAR}, #{batchNum,jdbcType=VARCHAR}, #{channel,jdbcType=CHAR}, 
      #{isExchange,jdbcType=CHAR}, #{couponId,jdbcType=INTEGER}, #{memberCouponId,jdbcType=INTEGER}, 
      #{exchangeDate,jdbcType=TIMESTAMP}, #{isAllocation,jdbcType=CHAR}, #{exchangeLimit,jdbcType=CHAR}, 
      #{createBy,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jf.entity.CouponExchangeCode" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_coupon_exchange_code
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="batchNum != null" >
        batch_num,
      </if>
      <if test="channel != null" >
        channel,
      </if>
      <if test="isExchange != null" >
        is_exchange,
      </if>
      <if test="couponId != null" >
        coupon_id,
      </if>
      <if test="memberCouponId != null" >
        member_coupon_id,
      </if>
      <if test="exchangeDate != null" >
        exchange_date,
      </if>
      <if test="isAllocation != null" >
        is_allocation,
      </if>
      <if test="exchangeLimit != null" >
        exchange_limit,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="batchNum != null" >
        #{batchNum,jdbcType=VARCHAR},
      </if>
      <if test="channel != null" >
        #{channel,jdbcType=CHAR},
      </if>
      <if test="isExchange != null" >
        #{isExchange,jdbcType=CHAR},
      </if>
      <if test="couponId != null" >
        #{couponId,jdbcType=INTEGER},
      </if>
      <if test="memberCouponId != null" >
        #{memberCouponId,jdbcType=INTEGER},
      </if>
      <if test="exchangeDate != null" >
        #{exchangeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isAllocation != null" >
        #{isAllocation,jdbcType=CHAR},
      </if>
      <if test="exchangeLimit != null" >
        #{exchangeLimit,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.entity.CouponExchangeCodeExample" resultType="java.lang.Integer" >
    select count(*) from bu_coupon_exchange_code
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bu_coupon_exchange_code
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.batchNum != null" >
        batch_num = #{record.batchNum,jdbcType=VARCHAR},
      </if>
      <if test="record.channel != null" >
        channel = #{record.channel,jdbcType=CHAR},
      </if>
      <if test="record.isExchange != null" >
        is_exchange = #{record.isExchange,jdbcType=CHAR},
      </if>
      <if test="record.couponId != null" >
        coupon_id = #{record.couponId,jdbcType=INTEGER},
      </if>
      <if test="record.memberCouponId != null" >
        member_coupon_id = #{record.memberCouponId,jdbcType=INTEGER},
      </if>
      <if test="record.exchangeDate != null" >
        exchange_date = #{record.exchangeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isAllocation != null" >
        is_allocation = #{record.isAllocation,jdbcType=CHAR},
      </if>
      <if test="record.exchangeLimit != null" >
        exchange_limit = #{record.exchangeLimit,jdbcType=CHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bu_coupon_exchange_code
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      batch_num = #{record.batchNum,jdbcType=VARCHAR},
      channel = #{record.channel,jdbcType=CHAR},
      is_exchange = #{record.isExchange,jdbcType=CHAR},
      coupon_id = #{record.couponId,jdbcType=INTEGER},
      member_coupon_id = #{record.memberCouponId,jdbcType=INTEGER},
      exchange_date = #{record.exchangeDate,jdbcType=TIMESTAMP},
      is_allocation = #{record.isAllocation,jdbcType=CHAR},
      exchange_limit = #{record.exchangeLimit,jdbcType=CHAR},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jf.entity.CouponExchangeCode" >
    update bu_coupon_exchange_code
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="batchNum != null" >
        batch_num = #{batchNum,jdbcType=VARCHAR},
      </if>
      <if test="channel != null" >
        channel = #{channel,jdbcType=CHAR},
      </if>
      <if test="isExchange != null" >
        is_exchange = #{isExchange,jdbcType=CHAR},
      </if>
      <if test="couponId != null" >
        coupon_id = #{couponId,jdbcType=INTEGER},
      </if>
      <if test="memberCouponId != null" >
        member_coupon_id = #{memberCouponId,jdbcType=INTEGER},
      </if>
      <if test="exchangeDate != null" >
        exchange_date = #{exchangeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isAllocation != null" >
        is_allocation = #{isAllocation,jdbcType=CHAR},
      </if>
      <if test="exchangeLimit != null" >
        exchange_limit = #{exchangeLimit,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jf.entity.CouponExchangeCode" >
    update bu_coupon_exchange_code
    set code = #{code,jdbcType=VARCHAR},
      batch_num = #{batchNum,jdbcType=VARCHAR},
      channel = #{channel,jdbcType=CHAR},
      is_exchange = #{isExchange,jdbcType=CHAR},
      coupon_id = #{couponId,jdbcType=INTEGER},
      member_coupon_id = #{memberCouponId,jdbcType=INTEGER},
      exchange_date = #{exchangeDate,jdbcType=TIMESTAMP},
      is_allocation = #{isAllocation,jdbcType=CHAR},
      exchange_limit = #{exchangeLimit,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
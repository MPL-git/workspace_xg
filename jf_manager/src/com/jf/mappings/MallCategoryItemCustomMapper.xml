<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.MallCategoryItemCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.MallCategoryItemCustom" extends="com.jf.dao.MallCategoryItemMapper.BaseResultMap" >
    <result column="status_desc" property="statusDesc" jdbcType="VARCHAR" />
    <result column="product_type_name" property="productTypeName" jdbcType="VARCHAR" />
    <result column="product_type_count" property="productTypeCount" jdbcType="INTEGER" />
    <result column="product_brand_count" property="productBrandCount" jdbcType="INTEGER" />
    
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
  	id, mall_category_module_id, status, item_name, item_pic, item_link_type, item_link_value, 
    seq_no, create_by, create_date, update_by, update_date, remarks, del_flag,
    FUN_GET_STATUS_DESC("BU_MALL_CATEGORY_ITEM","STATUS", t.status) status_desc,
    (select pt.name from bu_product_type pt where pt.del_flag = '0' and pt.id = t.item_link_value limit 1 ) product_type_name,
    <!-- (SELECT count(1) FROM bu_product p WHERE p.del_flag = '0' AND p. STATUS = '1' AND (p.product_type_id IN(select ptA.id from bu_product_type ptA where ptA.id = t.item_link_value)  
			OR p.product_type_id IN(select ptA.id from bu_product_type ptA where ptA.parent_id = t.item_link_value) 
			OR p.product_type_id IN(select ptA.id from bu_product_type ptA, bu_product_type ptB where ptA.parent_id = ptB.id AND ptB.parent_id = t.item_link_value)
			OR p.product_type_id IN(select ptA.id from bu_product_type ptA, bu_product_type ptB, bu_product_type ptC where ptA.parent_id = ptB.id AND ptB.parent_id = ptC.id AND ptC.parent_id = t.item_link_value)) ) product_type_count, -->
    (select count(1) from bu_product p where p.del_flag = '0' and p.status = '1' and p.brand_id = t.item_link_value ) product_brand_count
  </sql>
  <select id="selectByCustomExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MallCategoryItemCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_mall_category_item t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByCustomPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_mall_category_item t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByCustomExample" parameterType="com.jf.entity.MallCategoryItemCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_mall_category_item t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCustomExampleSelective" parameterType="map" >
    update bu_mall_category_item t
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mallCategoryModuleId != null" >
        mall_category_module_id = #{record.mallCategoryModuleId,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null" >
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemPic != null" >
        item_pic = #{record.itemPic,jdbcType=VARCHAR},
      </if>
      <if test="record.itemLinkType != null" >
        item_link_type = #{record.itemLinkType,jdbcType=CHAR},
      </if>
      <if test="record.itemLinkValue != null" >
        item_link_value = #{record.itemLinkValue,jdbcType=VARCHAR},
      </if>
      <if test="record.seqNo != null" >
        seq_no = #{record.seqNo,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
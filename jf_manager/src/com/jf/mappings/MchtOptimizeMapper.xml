<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.MchtOptimizeMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.MchtOptimize" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mcht_id" property="mchtId" jdbcType="INTEGER" />
    <result column="audit_risk" property="auditRisk" jdbcType="CHAR" />
    <result column="degree_adaptability" property="degreeAdaptability" jdbcType="CHAR" />
    <result column="resource_grade" property="resourceGrade" jdbcType="CHAR" />
    <result column="operate_remarks" property="operateRemarks" jdbcType="VARCHAR" />
    <result column="deposit_remarks" property="depositRemarks" jdbcType="VARCHAR" />
    <result column="gross_profit_rate_remarks" property="grossProfitRateRemarks" jdbcType="VARCHAR" />
    <result column="product_remarks" property="productRemarks" jdbcType="VARCHAR" />
    <result column="service_remarks" property="serviceRemarks" jdbcType="VARCHAR" />
    <result column="wuliu_remarks" property="wuliuRemarks" jdbcType="VARCHAR" />
    <result column="spread_remarks" property="spreadRemarks" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mcht_id, audit_risk, degree_adaptability, resource_grade, operate_remarks, deposit_remarks, 
    gross_profit_rate_remarks, product_remarks, service_remarks, wuliu_remarks, spread_remarks, 
    create_by, create_date, update_by, update_date, remarks, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MchtOptimizeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_mcht_optimize
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_mcht_optimize
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bu_mcht_optimize
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jf.entity.MchtOptimizeExample" >
    delete from bu_mcht_optimize
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.entity.MchtOptimize" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_mcht_optimize (mcht_id, audit_risk, degree_adaptability, 
      resource_grade, operate_remarks, deposit_remarks, 
      gross_profit_rate_remarks, product_remarks, 
      service_remarks, wuliu_remarks, spread_remarks, 
      create_by, create_date, update_by, 
      update_date, remarks, del_flag
      )
    values (#{mchtId,jdbcType=INTEGER}, #{auditRisk,jdbcType=CHAR}, #{degreeAdaptability,jdbcType=CHAR}, 
      #{resourceGrade,jdbcType=CHAR}, #{operateRemarks,jdbcType=VARCHAR}, #{depositRemarks,jdbcType=VARCHAR}, 
      #{grossProfitRateRemarks,jdbcType=VARCHAR}, #{productRemarks,jdbcType=VARCHAR}, 
      #{serviceRemarks,jdbcType=VARCHAR}, #{wuliuRemarks,jdbcType=VARCHAR}, #{spreadRemarks,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jf.entity.MchtOptimize" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_mcht_optimize
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mchtId != null" >
        mcht_id,
      </if>
      <if test="auditRisk != null" >
        audit_risk,
      </if>
      <if test="degreeAdaptability != null" >
        degree_adaptability,
      </if>
      <if test="resourceGrade != null" >
        resource_grade,
      </if>
      <if test="operateRemarks != null" >
        operate_remarks,
      </if>
      <if test="depositRemarks != null" >
        deposit_remarks,
      </if>
      <if test="grossProfitRateRemarks != null" >
        gross_profit_rate_remarks,
      </if>
      <if test="productRemarks != null" >
        product_remarks,
      </if>
      <if test="serviceRemarks != null" >
        service_remarks,
      </if>
      <if test="wuliuRemarks != null" >
        wuliu_remarks,
      </if>
      <if test="spreadRemarks != null" >
        spread_remarks,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mchtId != null" >
        #{mchtId,jdbcType=INTEGER},
      </if>
      <if test="auditRisk != null" >
        #{auditRisk,jdbcType=CHAR},
      </if>
      <if test="degreeAdaptability != null" >
        #{degreeAdaptability,jdbcType=CHAR},
      </if>
      <if test="resourceGrade != null" >
        #{resourceGrade,jdbcType=CHAR},
      </if>
      <if test="operateRemarks != null" >
        #{operateRemarks,jdbcType=VARCHAR},
      </if>
      <if test="depositRemarks != null" >
        #{depositRemarks,jdbcType=VARCHAR},
      </if>
      <if test="grossProfitRateRemarks != null" >
        #{grossProfitRateRemarks,jdbcType=VARCHAR},
      </if>
      <if test="productRemarks != null" >
        #{productRemarks,jdbcType=VARCHAR},
      </if>
      <if test="serviceRemarks != null" >
        #{serviceRemarks,jdbcType=VARCHAR},
      </if>
      <if test="wuliuRemarks != null" >
        #{wuliuRemarks,jdbcType=VARCHAR},
      </if>
      <if test="spreadRemarks != null" >
        #{spreadRemarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.entity.MchtOptimizeExample" resultType="java.lang.Integer" >
    select count(*) from bu_mcht_optimize
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bu_mcht_optimize
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mchtId != null" >
        mcht_id = #{record.mchtId,jdbcType=INTEGER},
      </if>
      <if test="record.auditRisk != null" >
        audit_risk = #{record.auditRisk,jdbcType=CHAR},
      </if>
      <if test="record.degreeAdaptability != null" >
        degree_adaptability = #{record.degreeAdaptability,jdbcType=CHAR},
      </if>
      <if test="record.resourceGrade != null" >
        resource_grade = #{record.resourceGrade,jdbcType=CHAR},
      </if>
      <if test="record.operateRemarks != null" >
        operate_remarks = #{record.operateRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.depositRemarks != null" >
        deposit_remarks = #{record.depositRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.grossProfitRateRemarks != null" >
        gross_profit_rate_remarks = #{record.grossProfitRateRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.productRemarks != null" >
        product_remarks = #{record.productRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceRemarks != null" >
        service_remarks = #{record.serviceRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.wuliuRemarks != null" >
        wuliu_remarks = #{record.wuliuRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.spreadRemarks != null" >
        spread_remarks = #{record.spreadRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bu_mcht_optimize
    set id = #{record.id,jdbcType=INTEGER},
      mcht_id = #{record.mchtId,jdbcType=INTEGER},
      audit_risk = #{record.auditRisk,jdbcType=CHAR},
      degree_adaptability = #{record.degreeAdaptability,jdbcType=CHAR},
      resource_grade = #{record.resourceGrade,jdbcType=CHAR},
      operate_remarks = #{record.operateRemarks,jdbcType=VARCHAR},
      deposit_remarks = #{record.depositRemarks,jdbcType=VARCHAR},
      gross_profit_rate_remarks = #{record.grossProfitRateRemarks,jdbcType=VARCHAR},
      product_remarks = #{record.productRemarks,jdbcType=VARCHAR},
      service_remarks = #{record.serviceRemarks,jdbcType=VARCHAR},
      wuliu_remarks = #{record.wuliuRemarks,jdbcType=VARCHAR},
      spread_remarks = #{record.spreadRemarks,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jf.entity.MchtOptimize" >
    update bu_mcht_optimize
    <set >
      <if test="mchtId != null" >
        mcht_id = #{mchtId,jdbcType=INTEGER},
      </if>
      <if test="auditRisk != null" >
        audit_risk = #{auditRisk,jdbcType=CHAR},
      </if>
      <if test="degreeAdaptability != null" >
        degree_adaptability = #{degreeAdaptability,jdbcType=CHAR},
      </if>
      <if test="resourceGrade != null" >
        resource_grade = #{resourceGrade,jdbcType=CHAR},
      </if>
      <if test="operateRemarks != null" >
        operate_remarks = #{operateRemarks,jdbcType=VARCHAR},
      </if>
      <if test="depositRemarks != null" >
        deposit_remarks = #{depositRemarks,jdbcType=VARCHAR},
      </if>
      <if test="grossProfitRateRemarks != null" >
        gross_profit_rate_remarks = #{grossProfitRateRemarks,jdbcType=VARCHAR},
      </if>
      <if test="productRemarks != null" >
        product_remarks = #{productRemarks,jdbcType=VARCHAR},
      </if>
      <if test="serviceRemarks != null" >
        service_remarks = #{serviceRemarks,jdbcType=VARCHAR},
      </if>
      <if test="wuliuRemarks != null" >
        wuliu_remarks = #{wuliuRemarks,jdbcType=VARCHAR},
      </if>
      <if test="spreadRemarks != null" >
        spread_remarks = #{spreadRemarks,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jf.entity.MchtOptimize" >
    update bu_mcht_optimize
    set mcht_id = #{mchtId,jdbcType=INTEGER},
      audit_risk = #{auditRisk,jdbcType=CHAR},
      degree_adaptability = #{degreeAdaptability,jdbcType=CHAR},
      resource_grade = #{resourceGrade,jdbcType=CHAR},
      operate_remarks = #{operateRemarks,jdbcType=VARCHAR},
      deposit_remarks = #{depositRemarks,jdbcType=VARCHAR},
      gross_profit_rate_remarks = #{grossProfitRateRemarks,jdbcType=VARCHAR},
      product_remarks = #{productRemarks,jdbcType=VARCHAR},
      service_remarks = #{serviceRemarks,jdbcType=VARCHAR},
      wuliu_remarks = #{wuliuRemarks,jdbcType=VARCHAR},
      spread_remarks = #{spreadRemarks,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.OrderPreferentialInfoCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.OrderPreferentialInfoCustom"  extends="com.jf.dao.OrderPreferentialInfoMapper.BaseResultMap">
    <result column="preferential_type_desc" property="preferentialTypeDesc" jdbcType="VARCHAR" />
    <result column="belong_desc" property="belongDesc" jdbcType="VARCHAR" />
    <result column="rang_desc" property="rangDesc" jdbcType="VARCHAR" />
    <result column="total_amout" property="totalAmout" jdbcType="DECIMAL" />
    <result column="content_product" property="contentProduct" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, preferential_type, preferential_id, order_dtl_id, rang, belong, preferential_content, 
    preferential_amount, create_by, create_date, update_by, update_date, remarks, del_flag,
    FUN_GET_STATUS_DESC("BU_ORDER_PREFERENTIAL_INFO", "PREFERENTIAL_TYPE", a.preferential_type) preferential_type_desc,
	CONCAT(FUN_GET_STATUS_DESC("BU_ORDER_PREFERENTIAL_INFO", "BELONG", a.belong),"优惠") belong_desc,
	FUN_GET_STATUS_DESC("BU_ORDER_PREFERENTIAL_INFO", "RANG", a.rang) rang_desc,
	SUM(a.preferential_amount) total_amout
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.OrderPreferentialInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_order_preferential_info a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_order_preferential_info a
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByExample" parameterType="com.jf.entity.OrderPreferentialInfoExample" resultType="java.lang.Integer" >
    select count(*) from bu_order_preferential_info a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByCombineOrder" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    	preferential_type,
		preferential_id,
	    preferential_content, 
    	preferential_amount, 
    	FUN_GET_STATUS_DESC("BU_ORDER_PREFERENTIAL_INFO", "PREFERENTIAL_TYPE", a.preferential_type) preferential_type_desc,
		CONCAT(FUN_GET_STATUS_DESC("BU_ORDER_PREFERENTIAL_INFO", "BELONG", a.belong),"优惠") belong_desc,
		FUN_GET_STATUS_DESC("BU_ORDER_PREFERENTIAL_INFO", "RANG", a.rang) rang_desc,
		SUM(a.preferential_amount) total_amout,
		GROUP_CONCAT((select CONCAT(p.brand_name," ", p.art_no,"(&lt;span style=&apos;color:#FF0000&apos;&gt;", a.preferential_amount,"&lt;/span&gt;元",")") from bu_order_dtl p,bu_sub_order m WHERE p.id = a.order_dtl_id AND m.id=p.sub_order_id AND m.combine_order_id=#{combineOrderId,jdbcType=INTEGER}) SEPARATOR ';') content_product
    from bu_order_preferential_info a
    	where del_flag = '0'
    	and a.order_dtl_id in (select mi.id from bu_order_dtl mi, bu_sub_order mp where mp.id=mi.sub_order_id and mp.combine_order_id= #{combineOrderId,jdbcType=INTEGER})
    	GROUP BY a.preferential_type,a.preferential_id order by a.id
  </select>
    <select id="selectBySubOrder" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    	preferential_type,
		preferential_id,
    	preferential_content, 
    	preferential_amount, 
    	FUN_GET_STATUS_DESC("BU_ORDER_PREFERENTIAL_INFO", "PREFERENTIAL_TYPE", a.preferential_type) preferential_type_desc,
		CONCAT(FUN_GET_STATUS_DESC("BU_ORDER_PREFERENTIAL_INFO", "BELONG", a.belong),"优惠") belong_desc,
		FUN_GET_STATUS_DESC("BU_ORDER_PREFERENTIAL_INFO", "RANG", a.rang) rang_desc,
		SUM(a.preferential_amount) total_amout, 
		GROUP_CONCAT((select CONCAT(p.brand_name," ", p.art_no,"(&lt;span style=&apos;color:#FF0000&apos;&gt;", a.preferential_amount,"&lt;/span&gt;元",")") from bu_order_dtl p WHERE p.id = a.order_dtl_id  AND p.sub_order_id=#{subOrderId,jdbcType=INTEGER}) SEPARATOR ';')content_product
    from bu_order_preferential_info a
    	where del_flag = '0' 
    	and a.order_dtl_id in (select mi.id from bu_order_dtl mi where mi.sub_order_id= #{subOrderId,jdbcType=INTEGER})
    	GROUP BY a.preferential_type,a.preferential_id order by a.id
  </select>
</mapper>
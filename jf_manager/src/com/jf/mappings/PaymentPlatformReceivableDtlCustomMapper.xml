<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.PaymentPlatformReceivableDtlCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.PaymentPlatformReceivableDtlCustom"  extends="com.jf.dao.PaymentPlatformReceivableDtlMapper.BaseResultMap">
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
  	id, batch_no, received_date, payment_no, amount, payment_type, customer_pay_date, 
    combine_order_code, create_by, create_date, update_by, update_date, remarks, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.PaymentPlatformReceivableDtlCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_payment_platform_receivable_dtl t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="countByExample" parameterType="com.jf.entity.PaymentPlatformReceivableDtlCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_payment_platform_receivable_dtl t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getSequence" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select _nextval(#{name,jdbcType=VARCHAR}) from dual
  </select>
  <select id="updateByBatchNo" parameterType="java.lang.Integer">
  	UPDATE bu_payment_platform_receivable_dtl t SET 
		 t.combine_order_code = (
			SELECT
				co.combine_order_code
			FROM
				bu_combine_order co
			WHERE
				co.payment_no = t.payment_no 
				AND	co.status='1' 
				AND co.pay_status = '1' 
				AND	co.del_flag='0'
		),
		 t.customer_pay_date = (
			SELECT
				DATE_FORMAT(co.pay_date, '%Y-%m-%d')
			FROM
				bu_combine_order co
			WHERE
				co.payment_no = t.payment_no 
				AND	co.status='1' 
				AND co.pay_status = '1' 
				AND	co.del_flag='0'
		) 
	WHERE t.batch_no = #{batchNo};
  </select>
  <sql id="receivedEachDayCompareSql">
  	SELECT 
		t.each_day,
		SUM(t.combine_amount) AS combine_amount,
		SUM(t.right_day_amount) AS right_day_amount,
		SUM(t.not_right_day_amount) AS not_right_day_amount,
		SUM(t.not_amount) AS not_amount,
		t.each_day2,
		SUM(t.received_amount) AS received_amount,
		SUM(t.received_right_day_amount) AS received_right_day_amount,
		SUM(t.received_not_right_day_amount) AS received_not_right_day_amount,
		SUM(t.not_received) AS not_received
FROM
		(SELECT
					DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
					SUM(co.total_pay_amount) combine_amount,
					0 AS right_day_amount,
					0 AS not_right_day_amount,
					0 AS not_amount,
					DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day2,
					0 AS received_amount,
					0 AS received_right_day_amount,
					0 AS received_not_right_day_amount,
					0 AS not_received
				FROM
					bu_combine_order co
				WHERE
					co.`status` = '1'
				AND co.del_flag = '0'
				AND co.pay_date IS NOT NULL
				AND co.pay_date <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
				AND co.pay_date <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
				<if test="paymentType !=null">
					<if test="paymentType == 1">
						AND co.payment_id in (2,5)
					</if>
					<if test="paymentType == 2">
						AND co.payment_id = 4
					</if>
					<if test="paymentType == 3">
						AND co.payment_id in (1,6)
					</if>
				</if>
				GROUP BY
					each_day
		UNION
					SELECT
							DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
							0 AS combine_amount,
							SUM(co.total_pay_amount) AS right_day_amount,
							0 AS not_right_day_amount,
							0 AS not_amount,
							DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day2,
							0 AS received_amount,
							0 AS received_right_day_amount,
							0 AS received_not_right_day_amount,
							0 as not_received
					FROM
							bu_combine_order co,
							bu_payment_platform_receivable_dtl pprd
					WHERE
								co.`status` = '1'
						AND co.del_flag = '0'
						AND co.pay_date IS NOT NULL
						AND co.pay_date <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
						AND co.pay_date <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
						AND co.payment_no = pprd.payment_no
						AND DATE_FORMAT(co.pay_date, '%Y-%m-%d') = pprd.received_date
						<if test="paymentType !=null">
							<if test="paymentType == 1">
								AND co.payment_id in (2,5)
							</if>
							<if test="paymentType == 2">
								AND co.payment_id = 4
							</if>
							<if test="paymentType == 3">
								AND co.payment_id in (1,6)
							</if>
						</if>
						GROUP BY
							each_day
			UNION
					SELECT
								DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
								0 AS combine_amount,
								0 AS right_day_amount,
								SUM(co.total_pay_amount) AS not_right_day_amount,
								0 AS not_amount,
								DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day2,
								0 AS received_amount,
								0 AS received_right_day_amount,
								0 AS received_not_right_day_amount,
								0 as not_received
						FROM
								bu_combine_order co,
								bu_payment_platform_receivable_dtl pprd
						WHERE
									co.`status` = '1'
							AND co.del_flag = '0'
							AND co.pay_date IS NOT NULL
							AND co.pay_date <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
							AND co.pay_date <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
							AND co.payment_no = pprd.payment_no
							AND DATE_FORMAT(co.pay_date, '%Y-%m-%d') != pprd.received_date
							<if test="paymentType !=null">
								<if test="paymentType == 1">
									AND co.payment_id in (2,5)
								</if>
								<if test="paymentType == 2">
									AND co.payment_id = 4
								</if>
								<if test="paymentType == 3">
									AND co.payment_id in (1,6)
								</if>
							</if>
							GROUP BY
								each_day
					UNION	
							SELECT
									DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
									0 AS combine_amount,
									0 AS right_day_amount,
									0 AS not_right_day_amount,
									SUM(co.total_pay_amount) AS not_amount,
									DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day2,
									0 AS received_amount,
									0 AS received_right_day_amount,
									0 AS received_not_right_day_amount,
									0 as not_received
							FROM
									bu_combine_order co
							WHERE
										co.`status` = '1'
								AND co.del_flag = '0'
								AND co.pay_date IS NOT NULL
								AND co.pay_date <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
								AND co.pay_date <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
								AND co.payment_no not in (select b.payment_no from bu_payment_platform_receivable_dtl b where b.del_flag='0')
								<if test="paymentType !=null">
									<if test="paymentType == 1">
										AND co.payment_id in (2,5)
									</if>
									<if test="paymentType == 2">
										AND co.payment_id = 4
									</if>
									<if test="paymentType == 3">
										AND co.payment_id in (1,6)
									</if>
								</if>
								GROUP BY
									each_day
							UNION
									SELECT
										pprd.received_date AS each_day,
										0 AS combine_amount,
										0 AS right_day_amount,
										0 AS not_right_day_amount,
										0 AS not_amount,
										pprd.received_date AS each_day2,
										SUM(pprd.amount) AS received_amount,
										0 AS received_right_day_amount,
										0 AS received_not_right_day_amount,
										0 as not_received
								FROM
										bu_payment_platform_receivable_dtl pprd
								WHERE
											pprd.del_flag = '0'
									AND pprd.received_date <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
									AND pprd.received_date <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
									<if test="paymentType !=null">
										<if test="paymentType == 1">
											AND pprd.payment_type = '1'
										</if>
										<if test="paymentType == 2">
											AND pprd.payment_type = '2'
										</if>
										<if test="paymentType == 3">
											AND pprd.payment_type = '3'
										</if>
									</if>
									GROUP BY
										each_day
								UNION
										SELECT
										pprd.received_date AS each_day,
										0 AS combine_amount,
										0 AS right_day_amount,
										0 AS not_right_day_amount,
										0 AS not_amount,
										pprd.received_date AS each_day2,
										0 AS received_amount,
										SUM(pprd.amount) AS received_right_day_amount,
										0 AS received_not_right_day_amount,
										0 as not_received
								FROM
										bu_payment_platform_receivable_dtl pprd,bu_combine_order co
								WHERE					
											pprd.del_flag = '0'
									AND co.del_flag = '0'
									AND pprd.payment_no = co.payment_no
									AND pprd.received_date = DATE_FORMAT(co.pay_date, '%Y-%m-%d')
									AND pprd.received_date <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
									AND pprd.received_date <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
									<if test="paymentType !=null">
										<if test="paymentType == 1">
											AND pprd.payment_type = '1'
										</if>
										<if test="paymentType == 2">
											AND pprd.payment_type = '2'
										</if>
										<if test="paymentType == 3">
											AND pprd.payment_type = '3'
										</if>
									</if>
									GROUP BY
										each_day
								UNION	
										SELECT
										pprd.received_date AS each_day,
										0 AS combine_amount,
										0 AS right_day_amount,
										0 AS not_right_day_amount,
										0 AS not_amount,
										pprd.received_date AS each_day2,
										0 AS received_amount,
										0 AS received_right_day_amount,
										SUM(pprd.amount) AS received_not_right_day_amount,
										0 as not_received
								FROM
										bu_payment_platform_receivable_dtl pprd,bu_combine_order co
								WHERE					
											pprd.del_flag = '0'
									AND co.del_flag = '0'
									AND pprd.payment_no = co.payment_no
									AND pprd.received_date != DATE_FORMAT(co.pay_date, '%Y-%m-%d')
									AND pprd.received_date <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
									AND pprd.received_date <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
									<if test="paymentType !=null">
										<if test="paymentType == 1">
											AND pprd.payment_type = '1'
										</if>
										<if test="paymentType == 2">
											AND pprd.payment_type = '2'
										</if>
										<if test="paymentType == 3">
											AND pprd.payment_type = '3'
										</if>
									</if>
									GROUP BY
										each_day
								UNION
										SELECT
										pprd.received_date AS each_day,
										0 AS combine_amount,
										0 AS right_day_amount,
										0 AS not_right_day_amount,
										0 AS not_amount,
										pprd.received_date AS each_day2,
										0 AS received_amount,
										0 AS received_right_day_amount,
										0 AS received_not_right_day_amount,
										SUM(pprd.amount) as not_received
								FROM
										bu_payment_platform_receivable_dtl pprd
								WHERE					
											pprd.del_flag = '0'
									AND pprd.customer_pay_date IS NULL
									AND pprd.combine_order_code IS NULL
									AND pprd.received_date <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
									AND pprd.received_date <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
									<if test="paymentType !=null">
										<if test="paymentType == 1">
											AND pprd.payment_type = '1'
										</if>
										<if test="paymentType == 2">
											AND pprd.payment_type = '2'
										</if>
										<if test="paymentType == 3">
											AND pprd.payment_type = '3'
										</if>
									</if>
									GROUP BY
										each_day
		)t
GROUP BY
	t.each_day
ORDER BY
	t.each_day limit 31
  </sql>
  <select id="receivedEachDayCompare" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  	SELECT TAB.* FROM (
		<include refid="receivedEachDayCompareSql" />
		)TAB
       	<if test="MAX_NUM!=null and MAX_NUM!=''">
			LIMIT ${MIN_NUM},${MAX_NUM}
	    </if>
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.PropertyRightComplainCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.PropertyRightComplainCustom"  extends="com.jf.dao.PropertyRightComplainMapper.BaseResultMap">
  	<result column="right_appeal_id" property="rightAppealId" jdbcType="VARCHAR" />
  	<result column="appeal_type" property="appealType" jdbcType="VARCHAR" />
    <result column="relevant_value" property="relevantValue" jdbcType="VARCHAR" />
    <result column="staff_id" property="staffId" jdbcType="VARCHAR" />
    <result column="accept_status" property="acceptStatus" jdbcType="VARCHAR" />
    <result column="mcht_code" property="mchtCode" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="STAFF_NAME" property="staffName" jdbcType="VARCHAR" />
    <result column="appeal_type_desc" property="appealTypeDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and a.${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and a.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and a.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and a.${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, intellectual_property_right_appeal_id, status, complain_reason, remarks_to_mcht, 
    remarks_to_obligee, inner_remarks, prosecution_end_date, create_by, create_date, 
    update_by, update_date, remarks, del_flag
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.PropertyRightComplainCustomExample" >
    SELECT
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />,
		t1.right_appeal_id,
		t1.appeal_type,
		t1.relevant_value,
		t1.staff_id,
		t1.accept_status,
		t1.mcht_code,
		t1.company_name,
		t1.STAFF_NAME,
		FUN_GET_STATUS_DESC ( "PROPERTY_RIGHT_APPEAL", "APPEAL_TYPE", t1.appeal_type ) appeal_type_desc 
	FROM
		bu_property_right_complain a
		LEFT JOIN (
		SELECT
			p1.id AS right_appeal_id,
			p1.appeal_type,
			p1.relevant_value,
			p1.staff_id,
			p1.accept_status,
			p2.mcht_code,
			p2.company_name,
			p3.STAFF_NAME 
		FROM
			bu_intellectual_property_right_appeal p1
			LEFT JOIN bu_mcht_info p2 ON p2.id = p1.mcht_id
			LEFT JOIN sys_staff_info p3 ON p3.STAFF_ID = p1.staff_id 
		) t1 ON t1.right_appeal_id = a.intellectual_property_right_appeal_id 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="appealType != null and appealType != ''" >
      and t1.appeal_type = #{appealType}
    </if>
    <if test="relevantValue != null and relevantValue != ''" >
      and t1.relevant_value like CONCAT('%',#{relevantValue},'%')
    </if>
	<if test="rightAppealId != null and rightAppealId != ''" >
      and t1.right_appeal_id = #{rightAppealId}
    </if>
    <if test="companyName != null and companyName != ''" >
      and t1.company_name like CONCAT('%',#{companyName},'%')
    </if>
    <if test="staffId != null and staffId != ''" >
      and t1.staff_id = #{staffId}
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />,
    	t1.right_appeal_id,
		t1.appeal_type,
		t1.relevant_value,
		t1.staff_id,
		t1.accept_status,
		t1.mcht_code,
		t1.company_name,
		t1.STAFF_NAME,
		FUN_GET_STATUS_DESC ( "PROPERTY_RIGHT_APPEAL", "APPEAL_TYPE", t1.appeal_type ) appeal_type_desc 
	FROM
		bu_property_right_complain a
		LEFT JOIN (
		SELECT
			p1.id AS right_appeal_id,
			p1.appeal_type,
			p1.relevant_value,
			p1.staff_id,
			p1.accept_status,
			p2.mcht_code,
			p2.company_name,
			p3.STAFF_NAME 
		FROM
			bu_intellectual_property_right_appeal p1
			LEFT JOIN bu_mcht_info p2 ON p2.id = p1.mcht_id
			LEFT JOIN sys_staff_info p3 ON p3.STAFF_ID = p1.staff_id 
		) t1 ON t1.right_appeal_id = a.intellectual_property_right_appeal_id 
    where a.id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="countByExample" parameterType="com.jf.entity.PropertyRightComplainCustomExample" resultType="java.lang.Integer" >
    select count(*) 
    FROM
    bu_property_right_complain a
		LEFT JOIN (
		SELECT
			p1.id AS right_appeal_id,
			p1.appeal_type,
			p1.relevant_value,
			p1.staff_id,
			p1.accept_status,
			p2.mcht_code,
			p2.company_name,
			p3.STAFF_NAME 
		FROM
			bu_intellectual_property_right_appeal p1
			LEFT JOIN bu_mcht_info p2 ON p2.id = p1.mcht_id
			LEFT JOIN sys_staff_info p3 ON p3.STAFF_ID = p1.staff_id 
		) t1 ON t1.right_appeal_id = a.intellectual_property_right_appeal_id 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="appealType != null and appealType != ''" >
      and t1.appeal_type = #{appealType}
    </if>
    <if test="relevantValue != null and relevantValue != ''" >
      and t1.relevant_value = #{relevantValue}
    </if>
	<if test="rightAppealId != null and rightAppealId != ''" >
      and t1.right_appeal_id = #{rightAppealId}
    </if>
    <if test="companyName != null and companyName != ''" >
      and t1.company_name = #{companyName}
    </if>
    <if test="staffId != null and staffId != ''" >
      and t1.staff_id = #{staffId}
    </if>
  </select>
  
</mapper>
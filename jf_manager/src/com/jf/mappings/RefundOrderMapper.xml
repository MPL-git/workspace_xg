<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.RefundOrderMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.RefundOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="combine_order_id" property="combineOrderId" jdbcType="INTEGER" />
    <result column="service_type" property="serviceType" jdbcType="CHAR" />
    <result column="order_type" property="orderType" jdbcType="CHAR" />
    <result column="service_order_id" property="serviceOrderId" jdbcType="INTEGER" />
    <result column="combine_deposit_order_id" property="combineDepositOrderId" jdbcType="INTEGER" />
    <result column="refund_amount" property="refundAmount" jdbcType="DECIMAL" />
    <result column="refund_agree_date" property="refundAgreeDate" jdbcType="TIMESTAMP" />
    <result column="refund_method" property="refundMethod" jdbcType="CHAR" />
    <result column="refund_req_no" property="refundReqNo" jdbcType="VARCHAR" />
    <result column="failed_reason" property="failedReason" jdbcType="VARCHAR" />
    <result column="try_times" property="tryTimes" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="success_date" property="successDate" jdbcType="TIMESTAMP" />
    <result column="refund_code" property="refundCode" jdbcType="VARCHAR" />
    <result column="refund_register_date" property="refundRegisterDate" jdbcType="TIMESTAMP" />
    <result column="cashier_staff_id" property="cashierStaffId" jdbcType="INTEGER" />
    <result column="wx_refund_id" property="wxRefundId" jdbcType="VARCHAR" />
    <result column="zfb_refund_id" property="zfbRefundId" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, combine_order_id, service_type, order_type, service_order_id, combine_deposit_order_id, 
    refund_amount, refund_agree_date, refund_method, refund_req_no, failed_reason, try_times, 
    status, success_date, refund_code, refund_register_date, cashier_staff_id, wx_refund_id, 
    zfb_refund_id, create_by, create_date, update_by, update_date, remarks, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.RefundOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_refund_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_refund_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bu_refund_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jf.entity.RefundOrderExample" >
    delete from bu_refund_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.entity.RefundOrder" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_refund_order (combine_order_id, service_type, order_type, 
      service_order_id, combine_deposit_order_id, 
      refund_amount, refund_agree_date, refund_method, 
      refund_req_no, failed_reason, try_times, 
      status, success_date, refund_code, 
      refund_register_date, cashier_staff_id, wx_refund_id, 
      zfb_refund_id, create_by, create_date, 
      update_by, update_date, remarks, 
      del_flag)
    values (#{combineOrderId,jdbcType=INTEGER}, #{serviceType,jdbcType=CHAR}, #{orderType,jdbcType=CHAR}, 
      #{serviceOrderId,jdbcType=INTEGER}, #{combineDepositOrderId,jdbcType=INTEGER}, 
      #{refundAmount,jdbcType=DECIMAL}, #{refundAgreeDate,jdbcType=TIMESTAMP}, #{refundMethod,jdbcType=CHAR}, 
      #{refundReqNo,jdbcType=VARCHAR}, #{failedReason,jdbcType=VARCHAR}, #{tryTimes,jdbcType=INTEGER}, 
      #{status,jdbcType=CHAR}, #{successDate,jdbcType=TIMESTAMP}, #{refundCode,jdbcType=VARCHAR}, 
      #{refundRegisterDate,jdbcType=TIMESTAMP}, #{cashierStaffId,jdbcType=INTEGER}, #{wxRefundId,jdbcType=VARCHAR}, 
      #{zfbRefundId,jdbcType=VARCHAR}, #{createBy,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jf.entity.RefundOrder" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_refund_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="combineOrderId != null" >
        combine_order_id,
      </if>
      <if test="serviceType != null" >
        service_type,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="serviceOrderId != null" >
        service_order_id,
      </if>
      <if test="combineDepositOrderId != null" >
        combine_deposit_order_id,
      </if>
      <if test="refundAmount != null" >
        refund_amount,
      </if>
      <if test="refundAgreeDate != null" >
        refund_agree_date,
      </if>
      <if test="refundMethod != null" >
        refund_method,
      </if>
      <if test="refundReqNo != null" >
        refund_req_no,
      </if>
      <if test="failedReason != null" >
        failed_reason,
      </if>
      <if test="tryTimes != null" >
        try_times,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="successDate != null" >
        success_date,
      </if>
      <if test="refundCode != null" >
        refund_code,
      </if>
      <if test="refundRegisterDate != null" >
        refund_register_date,
      </if>
      <if test="cashierStaffId != null" >
        cashier_staff_id,
      </if>
      <if test="wxRefundId != null" >
        wx_refund_id,
      </if>
      <if test="zfbRefundId != null" >
        zfb_refund_id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="combineOrderId != null" >
        #{combineOrderId,jdbcType=INTEGER},
      </if>
      <if test="serviceType != null" >
        #{serviceType,jdbcType=CHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=CHAR},
      </if>
      <if test="serviceOrderId != null" >
        #{serviceOrderId,jdbcType=INTEGER},
      </if>
      <if test="combineDepositOrderId != null" >
        #{combineDepositOrderId,jdbcType=INTEGER},
      </if>
      <if test="refundAmount != null" >
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAgreeDate != null" >
        #{refundAgreeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="refundMethod != null" >
        #{refundMethod,jdbcType=CHAR},
      </if>
      <if test="refundReqNo != null" >
        #{refundReqNo,jdbcType=VARCHAR},
      </if>
      <if test="failedReason != null" >
        #{failedReason,jdbcType=VARCHAR},
      </if>
      <if test="tryTimes != null" >
        #{tryTimes,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="successDate != null" >
        #{successDate,jdbcType=TIMESTAMP},
      </if>
      <if test="refundCode != null" >
        #{refundCode,jdbcType=VARCHAR},
      </if>
      <if test="refundRegisterDate != null" >
        #{refundRegisterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cashierStaffId != null" >
        #{cashierStaffId,jdbcType=INTEGER},
      </if>
      <if test="wxRefundId != null" >
        #{wxRefundId,jdbcType=VARCHAR},
      </if>
      <if test="zfbRefundId != null" >
        #{zfbRefundId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.entity.RefundOrderExample" resultType="java.lang.Integer" >
    select count(*) from bu_refund_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bu_refund_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.combineOrderId != null" >
        combine_order_id = #{record.combineOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceType != null" >
        service_type = #{record.serviceType,jdbcType=CHAR},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=CHAR},
      </if>
      <if test="record.serviceOrderId != null" >
        service_order_id = #{record.serviceOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.combineDepositOrderId != null" >
        combine_deposit_order_id = #{record.combineDepositOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.refundAmount != null" >
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundAgreeDate != null" >
        refund_agree_date = #{record.refundAgreeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundMethod != null" >
        refund_method = #{record.refundMethod,jdbcType=CHAR},
      </if>
      <if test="record.refundReqNo != null" >
        refund_req_no = #{record.refundReqNo,jdbcType=VARCHAR},
      </if>
      <if test="record.failedReason != null" >
        failed_reason = #{record.failedReason,jdbcType=VARCHAR},
      </if>
      <if test="record.tryTimes != null" >
        try_times = #{record.tryTimes,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.successDate != null" >
        success_date = #{record.successDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundCode != null" >
        refund_code = #{record.refundCode,jdbcType=VARCHAR},
      </if>
      <if test="record.refundRegisterDate != null" >
        refund_register_date = #{record.refundRegisterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cashierStaffId != null" >
        cashier_staff_id = #{record.cashierStaffId,jdbcType=INTEGER},
      </if>
      <if test="record.wxRefundId != null" >
        wx_refund_id = #{record.wxRefundId,jdbcType=VARCHAR},
      </if>
      <if test="record.zfbRefundId != null" >
        zfb_refund_id = #{record.zfbRefundId,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bu_refund_order
    set id = #{record.id,jdbcType=INTEGER},
      combine_order_id = #{record.combineOrderId,jdbcType=INTEGER},
      service_type = #{record.serviceType,jdbcType=CHAR},
      order_type = #{record.orderType,jdbcType=CHAR},
      service_order_id = #{record.serviceOrderId,jdbcType=INTEGER},
      combine_deposit_order_id = #{record.combineDepositOrderId,jdbcType=INTEGER},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      refund_agree_date = #{record.refundAgreeDate,jdbcType=TIMESTAMP},
      refund_method = #{record.refundMethod,jdbcType=CHAR},
      refund_req_no = #{record.refundReqNo,jdbcType=VARCHAR},
      failed_reason = #{record.failedReason,jdbcType=VARCHAR},
      try_times = #{record.tryTimes,jdbcType=INTEGER},
      status = #{record.status,jdbcType=CHAR},
      success_date = #{record.successDate,jdbcType=TIMESTAMP},
      refund_code = #{record.refundCode,jdbcType=VARCHAR},
      refund_register_date = #{record.refundRegisterDate,jdbcType=TIMESTAMP},
      cashier_staff_id = #{record.cashierStaffId,jdbcType=INTEGER},
      wx_refund_id = #{record.wxRefundId,jdbcType=VARCHAR},
      zfb_refund_id = #{record.zfbRefundId,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jf.entity.RefundOrder" >
    update bu_refund_order
    <set >
      <if test="combineOrderId != null" >
        combine_order_id = #{combineOrderId,jdbcType=INTEGER},
      </if>
      <if test="serviceType != null" >
        service_type = #{serviceType,jdbcType=CHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=CHAR},
      </if>
      <if test="serviceOrderId != null" >
        service_order_id = #{serviceOrderId,jdbcType=INTEGER},
      </if>
      <if test="combineDepositOrderId != null" >
        combine_deposit_order_id = #{combineDepositOrderId,jdbcType=INTEGER},
      </if>
      <if test="refundAmount != null" >
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAgreeDate != null" >
        refund_agree_date = #{refundAgreeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="refundMethod != null" >
        refund_method = #{refundMethod,jdbcType=CHAR},
      </if>
      <if test="refundReqNo != null" >
        refund_req_no = #{refundReqNo,jdbcType=VARCHAR},
      </if>
      <if test="failedReason != null" >
        failed_reason = #{failedReason,jdbcType=VARCHAR},
      </if>
      <if test="tryTimes != null" >
        try_times = #{tryTimes,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="successDate != null" >
        success_date = #{successDate,jdbcType=TIMESTAMP},
      </if>
      <if test="refundCode != null" >
        refund_code = #{refundCode,jdbcType=VARCHAR},
      </if>
      <if test="refundRegisterDate != null" >
        refund_register_date = #{refundRegisterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cashierStaffId != null" >
        cashier_staff_id = #{cashierStaffId,jdbcType=INTEGER},
      </if>
      <if test="wxRefundId != null" >
        wx_refund_id = #{wxRefundId,jdbcType=VARCHAR},
      </if>
      <if test="zfbRefundId != null" >
        zfb_refund_id = #{zfbRefundId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jf.entity.RefundOrder" >
    update bu_refund_order
    set combine_order_id = #{combineOrderId,jdbcType=INTEGER},
      service_type = #{serviceType,jdbcType=CHAR},
      order_type = #{orderType,jdbcType=CHAR},
      service_order_id = #{serviceOrderId,jdbcType=INTEGER},
      combine_deposit_order_id = #{combineDepositOrderId,jdbcType=INTEGER},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      refund_agree_date = #{refundAgreeDate,jdbcType=TIMESTAMP},
      refund_method = #{refundMethod,jdbcType=CHAR},
      refund_req_no = #{refundReqNo,jdbcType=VARCHAR},
      failed_reason = #{failedReason,jdbcType=VARCHAR},
      try_times = #{tryTimes,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      success_date = #{successDate,jdbcType=TIMESTAMP},
      refund_code = #{refundCode,jdbcType=VARCHAR},
      refund_register_date = #{refundRegisterDate,jdbcType=TIMESTAMP},
      cashier_staff_id = #{cashierStaffId,jdbcType=INTEGER},
      wx_refund_id = #{wxRefundId,jdbcType=VARCHAR},
      zfb_refund_id = #{zfbRefundId,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.CombineOrderCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.CombineOrderCustom"  extends="com.jf.dao.CombineOrderMapper.BaseResultMap">
    <result column="status_desc" property="statusDesc" jdbcType="VARCHAR" />
    <result column="payment_name" property="paymentName" jdbcType="VARCHAR" />
	<result column="financial_status_desc" property="financialStatusDesc" jdbcType="VARCHAR" />
	<result column="financial_staff_name" property="financialStaffName" jdbcType="VARCHAR" />
	<result column="art_brand_group" property="artBrandGroup" jdbcType="VARCHAR" />
	<result column="source_client_desc" property="sourceClientDesc" jdbcType="VARCHAR" />
	<result column="order_type_desc" property="orderTypeDesc" jdbcType="VARCHAR" />
	<result column="each_day" property="eachDay" jdbcType="VARCHAR" />
	<result column="total_count" property="totalCount" jdbcType="INTEGER" />
	<result column="combine_amount" property="combineAmount" jdbcType="DECIMAL" />
	<result column="sub_order_amount" property="subOrderAmount" jdbcType="DECIMAL" />
	<result column="wx_amount" property="wxAmount" jdbcType="DECIMAL" />
	<result column="zfb_amount" property="zfbAmount" jdbcType="DECIMAL" />
	<result column="yl_amount" property="ylAmount" jdbcType="DECIMAL" />
	<result column="gzh_amount" property="gzhAmount" jdbcType="DECIMAL" />
	<result column="wx_count" property="wxCount" jdbcType="INTEGER" />
	<result column="zfb_count" property="zfbCount" jdbcType="INTEGER" />
	<result column="yl_count" property="ylCount" jdbcType="INTEGER" />
	<result column="gzh_count" property="gzhCount" jdbcType="INTEGER" />
	<result column="confirm_amount" property="confirmAmount" jdbcType="DECIMAL" />
	<result column="register_amount" property="registerAmount" jdbcType="DECIMAL" />
	<result column="no_deal_amount" property="noDealAmount" jdbcType="DECIMAL" />
	<result column="unusual_amount" property="unusualAmount" jdbcType="DECIMAL" />
	<result column="lock_date" property="lockDate" jdbcType="VARCHAR" />
	<result column="spr_chnl_desc" property="sprChnlDesc" jdbcType="VARCHAR" />
	<result column="register_date_amount" property="registerDateAmount" jdbcType="DECIMAL" />
	<result column="channel" property="channel" jdbcType="VARCHAR" />
	<result column="spreadname" property="spreadname" jdbcType="VARCHAR" />
	<result column="activityname" property="activityname" jdbcType="VARCHAR" />
	<result column="firstSpreadname" property="firstSpreadname" jdbcType="VARCHAR" />
	<result column="each_Day1" property="eachDay1" jdbcType="VARCHAR" />
	<result column="wxapp_amount" property="wxappAmount" jdbcType="DECIMAL" />
	<result column="wxgzh_amount" property="wxgzhAmount" jdbcType="DECIMAL" />
	<result column="cdo_wx_amount" property="cdowxAmount" jdbcType="DECIMAL" />
	<result column="cdo_gzh_amount" property="cdogzhAmount" jdbcType="DECIMAL" />
	<result column="zFb_amount" property="zFbamount" jdbcType="DECIMAL" />
	<result column="cdo_zfb_amount" property="cdozfbAmount" jdbcType="DECIMAL" />
	<result column="svip_wx_amount" property="svipwxAmount" jdbcType="DECIMAL" />
	<result column="svip_gzh_amount" property="svipgzhAmount" jdbcType="DECIMAL" />
	<result column="svip_zfb_amount" property="svipzfbAmount" jdbcType="DECIMAL" />
	  <result column="zfb_design_amount" property="zfbDesignAmount" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMap" type="com.jf.entity.CombineOrderCustom" extends="com.jf.dao.CombineOrderMapper.BaseResultMap">
  	<result column="received_date" property="receivedDate" jdbcType="DATE" />
  	<result column="received_amount" property="receivedAmount" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, combine_order_code, member_id, member_nick, address_id, receiver_name, receiver_phone, 
    receiver_address, total_amount, total_pay_amount, total_platform_preferential, total_mcht_preferential, 
    total_integral_preferential, status, cancel_type, cancel_reason, cancel_date, status_date, 
    is_user_del, payment_id, payment_no, pay_date, pay_status, financial_status, financial_no, 
    collection_register_date, financial_staff, financial_update_date, source_client, 
    order_type, pay_extra_info, order_extra_info, freight,promotion_type,distribution_amount,create_by, create_date, update_by, 
    update_date, remarks, del_flag,
	FUN_GET_STATUS_DESC("BU_COMBINE_ORDER", "STATUS", a.status) status_desc,
	(select b.remarks from sys_payment b where b.id=a.payment_id and b.del_flag='0')  payment_name,
	FUN_GET_STATUS_DESC("BU_COMBINE_ORDER", "FINANCIAL_STATUS", a.financial_status) financial_status_desc,
	(select b.staff_name from sys_staff_info b where b.staff_id=a.financial_staff and b.status='A')  financial_staff_name,
	(select group_concat(CONCAT('【',c.brand_name,'】 ',c.art_no)) from bu_sub_order b,bu_order_dtl c where b.combine_order_id=a.id and c.sub_order_id=b.id) art_brand_group,
	FUN_GET_STATUS_DESC("BU_COMBINE_ORDER", "SOURCE_CLIENT", a.source_client) source_client_desc,
	FUN_GET_STATUS_DESC("BU_COMBINE_ORDER", "ORDER_TYPE", a.order_type) order_type_desc,
	(
		CASE ( SELECT mi.reg_client FROM bu_member_info mi WHERE mi.del_flag = '0' AND mi.id = a.member_id )
		WHEN '5' 
			THEN '微信小程序'
		WHEN '6' 
			THEN '抖音'
		ELSE ( FUN_GET_STATUS_DESC("BU_MEMBER_INFO","SPR_CHNL", (select b.spr_chnl from bu_member_info b where b.id=a.member_id)))
		END
	) spr_chnl_desc,
	( 
		CASE ( SELECT k.reg_client FROM bu_member_info k WHERE k.id = a.member_id ) 
		WHEN '1' 
			THEN ( SELECT c.channel FROM bu_member_info b, bu_track_data c WHERE b.id = a.member_id AND b.req_imei NOT LIKE '000000%' AND b.req_imei IS NOT NULL AND b.req_imei = c.idfa AND b.del_flag = '0' AND c.del_flag = '0' LIMIT 1 ) 
		WHEN '5'
			THEN ( SELECT wxp.spr_plan_name FROM bu_member_info mi, bu_weixin_xcx_spr_dtl wxd, bu_weixin_xcx_spr_plan wxp WHERE mi.del_flag = '0' AND wxd.del_flag = '0' AND wxp.del_flag = '0' AND mi.weixin_xcx_spr_dtl_id = wxd.id AND wxd.spr_plan_id = wxp.id AND mi.id = a.member_id LIMIT 1 )
		WHEN '6'
		    THEN (SELECT dsc.spr_chnl_name FROM douyin_member_bind dm,douyin_spr_dtl dsd,douyin_spr_plan dsp,douyin_spr_chnl dsc WHERE dm.del_flag = '0' AND dsd.del_flag = '0' AND dsp.del_flag = '0' AND dsc.del_flag = '0' AND dm.member_id=dsd.member_id AND dsd.spr_plan_id=dsp.id AND dsp.spr_chnl_id=dsc.id AND dm.member_id = a.member_id LIMIT 1)
		ELSE ( SELECT c.channel FROM bu_member_info b, bu_track_data c WHERE b.id = a.member_id AND b.req_imei NOT LIKE '000000%' AND b.req_imei IS NOT NULL AND b.req_imei = c.imei AND b.del_flag = '0' AND c.del_flag = '0' LIMIT 1 ) 
		END 
	) channel,
	( CASE ( SELECT k.reg_client FROM bu_member_info k WHERE k.id = a.member_id ) WHEN '1' THEN ( SELECT c.spreadname FROM bu_member_info b, bu_track_data c WHERE b.id = a.member_id AND b.req_imei NOT LIKE '000000%' AND b.req_imei IS NOT NULL AND b.req_imei = c.idfa AND b.del_flag = '0' AND c.del_flag = '0' LIMIT 1 ) WHEN '6' THEN (SELECT dsp.spr_plan_site FROM douyin_member_bind dm,douyin_spr_dtl dsd,douyin_spr_plan dsp WHERE dm.del_flag = '0' AND dsd.del_flag = '0' AND dsp.del_flag = '0' AND dm.member_id=dsd.member_id AND dsd.spr_plan_id=dsp.id AND dm.member_id = a.member_id LIMIT 1) ELSE ( SELECT c.spreadname FROM bu_member_info b, bu_track_data c WHERE b.id = a.member_id AND b.req_imei NOT LIKE '000000%' AND b.req_imei IS NOT NULL AND b.req_imei = c.imei AND b.del_flag = '0' AND c.del_flag = '0' LIMIT 1 ) END ) spreadname,
	( CASE ( SELECT k.reg_client FROM bu_member_info k WHERE k.id = a.member_id ) WHEN '1' THEN ( SELECT c.activityname FROM bu_member_info b, bu_track_data c WHERE b.id = a.member_id AND b.req_imei NOT LIKE '000000%' AND b.req_imei IS NOT NULL AND b.req_imei = c.idfa AND b.del_flag = '0' AND c.del_flag = '0' LIMIT 1 ) ELSE ( SELECT c.activityname FROM bu_member_info b, bu_track_data c WHERE b.id = a.member_id AND b.req_imei NOT LIKE '000000%' AND b.req_imei IS NOT NULL AND b.req_imei = c.imei AND b.del_flag = '0' AND c.del_flag = '0' LIMIT 1 ) END ) activityname,
	( CASE ( SELECT k.reg_client FROM bu_member_info k WHERE k.id = a.member_id ) WHEN '1' THEN ( SELECT c.firstSpreadname FROM bu_member_info b, bu_track_data c WHERE b.id = a.member_id AND b.req_imei NOT LIKE '000000%' AND b.req_imei IS NOT NULL AND b.req_imei = c.idfa AND b.del_flag = '0' AND c.del_flag = '0' LIMIT 1 ) WHEN '6' THEN (SELECT dsp.spr_plan_site FROM douyin_member_bind dm,douyin_spr_dtl dsd,douyin_spr_plan dsp WHERE dm.del_flag = '0' AND dsd.del_flag = '0' AND dsp.del_flag = '0' AND dm.member_id=dsd.member_id AND dsd.spr_plan_id=dsp.id AND dm.member_id = a.member_id LIMIT 1) ELSE ( SELECT c.firstSpreadname FROM bu_member_info b, bu_track_data c WHERE b.id = a.member_id AND b.req_imei NOT LIKE '000000%' AND b.req_imei IS NOT NULL AND b.req_imei = c.imei AND b.del_flag = '0' AND c.del_flag = '0' LIMIT 1 ) END ) firstSpreadname
  </sql>
  <sql id="Column_List" >
    id, combine_order_code, member_id, member_nick, address_id, receiver_name, receiver_phone, 
    receiver_address, total_amount, total_pay_amount, total_platform_preferential, total_mcht_preferential, 
    total_integral_preferential, status, cancel_reason, cancel_date, status_date, payment_id, 
    payment_no, pay_date, pay_status, financial_status, financial_no, collection_register_date, 
    financial_staff, financial_update_date, source_client, order_type, create_by, create_date, 
    update_by, update_date, remarks, del_flag,
    (select b.received_date from bu_payment_platform_receivable_dtl b where b.payment_no = a.payment_no and b.del_flag='0')received_date,
    (select b.amount from bu_payment_platform_receivable_dtl b where b.payment_no = a.payment_no and b.del_flag='0')received_amount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.CombineOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_combine_order a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_combine_order a
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByExample" parameterType="com.jf.entity.CombineOrderExample" resultType="java.lang.Integer" >
    select count(*) from bu_combine_order a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByActivityAreaIdList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select 
    <include refid="Base_Column_List" />
    from bu_combine_order a
    where a.activity_area_id = #{activityAreaId,jdbcType=INTEGER}
  </select>
  
  <sql id="receivablesCountEachDayListSql">
	SELECT
	each_day,
	ifnull(sum(total_count), 0) AS total_count,
	ifnull(sum(combine_amount), 0.00) AS combine_amount,
	ifnull(sum(zfb_amount), 0.00) AS zfb_amount,
	ifnull(sum(zfb_count), 0) AS zfb_count,
	ifnull(sum(wx_amount), 0.00) AS wx_amount,
	ifnull(sum(wx_count), 0) AS wx_count,
	ifnull(sum(gzh_amount), 0.00) AS gzh_amount,
	ifnull(sum(gzh_count), 0) AS gzh_count<!-- ,
	sum(no_deal_amount) AS no_deal_amount,
	sum(register_amount) AS register_amount,
	sum(confirm_amount) AS confirm_amount,
	sum(register_date_amount) AS register_date_amount,
	(
		SELECT
			b.lock_date
		FROM
			bu_receipt_register_date_lock b
		WHERE
			b.lock_date = T.each_day
	) lock_date -->
FROM
	(
		SELECT
			DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
			count(co.id) total_count,
			SUM(co.total_pay_amount) combine_amount,
			0 AS zfb_amount,
			0 AS zfb_count,
			0 AS wx_amount,
			0 AS wx_count,
			0 AS gzh_amount,
			0 AS gzh_count<!-- ,
			0 AS no_deal_amount,
			0 AS register_amount,
			0 AS confirm_amount,
			0 AS register_date_amount -->
		FROM
			bu_combine_order co FORCE INDEX(index_combine_order_03)
		WHERE
			co.`status` = '1'
		AND co.del_flag = '0'
		AND co.pay_date IS NOT NULL
		AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
		AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
		AND co.payment_id IS NOT NULL
		GROUP BY
			each_day
		UNION
			SELECT
				DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
				0 AS total_count,
				0 AS combine_amount,
				SUM(co.total_pay_amount) zfb_amount,
				count(co.id) zfb_count,
				0 AS wx_amount,
				0 AS wx_count,
				0 AS gzh_amount,
				0 AS gzh_count<!-- ,
				0 AS no_deal_amount,
				0 AS register_amount,
				0 AS confirm_amount,
				0 AS register_date_amount -->
			FROM
				bu_combine_order co FORCE INDEX(index_combine_order_03)
			WHERE
				co.`status` = '1'
			AND co.del_flag = '0'
			AND co.pay_date IS NOT NULL
			AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
			AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
			AND co.payment_id IN (1, 6)
			GROUP BY
				each_day
			UNION
				SELECT
					DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
					0 AS total_count,
					0 AS combine_amount,
					0 AS zfb_amount,
					0 AS zfb_count,
					SUM(co.total_pay_amount) wx_amount,
					count(co.id) wx_count,
					0 AS gzh_amount,
					0 AS gzh_count<!-- ,
					0 AS no_deal_amount,
					0 AS register_amount,
					0 AS confirm_amount,
					0 AS register_date_amount -->
				FROM
					bu_combine_order co FORCE INDEX(index_combine_order_03)
				WHERE
					co.`status` = '1'
				AND co.del_flag = '0'
				AND co.pay_date IS NOT NULL
				AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
				AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
				AND co.payment_id IN (2, 5)
				GROUP BY
					each_day
				UNION
					SELECT
						DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
						0 AS total_count,
						0 AS combine_amount,
						0 AS zfb_amount,
						0 AS zfb_count,
						0 AS wx_amount,
						0 AS wx_count,
						SUM(co.total_pay_amount) gzh_amount,
						count(co.id) AS gzh_count<!-- ,
						0 AS no_deal_amount,
						0 AS register_amount,
						0 AS confirm_amount,
						0 AS register_date_amount -->
					FROM
						bu_combine_order co FORCE INDEX(index_combine_order_03)
					WHERE
						co.`status` = '1'
					AND co.del_flag = '0'
					AND co.pay_date IS NOT NULL
					AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
					AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
					AND co.payment_id in (4,7)
					GROUP BY
						each_day
<!-- 					UNION
						SELECT
							DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
							0 AS total_count,
							0 AS combine_amount,
							0 AS zfb_amount,
							0 AS zfb_count,
							0 AS wx_amount,
							0 AS wx_count,
							0 AS gzh_amount,
							0 AS gzh_count,
							SUM(co.total_pay_amount) no_deal_amount,
							0 AS register_amount,
							0 AS confirm_amount,
							0 AS register_date_amount
						FROM
							bu_combine_order co
						WHERE
							co.`status` = '1'
						AND co.del_flag = '0'
						AND co.pay_date IS NOT NULL
						AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
						AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
						AND co.financial_status = '0'
						GROUP BY
							each_day
						UNION
							SELECT
								DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
								0 AS total_count,
								0 AS combine_amount,
								0 AS zfb_amount,
								0 AS zfb_count,
								0 AS wx_amount,
								0 AS wx_count,
								0 AS gzh_amount,
								0 AS gzh_count,
								0 AS no_deal_amount,
								SUM(co.total_pay_amount) AS register_amount,
								0 AS confirm_amount,
								0 AS register_date_amount
							FROM
								bu_combine_order co
							WHERE
								co.`status` = '1'
							AND co.del_flag = '0'
							AND co.pay_date IS NOT NULL
							AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
							AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
							AND co.financial_status = '1'
							GROUP BY
								each_day
							UNION
								SELECT
									DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
									0 AS total_count,
									0 AS combine_amount,
									0 AS zfb_amount,
									0 AS zfb_count,
									0 AS wx_amount,
									0 AS wx_count,
									0 AS gzh_amount,
									0 AS gzh_count,
									0 AS no_deal_amount,
									0 AS register_amount,
									SUM(co.total_pay_amount) AS confirm_amount,
									0 AS register_date_amount
								FROM
									bu_combine_order co
								WHERE
									co.`status` = '1'
								AND co.del_flag = '0'
								AND co.pay_date IS NOT NULL
								AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
								AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
								AND co.financial_status = '2'
								GROUP BY
									each_day
								UNION
									SELECT
										DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_day,
										0 AS total_count,
										0 AS combine_amount,
										0 AS zfb_amount,
										0 AS zfb_count,
										0 AS wx_amount,
										0 AS wx_count,
										0 AS gzh_amount,
										0 AS gzh_count,
										0 AS no_deal_amount,
										0 AS register_amount,
										0 AS confirm_amount,
										SUM(co.total_pay_amount) AS register_date_amount
									FROM
										bu_combine_order co
									WHERE
										co.`status` = '1'
									AND co.del_flag = '0'
									AND co.collection_register_date IS NOT NULL
									AND co.collection_register_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
									AND co.collection_register_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
									GROUP BY
										each_day -->
	) t
GROUP BY
	t.each_day
ORDER BY
	t.each_day
LIMIT 61
	</sql>
	
	<select id="receivablesCountEachDayList" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    	SELECT TAB.* FROM (
		<include refid="receivablesCountEachDayListSql" />
		)TAB
       	<if test="MAX_NUM!=null and MAX_NUM!=''">
			LIMIT ${MIN_NUM},${MAX_NUM}
	    </if>
  	</select>

    <select id="countByExampleGroupByMemberId" parameterType="com.jf.entity.CombineOrderExample" resultType="java.lang.Integer" >
        select count(distinct member_id) from bu_combine_order a
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <select id="updateCombineOrders" parameterType="map" >
        update bu_combine_order co set co.financial_status=#{financialStatus},co.collection_register_date=#{collectionRegisterDate},co.update_by=#{updateBy},co.update_date=#{updateDate} where co.del_flag='0' and co.id in
        <foreach item="item" index="index" collection="idsList" open="(" separator="," close=")">
    		#{item}
		</foreach>
    </select>
    <select id="receivablesCount" parameterType="java.util.HashMap" resultType="java.util.HashMap" >
        select count(1) totalCount,sum(co.total_pay_amount) totalAmount from bu_combine_order co where co.del_flag='0' and co.status='1'
        <if test="paymentId !=null">
        and co.payment_id = #{paymentId}
        </if> 
        <if test="financialStatus !=null">
        and co.financial_status = #{financialStatus}
        </if> 
        <if test="combineOrderCode !=null">
        and co.combine_order_code = #{combineOrderCode}
        </if> 
        <if test="paymentNo !=null">
        and co.payment_no = #{paymentNo}
        </if> 
        <if test="financialNo !=null">
        and co.financial_no = #{financialNo}
        </if> 
        <if test="create_date_begin !=null">
        and co.create_date <![CDATA[ >= ]]> #{create_date_begin,jdbcType=VARCHAR}
        </if> 
        <if test="create_date_end !=null">
        and co.create_date <![CDATA[ <= ]]> #{create_date_end,jdbcType=VARCHAR}
        </if> 
        <if test="pay_date_begin !=null">
        and co.pay_date <![CDATA[ >= ]]> #{pay_date_begin,jdbcType=VARCHAR}
        </if> 
        <if test="pay_date_end !=null">
        and co.pay_date <![CDATA[ <= ]]> #{pay_date_end,jdbcType=VARCHAR}
        </if> 
        <if test="register_date_begin !=null">
        and co.register_date <![CDATA[ >= ]]> #{register_date_begin,jdbcType=VARCHAR}
        </if> 
        <if test="register_date_end !=null">
        and co.register_date <![CDATA[ <= ]]> #{register_date_end,jdbcType=VARCHAR}
        </if> 
    </select>
    
    <select id="selectByCustomExample" resultMap="ResultMap" parameterType="com.jf.entity.CombineOrderCustomExample">
	    select
	    <if test="distinct" >
	      distinct
	    </if>
	    <include refid="Column_List" />
	    from bu_combine_order a
	    <if test="_parameter != null" >
	      <include refid="Example_Where_Clause" />
	    </if>
	    <if test="orderByClause != null" >
	      order by ${orderByClause}
	    </if>
	    <if test="limitStart != null and limitStart>=0" >
	      limit #{limitStart} , #{limitSize}
	    </if>
    </select>
    <select id="countByCustomExample" parameterType="com.jf.entity.CombineOrderCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_combine_order a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="totalAndroidCount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT
		"合计" chnl_name,
		SUM(t.new_guest_combine_order_count) new_guest_combine_order_count,
		SUM(t.new_guest_consume_count) new_guest_consume_count,
		SUM(t.new_guest_pay_amount) new_guest_pay_amount,
		SUM(t.old_guest_combine_order_count) old_guest_combine_order_count,
		SUM(t.old_guest_consume_count) old_guest_consume_count,
		SUM(t.old_guest_pay_amount) old_guest_pay_amount,
		SUM(t.new_guest_pay_amount + t.old_guest_pay_amount) total_pay_amount,
		ROUND(SUM(t.new_guest_consume_count) / SUM(t.old_guest_consume_count), 2) rate
	FROM
		(
			SELECT
				mi.spr_chnl,
				ss.STATUS_DESC chnl_name,
				COUNT(co.id) new_guest_combine_order_count,
				COUNT(DISTINCT co.member_id) new_guest_consume_count,
				IFNULL(SUM(co.total_pay_amount), 0) new_guest_pay_amount,
				0 AS old_guest_combine_order_count,
				0 AS old_guest_consume_count,
				0 AS old_guest_pay_amount
			FROM
				bu_combine_order co,
      <if test="visitType == 'firstVisit'">
          bu_member_info mi,
      </if>
      <if test="visitType == 'newVisit'">
          bu_member_extend mi,
      </if>
      <if test="visitType == 'orderVisit'">
          bu_combine_order_extend mi,
      </if>
      				sys_status ss
			WHERE
				co.`status` = '1'
			AND co.del_flag = '0'
			AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
			AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}

      <if test="visitType == 'firstVisit'">
          AND co.member_id = mi.id
      </if>
      <if test="visitType == 'newVisit'">
          AND co.member_id = mi.member_id
      </if>
      <if test="visitType == 'orderVisit'">
          AND  co.id= mi.combine_order_id
      </if>
            AND mi.del_flag = '0'
			AND ss.table_name = 'BU_MEMBER_INFO'
			AND ss.col_name = 'SPR_CHNL'
			AND mi.spr_chnl = ss.status_value
			<if test="sprChnlName != null" >
			  AND ss.status_desc LIKE #{sprChnlName}
			</if>
			<if test="groupPrefixList != null" >
			  AND
			  <foreach item="item" index="index" collection="groupPrefixList" open="(" separator="OR" close=")">
				  ss.status_desc LIKE #{item}
			  </foreach>
			</if>
			AND co.is_first_order = '1'
			UNION
				SELECT
					mi.spr_chnl,
					ss.STATUS_DESC chnl_name,
					0 new_guest_combine_order_count,
					0 new_guest_consume_count,
					0 new_guest_pay_amount,
					COUNT(co.id) old_guest_combine_order_count,
					COUNT(DISTINCT co.member_id) old_guest_consume_count,
					IFNULL(SUM(co.total_pay_amount), 0) old_guest_pay_amount
				FROM
					bu_combine_order co,
      <if test="visitType == 'firstVisit'">
          bu_member_info mi,
      </if>
      <if test="visitType == 'newVisit'">
          bu_member_extend mi,
      </if>
      <if test="visitType == 'orderVisit'">
          bu_combine_order_extend mi,
      </if>
      					sys_status ss
				WHERE
					co.`status` = '1'
				AND co.del_flag = '0'
				AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
				AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
      <if test="visitType == 'firstVisit'">
          AND co.member_id = mi.id
      </if>
      <if test="visitType == 'newVisit'">
          AND co.member_id = mi.member_id
      </if>
      <if test="visitType == 'orderVisit'">
          AND  co.id= mi.combine_order_id
      </if>
				AND mi.del_flag = '0'
				AND ss.table_name = 'BU_MEMBER_INFO'
				AND ss.col_name = 'SPR_CHNL'
				AND mi.spr_chnl = ss.status_value
				<if test="sprChnlName != null" >
				  AND ss.status_desc LIKE #{sprChnlName}
				</if>
				<if test="groupPrefixList != null" >
				  AND
				  <foreach item="item" index="index" collection="groupPrefixList" open="(" separator="OR" close=")">
					  ss.status_desc LIKE #{item}
				  </foreach>
				</if>
				AND co.is_first_order = '0'
		) t
  </select>
  <select id="androidCount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT
		t.spr_chnl,
		t.chnl_name,
		SUM(t.new_guest_combine_order_count) new_guest_combine_order_count,
		SUM(t.new_guest_consume_count) new_guest_consume_count,
		SUM(t.new_guest_pay_amount) new_guest_pay_amount,
		SUM(t.old_guest_combine_order_count) old_guest_combine_order_count,
		SUM(t.old_guest_consume_count) old_guest_consume_count,
		SUM(t.old_guest_pay_amount) old_guest_pay_amount,
		SUM(t.new_guest_pay_amount + t.old_guest_pay_amount) total_pay_amount,
		ROUND(SUM(t.new_guest_consume_count) / SUM(t.old_guest_consume_count), 2) rate
	FROM
		(
			SELECT
				mi.spr_chnl,
				ss.STATUS_DESC chnl_name,
				COUNT(co.id) new_guest_combine_order_count,
				COUNT(DISTINCT co.member_id) new_guest_consume_count,
				IFNULL(SUM(co.total_pay_amount), 0) new_guest_pay_amount,
				0 AS old_guest_combine_order_count,
				0 AS old_guest_consume_count,
				0 AS old_guest_pay_amount
			FROM
				bu_combine_order co,
              <if test="visitType == 'firstVisit'">
                  bu_member_info mi,
              </if>
              <if test="visitType == 'newVisit'">
                  bu_member_extend mi,
              </if>
              <if test="visitType == 'orderVisit'">
                  bu_combine_order_extend mi,
              </if>
				sys_status ss
			WHERE
				co.`status` = '1'
			AND co.del_flag = '0'
			AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
			AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
            <if test="visitType == 'firstVisit'">
            AND co.member_id = mi.id
            </if>
            <if test="visitType == 'newVisit'">
            AND co.member_id = mi.member_id
            </if>
            <if test="visitType == 'orderVisit'">
            AND  co.id= mi.combine_order_id
            </if>
			AND mi.del_flag = '0'
            AND mi.spr_chnl = ss.status_value
            AND ss.table_name = 'BU_MEMBER_INFO'
			AND ss.col_name = 'SPR_CHNL'
			<if test="sprChnlName != null" >
				AND ss.status_desc LIKE #{sprChnlName}
			</if>
			<if test="groupPrefixList != null" >
				AND
				<foreach item="item" index="index" collection="groupPrefixList" open="(" separator="OR" close=")">
					ss.status_desc LIKE #{item}
				</foreach>
			</if>
			AND co.is_first_order = '1'
			GROUP BY
				ss.status_desc
			UNION
				SELECT
					mi.spr_chnl,
					ss.STATUS_DESC chnl_name,
					0 new_guest_combine_order_count,
					0 new_guest_consume_count,
					0 new_guest_pay_amount,
					COUNT(co.id) old_guest_combine_order_count,
					COUNT(DISTINCT co.member_id) old_guest_consume_count,
					IFNULL(SUM(co.total_pay_amount), 0) old_guest_pay_amount
				FROM
					bu_combine_order co,
                      <if test="visitType == 'firstVisit'">
                          bu_member_info mi,
                      </if>
                      <if test="visitType == 'newVisit'">
                          bu_member_extend mi,
                      </if>
                      <if test="visitType == 'orderVisit'">
                          bu_combine_order_extend mi,
                      </if>
      					sys_status ss
				WHERE
					co.`status` = '1'
				AND co.del_flag = '0'
				AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
				AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}

      <if test="visitType == 'firstVisit'">
          AND co.member_id = mi.id
      </if>
      <if test="visitType == 'newVisit'">
          AND co.member_id = mi.member_id
      </if>
      <if test="visitType == 'orderVisit'">
          AND  co.id= mi.combine_order_id
      </if>
                AND mi.del_flag = '0'
				AND ss.table_name = 'BU_MEMBER_INFO'
				AND ss.col_name = 'SPR_CHNL'
				AND mi.spr_chnl = ss.status_value
				<if test="sprChnlName != null" >
					AND ss.status_desc LIKE #{sprChnlName}
				</if>
				<if test="groupPrefixList != null" >
				  	AND
					<foreach item="item" index="index" collection="groupPrefixList" open="(" separator="OR" close=")">
					  	ss.status_desc LIKE #{item}
					</foreach>
				</if>
				AND co.is_first_order = '0'
				GROUP BY
					ss.status_desc
		) t
	GROUP BY
		t.spr_chnl
	ORDER BY
		t.spr_chnl
  </select>
  
  <select id="totalIosCount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT
		"合计" spreadname,
		SUM(t.new_guest_combine_order_count) new_guest_combine_order_count,
		SUM(t.new_guest_consume_count) new_guest_consume_count,
		SUM(t.new_guest_pay_amount) new_guest_pay_amount,
		SUM(t.old_guest_combine_order_count) old_guest_combine_order_count,
		SUM(t.old_guest_consume_count) old_guest_consume_count,
		SUM(t.old_guest_pay_amount) old_guest_pay_amount,
		SUM(t.new_guest_pay_amount + t.old_guest_pay_amount) total_pay_amount,
		ROUND(SUM(t.new_guest_consume_count) / SUM(t.old_guest_consume_count), 2) AS rate
	FROM
		(
			SELECT
				COUNT(tmp.id) new_guest_combine_order_count,
				COUNT(DISTINCT tmp.member_id) new_guest_consume_count,
				IFNULL(SUM(tmp.total_pay_amount), 0) new_guest_pay_amount,
				0 old_guest_combine_order_count,
				0 old_guest_consume_count,
				0 old_guest_pay_amount
			FROM
				<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
					bu_track_data td,
				</if>
				<if test="visitType == 'orderVisit'">
					bu_combine_order_extend coe,
				</if>
				bu_spread_name sn,
				bu_spread_activity_group sag,
				<if test="activityGroupSetId != null">
					bu_spread_activity_group_set saps,
					bu_spread_activity_group_set_dtl sapsd,
				</if>
				(
					SELECT
						co.id,
						co.member_id,
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
							mi.req_imei,
						</if>
							co.total_pay_amount
					FROM
						bu_combine_order co
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
							,bu_member_info mi
						</if>
					WHERE
					co.del_flag = '0'
					AND co.`status` = '1'
					AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
					AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
					AND co.is_first_order = '1'
					<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						AND co.member_id = mi.id
						AND mi.del_flag = '0'
						AND mi.reg_client = '1'
						AND mi.req_imei IS NOT NULL
						AND mi.req_imei != ''
						AND mi.req_imei != '00000000-0000-0000-0000-000000000000'
					</if>
				) tmp
			WHERE
			<if test="visitType == 'firstVisit'">
				<if test="deviceType == 1">
					tmp.req_imei = td.idfa
				</if>
				<if test="deviceType == 2">
					tmp.req_imei = td.imei
				</if>
				AND td.del_flag = '0'
				AND td.firstSpreadname IS NOT NULL
				AND td.firstSpreadname = sn.spread_name
			</if>
			<if test="visitType == 'newVisit'">
				<if test="deviceType == 1">
					tmp.req_imei = td.idfa
				</if>
				<if test="deviceType == 2">
					tmp.req_imei = td.imei
				</if>
				and td.del_flag = '0'
				AND td.spreadname IS NOT NULL
				AND td.spreadname = sn.spread_name
			</if>
			<if test="visitType == 'orderVisit'">
				tmp.id=coe.combine_order_id
				AND coe.del_flag = '0'
				AND coe.spreadname is not null
				AND coe.spreadname = sn.spread_name
			</if>
			AND sn.device_type = #{deviceType}
			AND sn.del_flag = '0'
			AND sn.activity_group_id = sag.id
			AND sag.channel = #{channel}
	  		AND sag.device_type = #{deviceType}
			<if test="activityGroupId !=null">
				AND sn.activity_group_id = #{activityGroupId}
			</if>
			<if test="activityGroupSetId != null">
				AND saps.del_flag = '0'
				AND sapsd.del_flag = '0'
				AND saps.id = #{activityGroupSetId}
				AND saps.status = '1'
				AND saps.id = sapsd.spread_activity_group_set_id
				AND sapsd.activity_group_id = sag.id
				AND saps.device_type = #{deviceType}
			</if>
			<if test="spreadName !=null">
				AND sn.spread_name = #{spreadName}
			</if>
			UNION
				SELECT
					0 new_guest_combine_order_count,
					0 new_guest_consume_count,
					0 new_guest_pay_amount,
					COUNT(tmp.id) old_guest_combine_order_count,
					COUNT(DISTINCT tmp.member_id) old_guest_consume_count,
					IFNULL(SUM(tmp.total_pay_amount), 0) old_guest_pay_amount
				FROM
					<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						bu_track_data td,
					</if>
					<if test="visitType == 'orderVisit'">
						bu_combine_order_extend coe,
					</if>
					bu_spread_name sn,
					bu_spread_activity_group sag,
					<if test="activityGroupSetId != null">
						bu_spread_activity_group_set saps,
						bu_spread_activity_group_set_dtl sapsd,
					</if>
					(
						SELECT
							co.id,
							co.member_id,
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								mi.req_imei,
							</if>
							co.total_pay_amount
						FROM
							bu_combine_order co
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								,bu_member_info mi
							</if>
						WHERE
					co.del_flag = '0'
					AND co.`status` = '1'
					AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
					AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
					AND co.is_first_order = '0'
					<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						AND co.member_id = mi.id
						AND mi.del_flag = '0'
						AND mi.reg_client = '1'
						AND mi.req_imei IS NOT NULL
						AND mi.req_imei != ''
						AND mi.req_imei != '00000000-0000-0000-0000-000000000000'
					</if>
					) tmp
				WHERE
				<if test="visitType == 'firstVisit'">
					<if test="deviceType == 1">
						tmp.req_imei = td.idfa
					</if>
					<if test="deviceType == 2">
						tmp.req_imei = td.imei
					</if>
					AND td.del_flag = '0'
					AND td.firstSpreadname IS NOT NULL
					AND td.firstSpreadname = sn.spread_name
				</if>
				<if test="visitType == 'newVisit'">
					<if test="deviceType == 1">
						tmp.req_imei = td.idfa
					</if>
					<if test="deviceType == 2">
						tmp.req_imei = td.imei
					</if>
					and td.del_flag = '0'
					AND td.spreadname IS NOT NULL
					AND td.spreadname = sn.spread_name
				</if>
				<if test="visitType == 'orderVisit'">
					tmp.id=coe.combine_order_id
					AND coe.del_flag = '0'
					AND coe.spreadname is not null
					AND coe.spreadname = sn.spread_name
				</if>
				AND sn.device_type = #{deviceType}
				AND sn.del_flag = '0'
				AND sn.activity_group_id = sag.id
				AND sag.channel = #{channel}
	  			AND sag.device_type = #{deviceType}
				<if test="activityGroupId !=null">
					AND sn.activity_group_id = #{activityGroupId}
				</if>
				<if test="activityGroupSetId != null">
					AND saps.del_flag = '0'
					AND sapsd.del_flag = '0'
					AND saps.id = #{activityGroupSetId}
					AND saps.status = '1'
					AND saps.id = sapsd.spread_activity_group_set_id
					AND sapsd.activity_group_id = sag.id
					AND saps.device_type = #{deviceType}
				</if>
				<if test="spreadName !=null">
					AND sn.spread_name = #{spreadName}
				</if>
		) t 
  </select>
  <select id="iosCount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT
		t.spreadname,
		t.seq_no,
		SUM(t.new_guest_combine_order_count) new_guest_combine_order_count,
		SUM(t.new_guest_consume_count) new_guest_consume_count,
		SUM(t.new_guest_pay_amount) new_guest_pay_amount,
		SUM(t.old_guest_combine_order_count) old_guest_combine_order_count,
		SUM(t.old_guest_consume_count) old_guest_consume_count,
		SUM(t.old_guest_pay_amount) old_guest_pay_amount,
		SUM(t.new_guest_pay_amount + t.old_guest_pay_amount) total_pay_amount,
		ROUND(SUM(t.new_guest_consume_count) / SUM(t.old_guest_consume_count), 2) rate
	FROM
		(
			SELECT
				<if test="visitType == 'firstVisit'">
					td.firstSpreadname spreadname,
				</if>
				<if test="visitType == 'newVisit'">
					td.spreadname spreadname,
				</if>
				<if test="visitType == 'orderVisit'">
					coe.spreadname spreadname,
				</if>
				sn.seq_no,
				COUNT(tmp.id) new_guest_combine_order_count,
				COUNT(DISTINCT tmp.member_id) new_guest_consume_count,
				IFNULL(SUM(tmp.total_pay_amount), 0) new_guest_pay_amount,
				0 old_guest_combine_order_count,
				0 old_guest_consume_count,
				0 old_guest_pay_amount
			FROM
				<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
				bu_track_data td,
				</if>
				<if test="visitType == 'orderVisit'">
				bu_combine_order_extend coe,
				</if>
				bu_spread_name sn,
				bu_spread_activity_group sag,
				<if test="activityGroupSetId != null">
					bu_spread_activity_group_set saps,
					bu_spread_activity_group_set_dtl sapsd,
				</if>
				(
					SELECT
						co.id,
						co.member_id,
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						mi.req_imei,
						</if>
						co.total_pay_amount
					FROM
						bu_combine_order co
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						,bu_member_info mi
						</if>
					WHERE
						co.del_flag = '0'
						AND co.`status` = '1'
						AND co.del_flag = '0'
						AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
						AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
						AND co.is_first_order = '1'
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						AND co.member_id = mi.id
						AND mi.del_flag = '0'
						AND mi.reg_client = '1'
						AND mi.req_imei IS NOT NULL
						AND mi.req_imei != ''
						AND mi.req_imei != '00000000-0000-0000-0000-000000000000'
						</if>
				) tmp
			WHERE
			<if test="visitType == 'firstVisit'">
				<if test="deviceType == 1">
					tmp.req_imei = td.idfa
				</if>
				<if test="deviceType == 2">
					tmp.req_imei = td.imei
				</if>
				AND td.del_flag = '0'
				AND td.firstSpreadname IS NOT NULL
				AND td.firstSpreadname = sn.spread_name
			</if>
			<if test="visitType == 'newVisit'">
				<if test="deviceType == 1">
					tmp.req_imei = td.idfa
				</if>
				<if test="deviceType == 2">
					tmp.req_imei = td.imei
				</if>
				and td.del_flag = '0'
				AND td.spreadname IS NOT NULL
				AND td.spreadname = sn.spread_name
			</if>
			<if test="visitType == 'orderVisit'">
				tmp.id=coe.combine_order_id
				AND coe.del_flag = '0'
				AND coe.spreadname is not null
				AND coe.spreadname = sn.spread_name
			</if>
			AND sn.device_type = #{deviceType}
			AND sn.del_flag = '0'
			AND sn.activity_group_id = sag.id
			AND sag.channel = #{channel}
			AND sag.device_type = #{deviceType}
			<if test="activityGroupId != null">
				AND sn.activity_group_id = #{activityGroupId}
			</if>
			<if test="activityGroupSetId != null">
				AND saps.del_flag = '0'
				AND sapsd.del_flag = '0'
				AND saps.id = #{activityGroupSetId}
				AND saps.status = '1'
				AND saps.id = sapsd.spread_activity_group_set_id
				AND sapsd.activity_group_id = sag.id
				AND saps.device_type = #{deviceType}
			</if>
			<if test="spreadName != null">
				AND sn.spread_name = #{spreadName}
			</if>
			GROUP BY
				<if test="visitType == 'firstVisit'">
					td.firstSpreadname
				</if>
				<if test="visitType == 'newVisit'">
					td.spreadname
				</if>
				<if test="visitType == 'orderVisit'">
					coe.spreadname
				</if>
			UNION
				SELECT
					<if test="visitType == 'firstVisit'">
						td.firstSpreadname spreadname,
					</if>
					<if test="visitType == 'newVisit'">
						td.spreadname spreadname,
					</if>
					<if test="visitType == 'orderVisit'">
						coe.spreadname spreadname,
					</if>
					sn.seq_no,
					0 new_guest_combine_order_count,
					0 new_guest_consume_count,
					0 new_guest_pay_amount,
					COUNT(tmp.id) old_guest_combine_order_count,
					COUNT(DISTINCT tmp.member_id) old_guest_consume_count,
					IFNULL(SUM(tmp.total_pay_amount), 0) old_guest_pay_amount
				FROM
					<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						bu_track_data td,
					</if>
					<if test="visitType == 'orderVisit'">
						bu_combine_order_extend coe,
					</if>
					bu_spread_name sn,
					bu_spread_activity_group sag,
					<if test="activityGroupSetId != null">
						bu_spread_activity_group_set saps,
						bu_spread_activity_group_set_dtl sapsd,
					</if>
					(
						SELECT
							co.id,
							co.member_id,
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								mi.req_imei,
							</if>
							co.total_pay_amount
						FROM
							bu_combine_order co
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								,bu_member_info mi
							</if>
						WHERE
						co.del_flag = '0'
						AND co.`status` = '1'
						AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
						AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
						AND co.is_first_order = '0'
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
							AND co.member_id = mi.id
							AND mi.del_flag = '0'
							AND mi.reg_client = '1'
							AND mi.req_imei IS NOT NULL
							AND mi.req_imei != ''
							AND mi.req_imei != '00000000-0000-0000-0000-000000000000'
						</if>
					) tmp
				WHERE
				<if test="visitType == 'firstVisit'">
					<if test="deviceType == 1">
						tmp.req_imei = td.idfa
					</if>
					<if test="deviceType == 2">
						tmp.req_imei = td.imei
					</if>
					AND td.del_flag = '0'
					AND td.firstSpreadname IS NOT NULL
					AND td.firstSpreadname = sn.spread_name
				</if>
				<if test="visitType == 'newVisit'">
					<if test="deviceType == 1">
						tmp.req_imei = td.idfa
					</if>
					<if test="deviceType == 2">
						tmp.req_imei = td.imei
					</if>
					and td.del_flag = '0'
					AND td.spreadname IS NOT NULL
					AND td.spreadname = sn.spread_name
				</if>
				<if test="visitType == 'orderVisit'">
					tmp.id=coe.combine_order_id
					AND coe.del_flag = '0'
					AND coe.spreadname is not null
					AND coe.spreadname = sn.spread_name
				</if>
				AND sn.device_type = #{deviceType}
				AND sn.del_flag = '0'
				AND sn.activity_group_id = sag.id
				AND sag.channel = #{channel}
	  			AND sag.device_type = #{deviceType}
				<if test="activityGroupId != null">
					AND sn.activity_group_id = #{activityGroupId}
				</if>
				<if test="activityGroupSetId != null">
					AND saps.del_flag = '0'
					AND sapsd.del_flag = '0'
					AND saps.id = #{activityGroupSetId}
					AND saps.status = '1'
					AND saps.id = sapsd.spread_activity_group_set_id
					AND sapsd.activity_group_id = sag.id
					AND saps.device_type = #{deviceType}
				</if>
				<if test="spreadName != null">
					AND sn.spread_name = #{spreadName}
				</if>
				GROUP BY
					<if test="visitType == 'firstVisit'">
						td.firstSpreadname
					</if>
					<if test="visitType == 'newVisit'">
						td.spreadname
					</if>
					<if test="visitType == 'orderVisit'">
						coe.spreadname
					</if>
		) t
	GROUP BY
		t.spreadname
	ORDER BY
		t.seq_no
  </select>
  
  <select id="androidCountNew" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT
  		TAB.create_date,
	 	<if test="groupType == 1">
			sd.total_consumption,
			ROUND(sd.total_consumption / TAB.discount_rate,2) actual_consumption,
			sd.conversion_quantity,
			ROUND(sd.total_consumption / TAB.discount_rate / sd.conversion_quantity,2) single_active_cost,
			TAB.new_guest_combine_order_count,
			ROUND(sd.total_consumption / TAB.discount_rate / TAB.new_guest_combine_order_count,2) new_guest_cost,
			TAB.new_guest_consume_count,
			TAB.new_guest_pay_amount,
			ROUND(TAB.new_guest_pay_amount / TAB.new_guest_combine_order_count,2) new_unit_price,
			TAB.old_guest_combine_order_count,
			TAB.old_guest_consume_count,
			TAB.old_guest_pay_amount,
			ROUND(TAB.old_guest_pay_amount / TAB.old_guest_consume_count,2) old_unit_price,
			(TAB.new_guest_pay_amount + TAB.old_guest_pay_amount) total_pay_amount,
			ROUND(TAB.new_guest_consume_count / TAB.old_guest_consume_count,2) rate,
			ROUND((TAB.new_guest_pay_amount + TAB.old_guest_pay_amount) / (sd.total_consumption / TAB.discount_rate),2) roi,
		</if>
		<if test="groupType == 2 or groupType == 3">
			ROUND(SUM(sd.total_consumption),2) total_consumption,
			ROUND(SUM(sd.total_consumption / sd.discount_rate),2) actual_consumption,
			cast(SUM(sd.conversion_quantity) AS SIGNED) conversion_quantity,
			ROUND(SUM(sd.total_consumption / sd.discount_rate) / SUM(sd.conversion_quantity),2) single_active_cost,
			TAB.new_guest_combine_order_count,
			ROUND(SUM(sd.total_consumption / sd.discount_rate) / TAB.new_guest_combine_order_count,2) new_guest_cost,
			TAB.new_guest_consume_count,
			TAB.new_guest_pay_amount,
			ROUND(TAB.new_guest_pay_amount / TAB.new_guest_combine_order_count,2) new_unit_price,
			TAB.old_guest_combine_order_count,
			TAB.old_guest_consume_count,
			TAB.old_guest_pay_amount,
			ROUND(TAB.old_guest_pay_amount / TAB.old_guest_consume_count,2) old_unit_price,
			(TAB.new_guest_pay_amount + TAB.old_guest_pay_amount) total_pay_amount,
			ROUND(TAB.new_guest_consume_count / TAB.old_guest_consume_count,2) rate,
			ROUND((TAB.new_guest_pay_amount + TAB.old_guest_pay_amount) / SUM(sd.total_consumption / sd.discount_rate),2) roi,
		</if>
		TAB.chnl_name
	FROM(
		SELECT
			t.create_date,
			t.spr_chnl,
			#{sprChnlNameDesc} chnl_name,
			<if test="groupType == 1">
				(select acg.group_id from bu_android_channel_group acg where acg.id=#{androidChannelGroupId}) group_id,
				(select gdr.discount_rate from bu_android_channel_group_discount_rate gdr where gdr.del_flag = '0' and gdr.date = t.create_date and gdr.android_channel_group_id = #{androidChannelGroupId}) discount_rate,
			</if>
			SUM(t.new_guest_combine_order_count) new_guest_combine_order_count,
			SUM(t.new_guest_consume_count) new_guest_consume_count,
			SUM(t.new_guest_pay_amount) new_guest_pay_amount,
			SUM(t.old_guest_combine_order_count) old_guest_combine_order_count,
			SUM(t.old_guest_consume_count) old_guest_consume_count,
			SUM(t.old_guest_pay_amount) old_guest_pay_amount,
			SUM(t.new_guest_pay_amount + t.old_guest_pay_amount) total_pay_amount,
			ROUND(SUM(t.new_guest_consume_count) / SUM(t.old_guest_consume_count), 2) rate
		FROM(
			SELECT
				DATE_FORMAT(co.create_date, '%Y-%m-%d') create_date,
				mi.spr_chnl,
				ss.STATUS_DESC chnl_name,
				COUNT(co.id) new_guest_combine_order_count,
				COUNT(DISTINCT co.member_id) new_guest_consume_count,
				IFNULL(SUM(co.total_pay_amount), 0) new_guest_pay_amount,
				0 old_guest_combine_order_count,
				0 old_guest_consume_count,
				0 old_guest_pay_amount
			FROM
				bu_combine_order co,

      <if test="visitType == 'firstVisit'">
          bu_member_info mi,
      </if>
      <if test="visitType == 'newVisit'">
          bu_member_extend mi,
      </if>
      <if test="visitType == 'orderVisit'">
          bu_combine_order_extend mi,
      </if>
      				sys_status ss
			WHERE
				co.`status` = '1'
			AND co.del_flag = '0'
			AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
			AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
      <if test="visitType == 'firstVisit'">
          AND co.member_id = mi.id
      </if>
      <if test="visitType == 'newVisit'">
          AND co.member_id = mi.member_id
      </if>
      <if test="visitType == 'orderVisit'">
          AND  co.id= mi.combine_order_id
      </if>
            AND mi.del_flag = '0'
			AND ss.table_name = 'BU_MEMBER_INFO'
			AND ss.col_name = 'SPR_CHNL'
			AND mi.spr_chnl = ss.status_value
			<if test="sprChnlName != null" >
				AND ss.status_desc LIKE #{sprChnlName}
			</if>
			<if test="groupPrefixList != null ">
				AND
				<foreach item="item" index="index" collection="groupPrefixList" open="(" separator="OR" close=")">
					ss.status_desc LIKE #{item}
				</foreach>
			</if>
			AND co.is_first_order = '1'
			GROUP BY
				DATE_FORMAT(co.create_date, '%Y-%m-%d')
			UNION
				SELECT
					DATE_FORMAT(co.create_date, '%Y-%m-%d') create_date,
					mi.spr_chnl,
					ss.STATUS_DESC chnl_name,
					0 new_guest_combine_order_count,
					0 new_guest_consume_count,
					0 new_guest_pay_amount,
					COUNT(co.id) old_guest_combine_order_count,
					COUNT(DISTINCT co.member_id) old_guest_consume_count,
					IFNULL(SUM(co.total_pay_amount), 0) old_guest_pay_amount
				FROM
					bu_combine_order co,
      <if test="visitType == 'firstVisit'">
          bu_member_info mi,
      </if>
      <if test="visitType == 'newVisit'">
          bu_member_extend mi,
      </if>
      <if test="visitType == 'orderVisit'">
          bu_combine_order_extend mi,
      </if>
      					sys_status ss
				WHERE
					co.`status` = '1'
				AND co.del_flag = '0'
				AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
				AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
      <if test="visitType == 'firstVisit'">
          AND co.member_id = mi.id
      </if>
      <if test="visitType == 'newVisit'">
          AND co.member_id = mi.member_id
      </if>
      <if test="visitType == 'orderVisit'">
          AND  co.id= mi.combine_order_id
      </if>
                AND mi.del_flag = '0'
				AND ss.table_name = 'BU_MEMBER_INFO'
				AND ss.col_name = 'SPR_CHNL'
				AND mi.spr_chnl = ss.status_value
				<if test="sprChnlName != null" >
					AND ss.status_desc LIKE #{sprChnlName}
				</if>
				<if test="groupPrefixList != null ">
					AND
					<foreach item="item" index="index" collection="groupPrefixList" open="(" separator="OR" close=")">
					  ss.status_desc LIKE #{item}
					</foreach>
				</if>
				AND co.is_first_order = '0'
				GROUP BY
					DATE_FORMAT(co.create_date, '%Y-%m-%d')
		) t
	GROUP BY
		t.create_date
	ORDER BY
		t.create_date) TAB
		<if test="groupType == 1">
			left join bu_spread_data sd on sd.date = TAB.create_date AND sd.account_id = TAB.group_id AND sd.del_flag = '0'
		</if>
		<if test="groupType == 2">
			LEFT JOIN (
				SELECT
					m.*, gdr.discount_rate
				FROM
					bu_android_channel_group k1,
					bu_android_channel_group k2,
					bu_spread_data m,
					bu_android_channel_group_discount_rate gdr
				WHERE
					k1.id = #{androidChannelGroupId}
				AND K2.id = gdr.android_channel_group_id
				AND m.date = gdr.date
				AND k1.del_flag='0'
				and k1.`status`='1'
				and k2.prefix like CONCAT(k1.prefix,'%')
				AND k2.del_flag='0'
				and k2.`status`='1'
				and k2.group_id=m.account_id
				AND m.del_flag = '0'
				AND gdr.del_flag = '0'
			) sd ON sd.date = TAB.create_date group by TAB.create_date
		</if>
		<if test="groupType == 3">
			LEFT JOIN (
				SELECT
					m.*, gdr.discount_rate
				FROM
					bu_android_channel_group acg,
					bu_spread_data m,
					bu_android_channel_group_discount_rate gdr
				WHERE
					acg.group_id = m.account_id
				AND acg.id = gdr.android_channel_group_id
				AND m.date = gdr.date
				and acg.del_flag = '0'
				and acg.status = '1'
				and m.del_flag = '0'
				and gdr.del_flag = '0'
				<if test="androidChannelGroupIdList != null">
					AND acg.id in
					<foreach item="item" index="index" collection="androidChannelGroupIdList" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
			) sd ON sd.date = TAB.create_date group by TAB.create_date
		</if>
  </select>
  
    <select id="androidCountNewNull" parameterType="java.util.HashMap" resultType="java.util.HashMap">
   	SELECT
		sd.date create_date,
		#{sprChnlNameDesc} chnl_name,
		ROUND(SUM(sd.total_consumption),2) total_consumption,
		ROUND(SUM(sd.total_consumption / gdr.discount_rate),2) actual_consumption,
		ROUND(SUM(sd.conversion_quantity)) conversion_quantity,
		ROUND(SUM(sd.total_consumption / gdr.discount_rate) / SUM(sd.conversion_quantity),2) single_active_cost
	FROM
	(
		SELECT
			acg.id,
			acg.group_id
		FROM
			bu_android_channel_group acg
			<if test="groupType == 2">
				,bu_android_channel_group acg2
			</if>
		WHERE
			acg.del_flag = '0'
		AND acg.status = '1'
		<if test="groupType == 1">
			AND acg.id = #{androidChannelGroupId}
		</if>
		<if test="groupType == 2">
			AND acg2.del_flag = '0'
			AND acg2.status = '1'
			AND acg.group_id!=''
			AND acg.group_id is not null
			AND acg2.id = #{androidChannelGroupId}
			AND acg.prefix like CONCAT(acg2.prefix,'%')
		</if>
		<if test="groupType == 3" >
			<if test="androidChannelGroupIdList != null">
				AND acg.id in
				<foreach item="item" index="index" collection="androidChannelGroupIdList" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</if>
	) T,
	bu_spread_data sd,
	bu_android_channel_group_discount_rate gdr
	WHERE
		sd.account_id = T.group_id
	AND T.id = gdr.android_channel_group_id
	AND sd.date = gdr.date
	AND gdr.del_flag = '0'
	AND sd.del_flag = '0'
	AND sd.date <![CDATA[ >= ]]> #{orderDateBegin}
	AND sd.date <![CDATA[ <= ]]> #{orderDateEnd}
	GROUP BY
		sd.date
	ORDER BY
		sd.date
  </select>
  
  <select id="iosCountNew" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  SELECT
  		TAB.create_date,
	 	#{channelName} spreadname,
	 	<if test="activityGroupId != null">
		sd.total_consumption,
		ROUND(sd.total_consumption / gdr.discount_rate,2) actual_consumption,
		sd.conversion_quantity,
		ROUND(sd.total_consumption / gdr.discount_rate / sd.conversion_quantity,2) single_active_cost,
		TAB.seq_no,
		TAB.new_guest_combine_order_count,
		ROUND(sd.total_consumption / gdr.discount_rate / TAB.new_guest_combine_order_count,2) new_guest_cost,
		TAB.new_guest_consume_count,
		TAB.new_guest_pay_amount,
		ROUND(TAB.new_guest_pay_amount / TAB.new_guest_combine_order_count,2) new_unit_price,
		TAB.old_guest_combine_order_count,
		TAB.old_guest_consume_count,
		TAB.old_guest_pay_amount,
		ROUND(TAB.old_guest_pay_amount / TAB.old_guest_consume_count,2) old_unit_price,
		(TAB.new_guest_pay_amount + TAB.old_guest_pay_amount) total_pay_amount,
		ROUND(TAB.new_guest_consume_count / TAB.old_guest_consume_count,2) rate,
		ROUND((TAB.new_guest_pay_amount + TAB.old_guest_pay_amount) / (sd.total_consumption / gdr.discount_rate),2) roi
		</if>
		<if test="activityGroupSetId != null">
		ROUND(SUM(sd.total_consumption),2) total_consumption,
		ROUND(SUM(sd.total_consumption / sd.discount_rate),2) actual_consumption,
		cast(SUM(sd.conversion_quantity) AS SIGNED) conversion_quantity,
		ROUND(SUM(sd.total_consumption / sd.discount_rate) / SUM(sd.conversion_quantity),2) single_active_cost,
		TAB.seq_no,
		TAB.new_guest_combine_order_count,
		ROUND(SUM(sd.total_consumption / sd.discount_rate) / TAB.new_guest_combine_order_count,2) new_guest_cost,
		TAB.new_guest_consume_count,
		TAB.new_guest_pay_amount,
		ROUND(TAB.new_guest_pay_amount / TAB.new_guest_combine_order_count,2) new_unit_price,
		TAB.old_guest_combine_order_count,
		TAB.old_guest_consume_count,
		TAB.old_guest_pay_amount,
		ROUND(TAB.old_guest_pay_amount / TAB.old_guest_consume_count,2) old_unit_price,
		(TAB.new_guest_pay_amount + TAB.old_guest_pay_amount) total_pay_amount,
		ROUND(TAB.new_guest_consume_count / TAB.old_guest_consume_count,2) rate,
		ROUND((TAB.new_guest_pay_amount + TAB.old_guest_pay_amount) / SUM(sd.total_consumption / sd.discount_rate),2) roi
		</if>
	FROM(
	  	SELECT
			t.create_date,
			t.seq_no,
			<if test="activityGroupId != null">
			t.group_id,
			t.discount_rate,
			</if>
			SUM(t.new_guest_combine_order_count) new_guest_combine_order_count,
			SUM(t.new_guest_consume_count) new_guest_consume_count,
			SUM(t.new_guest_pay_amount) new_guest_pay_amount,
			SUM(t.old_guest_combine_order_count) old_guest_combine_order_count,
			SUM(t.old_guest_consume_count) old_guest_consume_count,
			SUM(t.old_guest_pay_amount) old_guest_pay_amount,
			SUM(t.new_guest_pay_amount + t.old_guest_pay_amount) total_pay_amount,
			ROUND(SUM(t.new_guest_consume_count) / SUM(t.old_guest_consume_count), 2) rate
		FROM
			(
				SELECT
					DATE_FORMAT(tmp.create_date, '%Y-%m-%d') create_date,
					<if test="visitType == 'firstVisit'">
						td.firstSpreadname spreadname,
					</if>
					<if test="visitType == 'newVisit'">
						td.spreadname spreadname,
					</if>
					<if test="visitType == 'orderVisit'">
						coe.spreadname spreadname,
					</if>
					<if test="activityGroupId != null">
					sag.group_id,
					sag.discount_rate,
					</if>
					sn.seq_no,
					COUNT(tmp.id) new_guest_combine_order_count,
					COUNT(DISTINCT tmp.member_id) new_guest_consume_count,
					IFNULL(SUM(tmp.total_pay_amount), 0) new_guest_pay_amount,
					0 old_guest_combine_order_count,
					0 old_guest_consume_count,
					0 old_guest_pay_amount
				FROM
					<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						bu_track_data td,
					</if>
					<if test="visitType == 'orderVisit'">
						bu_combine_order_extend coe,
					</if>
					bu_spread_name sn,
					bu_spread_activity_group sag,
					<if test="activityGroupSetId != null">
						bu_spread_activity_group_set saps,
						bu_spread_activity_group_set_dtl sapsd,
					</if>
					(
						SELECT
							co.id,
							co.member_id,
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								mi.req_imei,
							</if>
							co.total_pay_amount,
							co.create_date
						FROM
							bu_combine_order co
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								,bu_member_info mi
							</if>
						WHERE
							co.del_flag = '0'
							AND co.`status` = '1'
							AND co.del_flag = '0'
							AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
							AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
							AND co.is_first_order = '1'
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								AND co.member_id = mi.id
								AND mi.del_flag = '0'
								AND mi.reg_client = '1'
								AND mi.req_imei IS NOT NULL
								AND mi.req_imei != ''
								AND mi.req_imei != '00000000-0000-0000-0000-000000000000'
							</if>
					) tmp
				WHERE
				<if test="visitType == 'firstVisit'">
					<if test="deviceType == 1">
						tmp.req_imei = td.idfa
					</if>
					<if test="deviceType == 2">
						tmp.req_imei = td.imei
					</if>
					AND td.del_flag = '0'
					AND td.firstSpreadname IS NOT NULL
					AND td.firstSpreadname = sn.spread_name
				</if>
				<if test="visitType == 'newVisit'">
					<if test="deviceType == 1">
						tmp.req_imei = td.idfa
					</if>
					<if test="deviceType == 2">
						tmp.req_imei = td.imei
					</if>
					and td.del_flag = '0'
					AND td.spreadname IS NOT NULL
					AND td.spreadname = sn.spread_name
				</if>
				<if test="visitType == 'orderVisit'">
					tmp.id=coe.combine_order_id
					AND coe.del_flag = '0'
					AND coe.spreadname is not null
					AND coe.spreadname = sn.spread_name
				</if>
				AND sn.device_type = #{deviceType}
				AND sn.del_flag = '0'
				AND sn.activity_group_id = sag.id
				AND sag.channel = #{channel}
	  			AND sag.device_type = #{deviceType}
				<if test="activityGroupId != null">
					AND sn.activity_group_id = #{activityGroupId}
				</if>
				<if test="activityGroupSetId != null">
					AND saps.del_flag = '0'
					AND sapsd.del_flag = '0'
					AND saps.id = #{activityGroupSetId}
					AND saps.status = '1'
					AND saps.id = sapsd.spread_activity_group_set_id
					AND sapsd.activity_group_id = sag.id
					AND saps.device_type = #{deviceType}
				</if>
				<if test="spreadName != null">
					AND sn.spread_name = #{spreadName}
				</if>
				GROUP BY
					DATE_FORMAT(tmp.create_date, '%Y-%m-%d')
				UNION
					SELECT
						DATE_FORMAT(tmp.create_date, '%Y-%m-%d'),
						<if test="visitType == 'firstVisit'">
							td.firstSpreadname spreadname,
						</if>
						<if test="visitType == 'newVisit'">
							td.spreadname spreadname,
						</if>
						<if test="visitType == 'orderVisit'">
							coe.spreadname spreadname,
						</if>
						<if test="activityGroupId != null">
						sag.group_id,
						sag.discount_rate,
						</if>
						sn.seq_no,
						0 new_guest_combine_order_count,
						0 new_guest_consume_count,
						0 new_guest_pay_amount,
						COUNT(tmp.id) old_guest_combine_order_count,
						COUNT(DISTINCT tmp.member_id) old_guest_consume_count,
						IFNULL(SUM(tmp.total_pay_amount), 0) old_guest_pay_amount
					FROM
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
							bu_track_data td,
						</if>
						<if test="visitType == 'orderVisit'">
							bu_combine_order_extend coe,
						</if>
						bu_spread_name sn,
						bu_spread_activity_group sag,
						<if test="activityGroupSetId != null">
							bu_spread_activity_group_set saps,
							bu_spread_activity_group_set_dtl sapsd,
						</if>
						(
							SELECT
								co.id,
								co.member_id,
								<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
									mi.req_imei,
								</if>
								co.total_pay_amount,
								co.create_date
							FROM
								bu_combine_order co
								<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
									,bu_member_info mi
								</if>
							WHERE
								co.del_flag = '0'
								AND co.`status` = '1'
								AND co.del_flag = '0'
								AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
								AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
								AND co.is_first_order = '0'
								<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
									AND co.member_id = mi.id
									AND mi.del_flag = '0'
									AND mi.reg_client = '1'
									AND mi.req_imei IS NOT NULL
									AND mi.req_imei != ''
									AND mi.req_imei != '00000000-0000-0000-0000-000000000000'
								</if>
						) tmp
					WHERE
					<if test="visitType == 'firstVisit'">
						<if test="deviceType == 1">
							tmp.req_imei = td.idfa
						</if>
						<if test="deviceType == 2">
							tmp.req_imei = td.imei
						</if>
						AND td.del_flag = '0'
						AND td.firstSpreadname IS NOT NULL
						AND td.firstSpreadname = sn.spread_name
					</if>
					<if test="visitType == 'newVisit'">
						<if test="deviceType == 1">
							tmp.req_imei = td.idfa
						</if>
						<if test="deviceType == 2">
							tmp.req_imei = td.imei
						</if>
						and td.del_flag = '0'
						AND td.spreadname IS NOT NULL
						AND td.spreadname = sn.spread_name
					</if>
					<if test="visitType == 'orderVisit'">
						tmp.id=coe.combine_order_id
						AND coe.del_flag = '0'
						AND coe.spreadname is not null
						AND coe.spreadname = sn.spread_name
					</if>
					AND sn.device_type = #{deviceType}
					AND sn.del_flag = '0'
					AND sn.activity_group_id = sag.id
					AND sag.channel = #{channel}
	  				AND sag.device_type = #{deviceType}
					<if test="activityGroupId != null">
						AND sn.activity_group_id = #{activityGroupId}
					</if>
					<if test="activityGroupSetId != null">
						AND saps.del_flag = '0'
						AND sapsd.del_flag = '0'
						AND saps.id = #{activityGroupSetId}
						AND saps.status = '1'
						AND saps.id = sapsd.spread_activity_group_set_id
						AND sapsd.activity_group_id = sag.id
						AND saps.device_type = #{deviceType}
					</if>
					<if test="spreadName != null">
						AND sn.spread_name = #{spreadName}
					</if>
					GROUP BY
						DATE_FORMAT(tmp.create_date, '%Y-%m-%d')
			) t
		GROUP BY
			t.create_date
		ORDER BY
			t.create_date) TAB 
			<if test="activityGroupId != null">
				LEFT JOIN bu_spread_data sd ON sd.date = TAB.create_date AND sd.account_id = TAB.group_id AND sd.del_flag = '0'
				LEFT JOIN bu_spread_activity_group_discount_rate gdr ON gdr.date = sd.date AND gdr.spread_activity_group_id = #{activityGroupId} AND gdr.del_flag = '0'
			</if>
			<if test="activityGroupSetId != null">
			LEFT JOIN (
				SELECT
					m.*, gdr.discount_rate
				FROM
					bu_spread_activity_group_set_dtl n,
					bu_spread_activity_group k,
					bu_spread_data m,
					bu_spread_activity_group_discount_rate gdr
				WHERE
					n.spread_activity_group_set_id = #{activityGroupSetId}
				AND k.device_type = #{deviceType}
				AND n.activity_group_id = k.id
				AND m.account_id = k.group_id
				AND gdr.spread_activity_group_id = k.id
				AND gdr.date = m.date
				AND n.del_flag = '0'
				AND k.is_effect = '1'
				AND k.del_flag = '0'
				AND gdr.del_flag = '0'
			) sd ON sd.date = TAB.create_date group by TAB.create_date
			</if>
  </select>
  
  <select id="iosCountNewNull" parameterType="java.util.HashMap" resultType="java.util.HashMap">
   	SELECT
		sd.date create_date,
		#{channelName} spreadname,
		ROUND(SUM(sd.total_consumption),2) total_consumption,
		ROUND(SUM(sd.total_consumption / gdr.discount_rate),2) actual_consumption,
		ROUND(SUM(sd.conversion_quantity)) conversion_quantity,
		ROUND(SUM(sd.total_consumption / gdr.discount_rate) / SUM(sd.conversion_quantity),2) single_active_cost
	FROM
	(
		SELECT
			sag.group_id,
			sag.id
		FROM
			bu_spread_activity_group sag
			<if test="activityGroupSetId != null">
				,bu_spread_activity_group_set saps,
				bu_spread_activity_group_set_dtl sapsd
			</if>
		WHERE
			sag.del_flag = '0'
		AND sag.channel = #{channel}
	  	AND sag.device_type = #{deviceType}
		<if test="activityGroupId != null">
			AND sag.id = #{activityGroupId}
		</if>
		<if test="activityGroupSetId != null">
			AND saps.del_flag = '0'
			AND sapsd.del_flag = '0'
			AND saps.id = #{activityGroupSetId}
			AND saps.status = '1'
			AND saps.id = sapsd.spread_activity_group_set_id
			AND sapsd.activity_group_id = sag.id
			AND saps.device_type = #{deviceType}
		</if>
	) T,
	bu_spread_data sd,
  	bu_spread_activity_group_discount_rate gdr
	WHERE
		sd.account_id = T.group_id
	AND gdr.spread_activity_group_id = T.id
	AND gdr.date = sd.date
	AND gdr.del_flag = '0'
	AND sd.del_flag = '0'
	AND sd.date <![CDATA[ >= ]]> #{orderDateBegin}
	AND sd.date <![CDATA[ <= ]]> #{orderDateEnd}
	GROUP BY
		sd.date
	ORDER BY
		sd.date
  </select>
  
  <select id="androidCountReturn" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT
		t.spr_chnl, <!-- 推广渠道 -->
		t.chnl_name, <!-- 推广渠道名称 -->
		SUM(t.new_guest_combine_order_count) new_guest_combine_order_count, <!-- 新客母订单数 -->
		SUM(t.new_guest_consume_count) new_guest_consume_count, <!-- 新客消费人数 -->
		SUM(t.new_guest_pay_amount) new_guest_pay_amount, <!-- 新客买家实付金额 -->
		CONCAT(ROUND(SUM(t.new_customer_quantity) / SUM(t.new_quantity) * 100, 2), '%') new_quantity_rate, <!-- 新客买家退货率 -->
		SUM(t.old_guest_combine_order_count) old_guest_combine_order_count, <!-- 老客母订单数 -->
		SUM(t.old_guest_consume_count) old_guest_consume_count, <!-- 老客消费人数 -->
		SUM(t.old_guest_pay_amount) old_guest_pay_amount, <!-- 老客买家实付金额 -->
		CONCAT(ROUND(SUM(t.old_customer_quantity) / SUM(t.old_quantity) * 100, 2), '%') old_quantity_rate, <!-- 老客买家退货率 -->
		(SUM(t.new_guest_pay_amount) + SUM(t.old_guest_pay_amount)) total_pay_amount, <!-- 总销售额 -->
		CONCAT(ROUND(SUM(t.new_guest_consume_count) / SUM(t.old_guest_consume_count) * 100, 2), '%') rate, <!-- 新客老客比 -->
		CONCAT((SUM(t.new_quantity) + SUM(t.old_quantity)), '/', SUM(t.new_customer_quantity) + SUM(t.old_customer_quantity)) customer_quantity, <!-- 总销量/退货商品数 -->
		CONCAT(ROUND((SUM(t.new_customer_quantity) + SUM(t.old_customer_quantity)) / (SUM(t.new_quantity) + SUM(t.old_quantity)) * 100, 2), '%') quantity_rate <!-- 商品退货率 -->
	FROM
		(
			<!-- 新客 -->
			SELECT
				mi.spr_chnl,
				ss.STATUS_DESC chnl_name,
				COUNT(DISTINCT co.id) new_guest_combine_order_count,
				COUNT(DISTINCT co.member_id) new_guest_consume_count,
				IFNULL(SUM(od.pay_amount), 0) new_guest_pay_amount,
				IFNULL(SUM(od.quantity), 0) new_quantity,
				IFNULL(SUM((SELECT SUM(t.quantity) FROM bu_customer_service_order t WHERE t.del_flag = '0' AND t.service_type = 'B' AND t. STATUS = '1' AND t.order_dtl_id = od.id )), 0) new_customer_quantity,
				0 old_guest_combine_order_count,
				0 old_guest_consume_count,
				0 old_guest_pay_amount,
				0 old_quantity,
				0 old_customer_quantity
			FROM
				bu_combine_order co,
				bu_sub_order so,
				bu_order_dtl od,
	  <if test="visitType == 'firstVisit'">
		  bu_member_info mi,
	  </if>
	  <if test="visitType == 'newVisit'">
		  bu_member_extend mi,
	  </if>
	  <if test="visitType == 'orderVisit'">
		  bu_combine_order_extend mi,
	  </if>
	  				sys_status ss
			WHERE
				so.del_flag = '0'
			AND so.combine_order_id = co.id
			AND od.del_flag = '0'
			AND od.sub_order_id = so.id
			AND co.`status` = '1'
			AND co.del_flag = '0'
			AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
			AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
	  <if test="visitType == 'firstVisit'">
		  AND co.member_id = mi.id
	  </if>
	  <if test="visitType == 'newVisit'">
		  AND co.member_id = mi.member_id
	  </if>
	  <if test="visitType == 'orderVisit'">
		  AND  co.id= mi.combine_order_id
	  </if>
			AND mi.del_flag = '0'
			AND ss.table_name = 'BU_MEMBER_INFO'
			AND ss.col_name = 'SPR_CHNL'
			AND mi.spr_chnl = ss.status_value
			<if test="sprChnlName != null" >
			  AND ss.status_desc LIKE #{sprChnlName}
			</if>
			<if test="groupPrefixList != null ">
			  AND
			  <foreach item="item" index="index" collection="groupPrefixList" open="(" separator="OR" close=")">
				  ss.status_desc LIKE #{item}
			  </foreach>
			</if>
			AND co.is_first_order = '1'
			GROUP BY
				ss.status_desc
			UNION
				<!-- 老客 -->
				SELECT
					mi.spr_chnl,
					ss.STATUS_DESC chnl_name,
					0 new_guest_combine_order_count,
					0 new_guest_consume_count,
					0 new_guest_pay_amount,
					0 new_quantity,
					0 new_customer_quantity,
					COUNT(DISTINCT co.id) old_guest_combine_order_count,
					COUNT(DISTINCT co.member_id) old_guest_consume_count,
					IFNULL(SUM(od.pay_amount), 0) old_guest_pay_amount,
					IFNULL(SUM(od.quantity), 0) old_quantity,
					IFNULL(SUM((SELECT SUM(t.quantity) FROM bu_customer_service_order t WHERE t.del_flag = '0' AND t.service_type = 'B' AND t. STATUS = '1' AND t.order_dtl_id = od.id)), 0) old_customer_quantity
				FROM
					bu_combine_order co,
					bu_sub_order so,
					bu_order_dtl od,
	  <if test="visitType == 'firstVisit'">
		  bu_member_info mi,
	  </if>
	  <if test="visitType == 'newVisit'">
		  bu_member_extend mi,
	  </if>
	  <if test="visitType == 'orderVisit'">
		  bu_combine_order_extend mi,
	  </if>
	  					sys_status ss
				WHERE
					so.del_flag = '0'
				AND so.combine_order_id = co.id
				AND od.del_flag = '0'
				AND od.sub_order_id = so.id
				AND co.`status` = '1'
				AND co.del_flag = '0'
				AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
				AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
	  <if test="visitType == 'firstVisit'">
		  AND co.member_id = mi.id
	  </if>
	  <if test="visitType == 'newVisit'">
		  AND co.member_id = mi.member_id
	  </if>
	  <if test="visitType == 'orderVisit'">
		  AND  co.id= mi.combine_order_id
	  </if>
				AND mi.del_flag = '0'
				AND ss.table_name = 'BU_MEMBER_INFO'
				AND ss.col_name = 'SPR_CHNL'
				AND mi.spr_chnl = ss.status_value
				<if test="sprChnlName != null" >
				  AND ss.status_desc LIKE #{sprChnlName}
				</if>
				<if test="groupPrefixList != null ">
				  AND
				  <foreach item="item" index="index" collection="groupPrefixList" open="(" separator="OR" close=")">
					  ss.status_desc LIKE #{item}
				  </foreach>
				</if>
				AND co.is_first_order = '0'
				GROUP BY
					ss.status_desc
		) t
	GROUP BY
		t.spr_chnl
	ORDER BY
		t.spr_chnl
  </select>
  
  <select id="totalAndroidCountReturn" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT
		"合计" chnl_name,
		SUM(t.new_guest_combine_order_count) new_guest_combine_order_count, <!-- 新客母订单数 -->
		SUM(t.new_guest_consume_count) new_guest_consume_count, <!-- 新客消费人数 -->
		SUM(t.new_guest_pay_amount) new_guest_pay_amount, <!-- 新客买家实付金额 -->
		CONCAT(ROUND(SUM(t.new_customer_quantity) / SUM(t.new_quantity) * 100, 2), '%') new_quantity_rate, <!-- 新客买家退货率 -->
		SUM(t.old_guest_combine_order_count) old_guest_combine_order_count, <!-- 老客母订单数 -->
		SUM(t.old_guest_consume_count) old_guest_consume_count, <!-- 老客消费人数 -->
		SUM(t.old_guest_pay_amount) old_guest_pay_amount, <!-- 老客买家实付金额 -->
		CONCAT(ROUND(SUM(t.old_customer_quantity) / SUM(t.old_quantity) * 100, 2), '%') old_quantity_rate, <!-- 老客买家退货率 -->
		(SUM(t.new_guest_pay_amount) + SUM(t.old_guest_pay_amount)) total_pay_amount, <!-- 总销售额 -->
		CONCAT(ROUND(SUM(t.new_guest_consume_count) / SUM(t.old_guest_consume_count) * 100, 2), '%') rate, <!-- 新客老客比 -->
		CONCAT((SUM(t.new_quantity) + SUM(t.old_quantity)), '/', SUM(t.new_customer_quantity) + SUM(t.old_customer_quantity)) customer_quantity, <!-- 总销量/退货商品数 -->
		CONCAT(ROUND((SUM(t.new_customer_quantity) + SUM(t.old_customer_quantity)) / (SUM(t.new_quantity) + SUM(t.old_quantity)) * 100, 2), '%') quantity_rate <!-- 商品退货率 -->
	FROM
		(
			SELECT
				COUNT(DISTINCT co.id) new_guest_combine_order_count,
				COUNT(DISTINCT co.member_id) new_guest_consume_count,
				IFNULL(SUM(od.pay_amount), 0) new_guest_pay_amount,
				IFNULL(SUM(od.quantity), 0) new_quantity,
				IFNULL(SUM((SELECT SUM(t.quantity) FROM bu_customer_service_order t WHERE t.del_flag = '0' AND t.service_type = 'B' AND t. STATUS = '1' AND t.order_dtl_id = od.id )), 0) new_customer_quantity,
				0 old_guest_combine_order_count,
				0 old_guest_consume_count,
				0 old_guest_pay_amount,
				0 old_quantity,
				0 old_customer_quantity
			FROM
				bu_combine_order co,
				bu_sub_order so,
				bu_order_dtl od,
	  <if test="visitType == 'firstVisit'">
		  bu_member_info mi,
	  </if>
	  <if test="visitType == 'newVisit'">
		  bu_member_extend mi,
	  </if>
	  <if test="visitType == 'orderVisit'">
		  bu_combine_order_extend mi,
	  </if>
	  				sys_status ss
			WHERE
				so.del_flag = '0'
			AND so.combine_order_id = co.id
			AND od.del_flag = '0'
			AND od.sub_order_id = so.id
			AND co.`status` = '1'
			AND co.del_flag = '0'
			AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
			AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
	  <if test="visitType == 'firstVisit'">
		  AND co.member_id = mi.id
	  </if>
	  <if test="visitType == 'newVisit'">
		  AND co.member_id = mi.member_id
	  </if>
	  <if test="visitType == 'orderVisit'">
		  AND  co.id= mi.combine_order_id
	  </if>
			AND mi.del_flag = '0'
			AND ss.table_name = 'BU_MEMBER_INFO'
			AND ss.col_name = 'SPR_CHNL'
			AND mi.spr_chnl = ss.status_value
			<if test="sprChnlName != null" >
			  AND ss.status_desc LIKE #{sprChnlName}
			</if>
			<if test="groupPrefixList != null ">
			  AND
			  <foreach item="item" index="index" collection="groupPrefixList" open="(" separator="OR" close=")">
				  ss.status_desc LIKE #{item}
			  </foreach>
			</if>
			AND co.is_first_order = '1'
			UNION
				SELECT
					0 new_guest_combine_order_count,
					0 new_guest_consume_count,
					0 new_guest_pay_amount,
					0 new_quantity,
					0 new_customer_quantity,
					COUNT(DISTINCT co.id) old_guest_combine_order_count,
					COUNT(DISTINCT co.member_id) old_guest_consume_count,
					IFNULL(SUM(od.pay_amount), 0) old_guest_pay_amount,
					IFNULL(SUM(od.quantity), 0) old_quantity,
					IFNULL(SUM((SELECT SUM(t.quantity) FROM bu_customer_service_order t WHERE t.del_flag = '0' AND t.service_type = 'B' AND t. STATUS = '1' AND t.order_dtl_id = od.id)), 0) old_customer_quantity
				FROM
					bu_combine_order co,
					bu_sub_order so,
					bu_order_dtl od,
	  <if test="visitType == 'firstVisit'">
		  bu_member_info mi,
	  </if>
	  <if test="visitType == 'newVisit'">
		  bu_member_extend mi,
	  </if>
	  <if test="visitType == 'orderVisit'">
		  bu_combine_order_extend mi,
	  </if>
	  					sys_status ss
				WHERE
					so.del_flag = '0'
				AND so.combine_order_id = co.id
				AND od.del_flag = '0'
				AND od.sub_order_id = so.id
				AND co.`status` = '1'
				AND co.del_flag = '0'
				AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
				AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
	  <if test="visitType == 'firstVisit'">
		  AND co.member_id = mi.id
	  </if>
	  <if test="visitType == 'newVisit'">
		  AND co.member_id = mi.member_id
	  </if>
	  <if test="visitType == 'orderVisit'">
		  AND  co.id= mi.combine_order_id
	  </if>
				AND mi.del_flag = '0'
				AND ss.table_name = 'BU_MEMBER_INFO'
				AND ss.col_name = 'SPR_CHNL'
				AND mi.spr_chnl = ss.status_value
				<if test="sprChnlName != null" >
				  AND ss.status_desc LIKE #{sprChnlName}
				</if>
				<if test="groupPrefixList != null ">
				  AND
				  <foreach item="item" index="index" collection="groupPrefixList" open="(" separator="OR" close=")">
					  ss.status_desc LIKE #{item}
				  </foreach>
				</if>
				AND co.is_first_order = '0'
		) t
  </select>
  
  <select id="iosCountReturn" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT
		t.spreadname, <!-- 活动名称 -->
		t.seq_no, <!-- 排序 -->
		SUM(t.new_guest_combine_order_count) new_guest_combine_order_count, <!-- 新客母订单数 -->
		SUM(t.new_guest_consume_count) new_guest_consume_count, <!-- 新客消费人数 -->
		SUM(t.new_guest_pay_amount) new_guest_pay_amount, <!-- 新客买家实付金额 -->
		CONCAT(ROUND(SUM(t.new_customer_quantity) / SUM(t.new_quantity) * 100, 2), '%') new_quantity_rate, <!-- 新客买家退货率 -->
		SUM(t.old_guest_combine_order_count) old_guest_combine_order_count, <!-- 老客母订单数 -->
		SUM(t.old_guest_consume_count) old_guest_consume_count, <!-- 老客消费人数 -->
		SUM(t.old_guest_pay_amount) old_guest_pay_amount, <!-- 老客买家实付金额 -->
		CONCAT(ROUND(SUM(t.old_customer_quantity) / SUM(t.old_quantity) * 100, 2), '%') old_quantity_rate, <!-- 老客买家退货率 -->
		(SUM(t.new_guest_pay_amount) + SUM(t.old_guest_pay_amount)) total_pay_amount, <!-- 总销售额 -->
		ROUND(SUM(t.new_guest_consume_count) / SUM(t.old_guest_consume_count), 2) rate, <!-- 新客老客比 -->
		CONCAT((SUM(t.new_quantity) + SUM(t.old_quantity)), '/', SUM(t.new_customer_quantity) + SUM(t.old_customer_quantity)) customer_quantity, <!-- 总销量/退货商品数 -->
		CONCAT(ROUND((SUM(t.new_customer_quantity) + SUM(t.old_customer_quantity)) / (SUM(t.new_quantity) + SUM(t.old_quantity)) * 100, 2), '%') quantity_rate <!-- 商品退货率 -->
	FROM
		(
			<!-- 新客 -->
			SELECT 
				<if test="visitType == 'firstVisit'">
					td.firstSpreadname spreadname,
				</if>
				<if test="visitType == 'newVisit'">
					td.spreadname spreadname,
				</if>
				<if test="visitType == 'orderVisit'">
					coe.spreadname spreadname,
				</if>
				sn.seq_no,
				COUNT(DISTINCT tmp.id) new_guest_combine_order_count,
				COUNT(DISTINCT tmp.member_id) new_guest_consume_count,
				IFNULL(SUM(tmp.pay_amount), 0) new_guest_pay_amount,
				IFNULL(SUM(tmp.quantity), 0) new_quantity,
				IFNULL(SUM((SELECT SUM(t.quantity) FROM bu_customer_service_order t WHERE t.del_flag = '0' AND t.service_type = 'B' AND t. STATUS = '1' AND t.order_dtl_id = tmp.order_dtl_id )), 0) new_customer_quantity,
				0 old_guest_combine_order_count,
				0 old_guest_consume_count,
				0 old_guest_pay_amount,
				0 old_quantity,
				0 old_customer_quantity
			FROM
				<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
					bu_track_data td,
				</if>
				<if test="visitType == 'orderVisit'">
					bu_combine_order_extend coe,
				</if>
				bu_spread_name sn,
				bu_spread_activity_group sag,
				<if test="activityGroupSetId != null">
					bu_spread_activity_group_set saps,
					bu_spread_activity_group_set_dtl sapsd,
				</if>
				(
					SELECT
						co.id,
						co.member_id,
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
							mi.req_imei,
						</if>
						od.pay_amount,
						od.id order_dtl_id,
						od.quantity
					FROM
						bu_combine_order co,
						bu_sub_order so,
						bu_order_dtl od
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						,bu_member_info mi
						</if>
					WHERE
						co.del_flag = '0'
						AND co.`status` = '1'
						AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
						AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
						AND so.del_flag = '0'
						AND so.combine_order_id = co.id
						AND od.del_flag = '0'
						AND od.sub_order_id = so.id
						AND co.is_first_order = '1'
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
							AND co.member_id = mi.id
							AND mi.del_flag = '0'
							AND mi.reg_client = '1'
							AND mi.req_imei IS NOT NULL
							AND mi.req_imei != ''
							AND mi.req_imei != '00000000-0000-0000-0000-000000000000'					
						</if>
				) tmp
			WHERE
			<if test="visitType == 'firstVisit'">
				<if test="deviceType == 1">
					tmp.req_imei = td.idfa
				</if>
				<if test="deviceType == 2">
					tmp.req_imei = td.imei
				</if>
				AND td.del_flag = '0'
				AND td.firstSpreadname IS NOT NULL
				AND td.firstSpreadname = sn.spread_name
			</if>
			<if test="visitType == 'newVisit'">
				<if test="deviceType == 1">
					tmp.req_imei = td.idfa
				</if>
				<if test="deviceType == 2">
					tmp.req_imei = td.imei
				</if>
				and td.del_flag = '0'
				AND td.spreadname IS NOT NULL
				AND td.spreadname = sn.spread_name
			</if>
			<if test="visitType == 'orderVisit'">
				tmp.id=coe.combine_order_id
				AND coe.del_flag = '0'
				AND coe.spreadname is not null
				AND coe.spreadname = sn.spread_name
			</if>
			AND sn.device_type = #{deviceType}
			AND sn.del_flag = '0'
			AND sn.activity_group_id = sag.id
			AND sag.channel = #{channel}
	  		AND sag.device_type = #{deviceType}
			<if test="activityGroupId != null">
				AND sn.activity_group_id = #{activityGroupId}
			</if>
			<if test="activityGroupSetId != null">
				AND saps.del_flag = '0'
				AND sapsd.del_flag = '0'
				AND saps.id = #{activityGroupSetId}
				AND saps.status = '1'
				AND saps.id = sapsd.spread_activity_group_set_id
				AND sapsd.activity_group_id = sag.id
				AND saps.device_type = #{deviceType}
			</if>
			<if test="spreadName != null">
				AND sn.spread_name = #{spreadName}
			</if>
			GROUP BY
				<if test="visitType == 'firstVisit'">
					td.firstSpreadname
				</if>
				<if test="visitType == 'newVisit'">
					td.spreadname
				</if>
				<if test="visitType == 'orderVisit'">
					coe.spreadname
				</if>
			UNION
				<!-- 老客 -->
				SELECT
					<if test="visitType == 'firstVisit'">
						td.firstSpreadname spreadname,
					</if>
					<if test="visitType == 'newVisit'">
						td.spreadname spreadname,
					</if>
					<if test="visitType == 'orderVisit'">
						coe.spreadname spreadname,
					</if>
					sn.seq_no,
					0 new_guest_combine_order_count,
					0 new_guest_consume_count,
					0 new_guest_pay_amount,
					0 new_quantity,
					0 new_customer_quantity,
					COUNT(DISTINCT tmp.id) old_guest_combine_order_count,
					COUNT(DISTINCT tmp.member_id) old_guest_consume_count,
					IFNULL(SUM(tmp.pay_amount), 0) old_guest_pay_amount,
					IFNULL(SUM(tmp.quantity), 0) old_quantity,
					IFNULL(SUM((SELECT SUM(t.quantity) FROM bu_customer_service_order t WHERE t.del_flag = '0' AND t.service_type = 'B' AND t. STATUS = '1' AND t.order_dtl_id = tmp.order_dtl_id)), 0) old_customer_quantity
				FROM
					<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						bu_track_data td,
					</if>
					<if test="visitType == 'orderVisit'">
						bu_combine_order_extend coe,
					</if>
					bu_spread_name sn,
					bu_spread_activity_group sag,
					<if test="activityGroupSetId != null">
						bu_spread_activity_group_set saps,
						bu_spread_activity_group_set_dtl sapsd,
					</if>
					(
						SELECT
							co.id,
							co.member_id,
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								mi.req_imei,
							</if>
							od.pay_amount,
							od.id order_dtl_id,
							od.quantity
						FROM
							bu_combine_order co,
							bu_sub_order so,
							bu_order_dtl od
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								,bu_member_info mi
							</if>
						WHERE
							co.del_flag = '0'
							AND co.`status` = '1'
							AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
							AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
							AND so.del_flag = '0'
							AND so.combine_order_id = co.id
							AND od.del_flag = '0'
							AND od.sub_order_id = so.id
							AND co.is_first_order = '0'
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								AND co.member_id = mi.id
								AND mi.del_flag = '0'
								AND mi.reg_client = '1'
								AND mi.req_imei IS NOT NULL
								AND mi.req_imei != ''
								AND mi.req_imei != '00000000-0000-0000-0000-000000000000'					
							</if>
					) tmp
				WHERE
				<if test="visitType == 'firstVisit'">
					<if test="deviceType == 1">
						tmp.req_imei = td.idfa
					</if>
					<if test="deviceType == 2">
						tmp.req_imei = td.imei
					</if>
					AND td.del_flag = '0'
					AND td.firstSpreadname IS NOT NULL
					AND td.firstSpreadname = sn.spread_name
				</if>
				<if test="visitType == 'newVisit'">
					<if test="deviceType == 1">
						tmp.req_imei = td.idfa
					</if>
					<if test="deviceType == 2">
						tmp.req_imei = td.imei
					</if>
					and td.del_flag = '0'
					AND td.spreadname IS NOT NULL
					AND td.spreadname = sn.spread_name
				</if>
				<if test="visitType == 'orderVisit'">
					tmp.id=coe.combine_order_id
					AND coe.del_flag = '0'
					AND coe.spreadname is not null
					AND coe.spreadname = sn.spread_name
				</if>
				AND sn.device_type = #{deviceType}
				AND sn.del_flag = '0'
				AND sn.activity_group_id = sag.id
				AND sag.channel = #{channel}
	  			AND sag.device_type = #{deviceType}
				<if test="activityGroupId != null">
					AND sn.activity_group_id = #{activityGroupId}
				</if>
				<if test="activityGroupSetId != null">
					AND saps.del_flag = '0'
					AND sapsd.del_flag = '0'
					AND saps.id = #{activityGroupSetId}
					AND saps.status = '1'
					AND saps.id = sapsd.spread_activity_group_set_id
					AND sapsd.activity_group_id = sag.id
					AND saps.device_type = #{deviceType}
				</if>
				<if test="spreadName != null">
					AND sn.spread_name = #{spreadName}
				</if>
				GROUP BY
					<if test="visitType == 'firstVisit'">
						td.firstSpreadname
					</if>
					<if test="visitType == 'newVisit'">
						td.spreadname
					</if>
					<if test="visitType == 'orderVisit'">
						coe.spreadname
					</if>
				) t
		GROUP BY
			t.spreadname
	 	ORDER BY t.seq_no
  </select>
  
  <select id="totalIosCountReturn" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	SELECT
		"合计" spreadname,
		SUM(t.new_guest_combine_order_count) new_guest_combine_order_count, <!-- 新客母订单数 -->
		SUM(t.new_guest_consume_count) new_guest_consume_count, <!-- 新客消费人数 -->
		SUM(t.new_guest_pay_amount) new_guest_pay_amount, <!-- 新客买家实付金额 -->
		CONCAT(ROUND(SUM(t.new_customer_quantity) / SUM(t.new_quantity) * 100, 2), '%') new_quantity_rate, <!-- 新客买家退货率 -->
		SUM(t.old_guest_combine_order_count) old_guest_combine_order_count, <!-- 老客母订单数 -->
		SUM(t.old_guest_consume_count) old_guest_consume_count, <!-- 老客消费人数 -->
		SUM(t.old_guest_pay_amount) old_guest_pay_amount, <!-- 老客买家实付金额 -->
		CONCAT(ROUND(SUM(t.old_customer_quantity) / SUM(t.old_quantity) * 100, 2), '%') old_quantity_rate, <!-- 老客买家退货率 -->
		(SUM(t.new_guest_pay_amount) + SUM(t.old_guest_pay_amount)) total_pay_amount, <!-- 总销售额 -->
		CONCAT(ROUND(SUM(t.new_guest_consume_count) / SUM(t.old_guest_consume_count) * 100, 2), '%') rate, <!-- 新客老客比 -->
		CONCAT((SUM(t.new_quantity) + SUM(t.old_quantity)), '/', SUM(t.new_customer_quantity) + SUM(t.old_customer_quantity)) customer_quantity, <!-- 总销量/退货商品数 -->
		CONCAT(ROUND((SUM(t.new_customer_quantity) + SUM(t.old_customer_quantity)) / (SUM(t.new_quantity) + SUM(t.old_quantity)) * 100, 2), '%') quantity_rate <!-- 商品退货率 -->
	FROM
		(
			SELECT
				COUNT(DISTINCT tmp.id) new_guest_combine_order_count,
				COUNT(DISTINCT tmp.member_id) new_guest_consume_count,
				IFNULL(SUM(tmp.pay_amount), 0) new_guest_pay_amount,
				IFNULL(SUM(tmp.quantity), 0) new_quantity,
				IFNULL(SUM((SELECT SUM(t.quantity) FROM bu_customer_service_order t WHERE t.del_flag = '0' AND t.service_type = 'B' AND t. STATUS = '1' AND t.order_dtl_id = tmp.order_dtl_id )), 0) new_customer_quantity,
				0 old_guest_combine_order_count,
				0 old_guest_consume_count,
				0 old_guest_pay_amount,
				0 old_quantity,
				0 old_customer_quantity
			FROM
				<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
					bu_track_data td,
				</if>
				<if test="visitType == 'orderVisit'">
					bu_combine_order_extend coe,
				</if>
				bu_spread_name sn,
				bu_spread_activity_group sag,
				<if test="activityGroupSetId != null">
					bu_spread_activity_group_set saps,
					bu_spread_activity_group_set_dtl sapsd,
				</if>
				(
					SELECT
							co.id,
							co.member_id,
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								mi.req_imei,
							</if>
							od.pay_amount,
							od.id order_dtl_id,
							od.quantity
						FROM
							bu_combine_order co,
							bu_sub_order so,
							bu_order_dtl od
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								,bu_member_info mi
							</if>
						WHERE
								co.del_flag = '0'
							AND co.`status` = '1'
							AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
							AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
							AND so.del_flag = '0'
							AND so.combine_order_id = co.id
							AND od.del_flag = '0'
							AND od.sub_order_id = so.id
							AND co.is_first_order = '1'
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								AND co.member_id = mi.id
								AND mi.del_flag = '0'
								AND mi.reg_client = '1'
								AND mi.req_imei IS NOT NULL
								AND mi.req_imei != ''
								AND mi.req_imei != '00000000-0000-0000-0000-000000000000'						
							</if>
				) tmp
			WHERE
			<if test="visitType == 'firstVisit'">
				<if test="deviceType == 1">
					tmp.req_imei = td.idfa
				</if>
				<if test="deviceType == 2">
					tmp.req_imei = td.imei
				</if>
				AND td.del_flag = '0'
				AND td.firstSpreadname IS NOT NULL
				AND td.firstSpreadname = sn.spread_name
			</if>
			<if test="visitType == 'newVisit'">
				<if test="deviceType == 1">
					tmp.req_imei = td.idfa
				</if>
				<if test="deviceType == 2">
					tmp.req_imei = td.imei
				</if>
				and td.del_flag = '0'
				AND td.spreadname IS NOT NULL
				AND td.spreadname = sn.spread_name
			</if>
			<if test="visitType == 'orderVisit'">
				tmp.id=coe.combine_order_id
				AND coe.del_flag = '0'
				AND coe.spreadname is not null
				AND coe.spreadname = sn.spread_name
			</if>
			AND sn.device_type = #{deviceType}
			AND sn.del_flag = '0'
			AND sn.activity_group_id = sag.id
			AND sag.channel = #{channel}
	  		AND sag.device_type = #{deviceType}
			<if test="activityGroupId !=null">
				AND sn.activity_group_id=#{activityGroupId}
			</if>
			<if test="activityGroupSetId != null">
				AND saps.del_flag = '0'
				AND sapsd.del_flag = '0'
				AND saps.id = #{activityGroupSetId}
				AND saps.status = '1'
				AND saps.id = sapsd.spread_activity_group_set_id
				AND sapsd.activity_group_id = sag.id
				AND saps.device_type = #{deviceType}
			</if>
			<if test="spreadName !=null">
				AND sn.spread_name=#{spreadName}
			</if>
			UNION
				SELECT
					0 new_guest_combine_order_count,
					0 new_guest_consume_count,
					0 new_guest_pay_amount,
					0 new_quantity,
					0 new_customer_quantity,
					COUNT(DISTINCT tmp.id) old_guest_combine_order_count,
					COUNT(DISTINCT tmp.member_id) old_guest_consume_count,
					IFNULL(SUM(tmp.pay_amount), 0) old_guest_pay_amount,
					IFNULL(SUM(tmp.quantity), 0) old_quantity,
					IFNULL(SUM((SELECT SUM(t.quantity) FROM bu_customer_service_order t WHERE t.del_flag = '0' AND t.service_type = 'B' AND t. STATUS = '1' AND t.order_dtl_id = tmp.order_dtl_id)), 0) old_customer_quantity
				FROM
					<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						bu_track_data td,
					</if>
					<if test="visitType == 'orderVisit'">
						bu_combine_order_extend coe,
					</if>
					bu_spread_name sn,
					bu_spread_activity_group sag,
					<if test="activityGroupSetId != null">
						bu_spread_activity_group_set saps,
						bu_spread_activity_group_set_dtl sapsd,
					</if>
					(
						SELECT
							co.id,
							co.member_id,
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								mi.req_imei,
							</if>
							od.pay_amount,
							od.id order_dtl_id,
							od.quantity
						FROM
							bu_combine_order co,
							bu_sub_order so,
							bu_order_dtl od
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								,bu_member_info mi
							</if>
						WHERE
								co.del_flag = '0'
							AND co.`status` = '1'
							AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
							AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
							AND so.del_flag = '0'
							AND so.combine_order_id = co.id
							AND od.del_flag = '0'
							AND od.sub_order_id = so.id
							AND co.is_first_order = '0'
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								AND co.member_id = mi.id
								AND mi.del_flag = '0'
								AND mi.reg_client = '1'
								AND mi.req_imei IS NOT NULL
								AND mi.req_imei != ''
								AND mi.req_imei != '00000000-0000-0000-0000-000000000000'						
							</if>
					) tmp
				WHERE
				<if test="visitType == 'firstVisit'">
					<if test="deviceType == 1">
						tmp.req_imei = td.idfa
					</if>
					<if test="deviceType == 2">
						tmp.req_imei = td.imei
					</if>
					AND td.del_flag = '0'
					AND td.firstSpreadname IS NOT NULL
					AND td.firstSpreadname = sn.spread_name
				</if>
				<if test="visitType == 'newVisit'">
					<if test="deviceType == 1">
						tmp.req_imei = td.idfa
					</if>
					<if test="deviceType == 2">
						tmp.req_imei = td.imei
					</if>
					and td.del_flag = '0'
					AND td.spreadname IS NOT NULL
					AND td.spreadname = sn.spread_name
				</if>
				<if test="visitType == 'orderVisit'">
					tmp.id=coe.combine_order_id
					AND coe.del_flag = '0'
					AND coe.spreadname is not null
					AND coe.spreadname = sn.spread_name
				</if>
				AND sn.device_type = #{deviceType}
				AND sn.del_flag = '0'
				AND sn.activity_group_id = sag.id
				AND sag.channel = #{channel}
	  			AND sag.device_type = #{deviceType}
				<if test="activityGroupId !=null">
					AND sn.activity_group_id=#{activityGroupId}
				</if>
				<if test="activityGroupSetId != null">
					AND saps.del_flag = '0'
					AND sapsd.del_flag = '0'
					AND saps.id = #{activityGroupSetId}
					AND saps.status = '1'
					AND saps.id = sapsd.spread_activity_group_set_id
					AND sapsd.activity_group_id = sag.id
					AND saps.device_type = #{deviceType}
				</if>
				<if test="spreadName !=null">
					AND sn.spread_name=#{spreadName}
				</if>
			) t 
  </select>
  
 
 <sql id="paymentIncomeCountEachDayListsql">
 SELECT
 each_Day1 AS each_Day1,
 ifnull(sum(wxapp_amount), 0.00) AS wxapp_amount,
 ifnull(sum(wxgzh_amount), 0.00) AS wxgzh_amount,
 ifnull(sum(cdo_wx_amount), 0.00) AS cdo_wx_amount,
 ifnull(sum(cdo_gzh_amount), 0.00) AS cdo_gzh_amount,
 ifnull(sum(zFb_amount), 0.00) AS zFb_amount,
 ifnull(sum(cdo_zfb_amount), 0.00) AS cdo_zfb_amount,
 ifnull(sum(svip_wx_amount), 0.00) AS svip_wx_amount,
 ifnull(sum(svip_gzh_amount), 0.00) AS svip_gzh_amount,
 ifnull(sum(svip_zfb_amount), 0.00) AS svip_zfb_amount,
 ifnull(sum(zfb_design_amount), 0.00) AS zfb_design_amount
 FROM
 (
    SELECT 
    DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_Day1,
    SUM(co.total_pay_amount) wxapp_amount,
    0 AS wxgzh_amount,
    0 AS cdo_wx_amount,
    0 AS cdo_gzh_amount,
    0 AS zFb_amount,
    0 AS cdo_zfb_amount,
    0 AS svip_wx_amount,
    0 AS svip_gzh_amount,
    0 AS svip_zfb_amount,
    0 AS zfb_design_amount
    FROM
          bu_combine_order co FORCE INDEX(index_combine_order_03)
     WHERE
			 co.`status` = '1'
		 AND co.del_flag = '0'
		 AND co.pay_date IS NOT NULL
		 AND co.pay_date  <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
		 AND co.pay_date  <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
		 AND co.payment_id IN (2, 5)
		GROUP BY
			each_Day1
    UNION
        SELECT
			DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_Day1,
			0 AS wxapp_amount,
			SUM(co.total_pay_amount) wxgzh_amount,
            0 AS cdo_wx_amount,
            0 AS cdo_gzh_amount,
            0 AS zFb_amount,
            0 AS cdo_zfb_amount,
            0 AS svip_wx_amount,
            0 AS svip_gzh_amount,
            0 AS svip_zfb_amount,
            0 AS zfb_design_amount
		 FROM
			 bu_combine_order co FORCE INDEX(index_combine_order_03)
		 WHERE
			co.`status` = '1'
			AND co.del_flag = '0'
			AND co.pay_date IS NOT NULL
			AND co.pay_date  <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
			AND co.pay_date  <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR} 
			AND co.payment_id in (4,7)
			GROUP BY
			    each_Day1
          
      UNION
         SELECT
			DATE_FORMAT(cdo.pay_date, '%Y-%m-%d') each_Day1,
		    0 AS wxapp_amount,
            0 AS wxgzh_amount,
			SUM(cdo.total_deposit) cdo_wx_amount,
	        0 AS cdo_gzh_amount,
            0 AS zFb_amount,
            0 AS cdo_zfb_amount,
            0 AS svip_wx_amount,
            0 AS svip_gzh_amount,
            0 AS svip_zfb_amount,
            0 AS zfb_design_amount
		  FROM
			  bu_combine_deposit_order cdo 
		  WHERE
				cdo.`status` = '2'
			AND cdo.del_flag = '0'
			AND cdo.pay_date IS NOT NULL
			AND cdo.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
			AND cdo.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
			AND cdo.payment_id IN (2, 5)
			GROUP BY
			   each_Day1
         
        UNION
            SELECT
				DATE_FORMAT(cdo.pay_date, '%Y-%m-%d') each_Day1,
			    0 AS wxapp_amount,
                0 AS wxgzh_amount,
			    0 AS cdo_wx_amount,
				SUM(cdo.total_deposit) cdo_gzh_amount,
				0 AS zFb_amount,
                0 AS cdo_zfb_amount,
                0 AS svip_wx_amount,
                0 AS svip_gzh_amount,
                0 AS svip_zfb_amount,
                0 AS zfb_design_amount
			 FROM
					bu_combine_deposit_order cdo 
			 WHERE
					 cdo.`status` = '2'
					AND cdo.del_flag = '0'
					AND cdo.pay_date IS NOT NULL
					AND cdo.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
					AND cdo.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
					AND cdo.payment_id in (4,7)
					GROUP BY
						each_Day1

       UNION
			SELECT
				DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_Day1,
				0 AS wxapp_amount,
                0 AS wxgzh_amount,
				0 AS cdo_wx_amount,
				0 AS cdo_gzh_amount,
				SUM(co.total_pay_amount) zFb_amount,
		        0 AS cdo_zfb_amount,
		        0 AS svip_wx_amount,
                0 AS svip_gzh_amount,
                0 AS svip_zfb_amount,
                0 AS zfb_design_amount
			FROM
				bu_combine_order co FORCE INDEX(index_combine_order_03)
			WHERE
				co.`status` = '1'
			AND co.del_flag = '0'
			AND co.pay_date IS NOT NULL
			AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
			AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
			AND co.payment_id IN (1, 6)
			GROUP BY
				each_Day1
         UNION
			SELECT
				DATE_FORMAT(cdo.pay_date, '%Y-%m-%d') each_Day1,
				0 AS wxapp_amount,
                 0 AS wxgzh_amount,
				0 AS cdo_wx_amount,
				0 AS cdo_gzh_amount,
				0 AS zFb_amount,
				SUM(cdo.total_deposit) cdo_zfb_amount,
			    0 AS svip_wx_amount,
                0 AS svip_gzh_amount,
                0 AS svip_zfb_amount,
                0 AS zfb_design_amount
			FROM
				bu_combine_deposit_order cdo 
			WHERE
				cdo.`status` = '2'
			AND cdo.del_flag = '0'
			AND cdo.pay_date IS NOT NULL
			AND cdo.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
			AND cdo.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
			AND cdo.payment_id IN (1, 6)
			GROUP BY
				each_Day1

           UNION
				SELECT
				  DATE_FORMAT(svip.pay_date, '%Y-%m-%d') each_Day1,
				  0 AS wxapp_amount,
                  0 AS wxgzh_amount,
				  0 AS cdo_wx_amount,
				  0 AS cdo_gzh_amount,
				  0 AS zFb_amount,
				  0 AS cdo_zfb_amount,
				  SUM(svip.pay_amount) svip_wx_amount,
				  0 AS svip_gzh_amount,
                  0 AS svip_zfb_amount,
                  0 AS zfb_design_amount
				 FROM
					 bu_svip_order svip
				 WHERE
					 svip.`status` = '1'
				 AND svip.del_flag = '0'
				 AND svip.pay_date IS NOT NULL
				 AND svip.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
				 AND svip.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
				 AND svip.payment_id IN (2, 5)
			 GROUP BY
					each_Day1

             UNION
					 SELECT
					   DATE_FORMAT(svip.pay_date, '%Y-%m-%d') each_Day1,
					   0 AS wxapp_amount,
                       0 AS wxgzh_amount,
				       0 AS cdo_wx_amount,
				       0 AS cdo_gzh_amount,
				       0 AS zFb_amount,
				       0 AS cdo_zfb_amount,
					   0 AS svip_wx_amount,
					   SUM(svip.pay_amount) svip_gzh_amount,
					   0 AS svip_zfb_amount,
					   0 AS zfb_design_amount
				   FROM
						 bu_svip_order svip
				   WHERE
						svip.`status` = '1'
						AND svip.del_flag = '0'
						AND svip.pay_date IS NOT NULL
						AND svip.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
						AND svip.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
						AND svip.payment_id IN (4, 7)
						GROUP BY
							each_Day1
               UNION
				 SELECT
				    DATE_FORMAT(svip.pay_date, '%Y-%m-%d') each_Day1,
				      0 AS wxapp_amount,
                      0 AS wxgzh_amount,
				      0 AS cdo_wx_amount,
				      0 AS cdo_gzh_amount,
				      0 AS zFb_amount,
				      0 AS cdo_zfb_amount,
					  0 AS svip_wx_amount,
					  0 AS svip_gzh_amount,
				      SUM(svip.pay_amount) svip_zfb_amount,
				      0 AS zfb_design_amount
				    FROM
						bu_svip_order svip
					WHERE
						svip.`status` = '1'
					AND svip.del_flag = '0'
					AND svip.pay_date IS NOT NULL
					AND svip.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
					AND svip.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
					AND svip.payment_id IN (1, 6)
					GROUP BY
					  each_Day1
		     UNION
			    SELECT
				DATE_FORMAT(dto.pay_date, '%Y-%m-%d') each_Day1,
				0 AS wxapp_amount,
                0 AS wxgzh_amount,
				0 AS cdo_wx_amount,
				0 AS cdo_gzh_amount,
				0 AS zFb_amount,
		        0 AS cdo_zfb_amount,
		        0 AS svip_wx_amount,
                0 AS svip_gzh_amount,
                0 AS svip_zfb_amount,
                SUM(dto.pay_amount) zfb_design_amount
			FROM
				bu_design_task_order dto
			WHERE
				dto.`pay_status` = '1'
			AND dto.`status` = '0'
			AND dto.del_flag = '0'
			AND dto.pay_date IS NOT NULL
			AND dto.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
			AND dto.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
			AND dto.payment_id IN (1, 6)
			GROUP BY
				each_Day1


	) t
GROUP BY
	t.each_Day1
ORDER BY
	t.each_Day1
	</sql>
	
	<select id="paymentIncomeCountEachDayList" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    	SELECT TAB.* FROM (
		<include refid="paymentIncomeCountEachDayListsql" />
		)TAB
	    <if test="limitStart != null and limitStart>=0" >
            LIMIT #{limitStart} , #{limitSize}
         </if>
  	</select>

    <select id="paymentIncomeCountEachDayCount" resultType="java.lang.Integer" parameterType="java.util.HashMap" >
    	SELECT COUNT(1) FROM (
		<include refid="paymentIncomeCountEachDayListsql" />
		)TAB
  	</select>

    <select id="statMemberPayData" parameterType="com.jf.common.ext.query.QueryObject" resultType="com.jf.vo.MemberPayDataVo" >
        select
        member_id as memberId,
        sum(total_pay_amount) as totalPayAmount,
        count(0) as orderCount
        from bu_combine_order a
        where 1=1
        <if test="queryParam.status != null">
            and status=#{queryParam.status}
        </if>
        and pay_date <![CDATA[ >= ]]> #{queryParam.payDateGreaterThanOrEqualTo}
        and pay_date <![CDATA[ <= ]]> #{queryParam.payDateLessThanOrEqualTo}
        group by member_id;
    </select>

    <select id="statSvipMemberPayData" parameterType="java.util.HashMap" resultType="com.jf.vo.MemberPayDataVo" >
		SELECT
			co.member_id AS memberId,
			count( co.id ) orderCount,
			sum( co.total_pay_amount ) AS totalPayAmount
		FROM
			bu_combine_order co,
			bu_combine_order_extend coe
		WHERE
			co.id = coe.combine_order_id
			AND co.STATUS = '1'
			AND co.pay_status = '1'
			AND co.pay_date <![CDATA[ >= ]]> #{payDateGreaterThanOrEqualTo}
			AND co.pay_date <![CDATA[ <= ]]> #{payDateLessThanOrEqualTo}
			AND coe.is_svip_member = '1'
			AND co.del_flag = '0'
			AND coe.del_flag = '0'
		GROUP BY co.member_id
	</select>

	<select id="androidChannelGroupList" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
  			B.create_date,
  			sd.total_consumption,
			ROUND(sd.total_consumption / gdr.discount_rate,2) actual_consumption,
			sd.conversion_quantity,
			ROUND(sd.total_consumption / gdr.discount_rate / sd.conversion_quantity,2) single_active_cost,
			B.new_guest_combine_order_count,
			ROUND(sd.total_consumption / gdr.discount_rate / B.new_guest_combine_order_count,2) new_guest_cost,
			B.new_guest_consume_count,
			B.new_guest_pay_amount,
			ROUND(B.new_guest_pay_amount / B.new_guest_combine_order_count,2) new_unit_price,
			B.old_guest_combine_order_count,
			B.old_guest_consume_count,
			B.old_guest_pay_amount,
			ROUND(B.old_guest_pay_amount / B.old_guest_consume_count,2) old_unit_price,
			(B.new_guest_pay_amount + B.old_guest_pay_amount) total_pay_amount,
			ROUND(B.new_guest_consume_count / B.old_guest_consume_count,2) rate,
			ROUND((B.new_guest_pay_amount + B.old_guest_pay_amount) / (sd.total_consumption / gdr.discount_rate),2) roi,
			B.chnl_name,
			B.group_name
		FROM(
			SELECT
				A.create_date,
				A.android_channel_group_id,
				A.group_name,
				A.group_id,
				A.discount_rate,
				A.spr_chnl,
				A.chnl_name,
				SUM(A.new_guest_combine_order_count) new_guest_combine_order_count,
				SUM(A.new_guest_consume_count) new_guest_consume_count,
				SUM(A.new_guest_pay_amount) new_guest_pay_amount,
				SUM(A.old_guest_combine_order_count) old_guest_combine_order_count,
				SUM(A.old_guest_consume_count) old_guest_consume_count,
				SUM(A.old_guest_pay_amount) old_guest_pay_amount,
				SUM(A.new_guest_pay_amount + A.old_guest_pay_amount) total_pay_amount,
				ROUND(SUM(A.new_guest_consume_count) / SUM(A.old_guest_consume_count), 2) rate
			FROM(
				SELECT
					DATE_FORMAT(co.create_date, '%Y-%m-%d') create_date,
					acg.id android_channel_group_id,
					acg.group_name,
					acg.group_id,
					acg.discount_rate,
					mi.spr_chnl,
					ss.STATUS_DESC chnl_name,
					COUNT(co.id) new_guest_combine_order_count,
					COUNT(DISTINCT co.member_id) new_guest_consume_count,
					IFNULL(SUM(co.total_pay_amount), 0) new_guest_pay_amount,
					0 old_guest_combine_order_count,
					0 old_guest_consume_count,
					0 old_guest_pay_amount
				FROM
					bu_combine_order co,
		<if test="visitType == 'firstVisit'">
			bu_member_info mi,
		</if>
		<if test="visitType == 'newVisit'">
			bu_member_extend mi,
		</if>
		<if test="visitType == 'orderVisit'">
			bu_combine_order_extend mi,
		</if>
					sys_status ss,
					bu_android_channel_group acg,
					bu_android_channel_group_set_dtl acgsd,
					bu_android_channel_group_set acgs
				WHERE
		<if test="visitType == 'firstVisit'">
			 co.member_id = mi.id
		</if>
		<if test="visitType == 'newVisit'">
			 co.member_id = mi.member_id
		</if>
		<if test="visitType == 'orderVisit'">
			  co.id= mi.combine_order_id
		</if>
				AND mi.spr_chnl = ss.status_value
				AND ss.status_desc LIKE concat(acg.prefix, '%')
				AND acg.id = acgsd.android_channel_group_id
				AND acgsd.android_channel_group_set_id = acgs.id
				AND	co.`status` = '1'
				AND co.del_flag = '0'
				AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
				AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
				AND co.is_first_order = '1'
				AND mi.del_flag = '0'
				AND ss.table_name = 'BU_MEMBER_INFO'
				AND ss.col_name = 'SPR_CHNL'
				AND	acg.del_flag = '0'
				AND acg.status = '1'
				AND acg.type = '1'
				AND acgsd.del_flag = '0'
				AND acgs.del_flag = '0'
				AND acgs.status = '1'
				AND acgsd.android_channel_group_set_id = #{androidChannelGroupSetId}
				GROUP BY
					create_date, android_channel_group_id
				UNION
					SELECT
						DATE_FORMAT(co.create_date, '%Y-%m-%d') create_date,
						acg.id android_channel_group_id,
						acg.group_name,
						acg.group_id,
						acg.discount_rate,
						mi.spr_chnl,
						ss.STATUS_DESC chnl_name,
						0 new_guest_combine_order_count,
						0 new_guest_consume_count,
						0 new_guest_pay_amount,
						COUNT(co.id) old_guest_combine_order_count,
						COUNT(DISTINCT co.member_id) old_guest_consume_count,
						IFNULL(SUM(co.total_pay_amount), 0) old_guest_pay_amount
					FROM
						bu_combine_order co,
		<if test="visitType == 'firstVisit'">
			bu_member_info mi,
		</if>
		<if test="visitType == 'newVisit'">
			bu_member_extend mi,
		</if>
		<if test="visitType == 'orderVisit'">
			bu_combine_order_extend mi,
		</if>
						sys_status ss,
						bu_android_channel_group acg,
						bu_android_channel_group_set_dtl acgsd,
						bu_android_channel_group_set acgs
					WHERE
		<if test="visitType == 'firstVisit'">
			co.member_id = mi.id
		</if>
		<if test="visitType == 'newVisit'">
			co.member_id = mi.member_id
		</if>
		<if test="visitType == 'orderVisit'">
			co.id= mi.combine_order_id
		</if>
					AND mi.spr_chnl = ss.status_value
					AND ss.status_desc LIKE concat(acg.prefix, '%')
					AND acg.id = acgsd.android_channel_group_id
					AND acgsd.android_channel_group_set_id = acgs.id
					AND	co.`status` = '1'
					AND co.del_flag = '0'
					AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
					AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
					AND co.is_first_order = '0'
					AND mi.del_flag = '0'
					AND ss.table_name = 'BU_MEMBER_INFO'
					AND ss.col_name = 'SPR_CHNL'
					AND	acg.del_flag = '0'
					AND acg.status = '1'
					AND acg.type = '1'
					AND acgsd.del_flag = '0'
					AND acgs.del_flag = '0'
					AND acgs.status = '1'
					AND acgsd.android_channel_group_set_id = #{androidChannelGroupSetId}
					GROUP BY
						create_date, android_channel_group_id
			) A
			GROUP BY
				create_date, android_channel_group_id
			ORDER BY
				create_date
		) B
		LEFT JOIN bu_spread_data sd ON sd.date = B.create_date AND sd.account_id = B.group_id AND sd.del_flag = '0'
		LEFT JOIN bu_android_channel_group_discount_rate gdr ON gdr.android_channel_group_id = B.android_channel_group_id AND gdr.date = sd.date AND gdr.del_flag = '0'
	</select>
	<select id="androidChannelGroupNull" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			sd.date create_date,
			A.android_channel_group_id,
			A.group_name,
			ROUND(SUM(sd.total_consumption), 2) total_consumption,
			ROUND(SUM(sd.total_consumption / gdr.discount_rate), 2) actual_consumption,
			ROUND(SUM(sd.conversion_quantity)) conversion_quantity,
			ROUND(SUM(sd.total_consumption / gdr.discount_rate) / SUM(sd.conversion_quantity), 2) single_active_cost
		FROM(
			SELECT
				acg.id android_channel_group_id,
				acg.group_name,
				acg.group_id,
				acg.discount_rate
			FROM
				bu_android_channel_group acg,
				bu_android_channel_group_set_dtl acgsd
			WHERE
				acg.id = acgsd.android_channel_group_id
			AND acg.del_flag = '0'
			AND acg.type = '1'
			AND acg.status = '1'
			AND acgsd.del_flag = '0'
			AND acgsd.android_channel_group_set_id = #{androidChannelGroupSetId}
		) A,
		bu_spread_data sd,
		bu_android_channel_group_discount_rate gdr
		WHERE
			A.group_id = sd.account_id
		AND A.android_channel_group_id = gdr.android_channel_group_id
		AND sd.date = gdr.date
		AND gdr.del_flag = '0'
		AND sd.del_flag = '0'
		AND sd.date <![CDATA[ >= ]]> #{orderDateBegin}
		AND sd.date <![CDATA[ <= ]]> #{orderDateEnd}
		GROUP BY
			create_date, android_channel_group_id
		ORDER BY
			create_date
	</select>


	<select id="spreadActivityGroupList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			TAB.create_date,
			TAB.activity_group activity_group,
			sd.total_consumption,
			ROUND(sd.total_consumption / gdr.discount_rate, 2) actual_consumption,
			sd.conversion_quantity,
			ROUND(sd.total_consumption / gdr.discount_rate / sd.conversion_quantity, 2) single_active_cost,
			TAB.seq_no,
			TAB.new_guest_combine_order_count,
			ROUND(sd.total_consumption / gdr.discount_rate / TAB.new_guest_combine_order_count, 2) new_guest_cost,
			TAB.new_guest_consume_count,
			TAB.new_guest_pay_amount,
			ROUND(TAB.new_guest_pay_amount / TAB.new_guest_combine_order_count, 2) new_unit_price,
			TAB.old_guest_combine_order_count,
			TAB.old_guest_consume_count,
			TAB.old_guest_pay_amount,
			ROUND(TAB.old_guest_pay_amount / TAB.old_guest_consume_count, 2) old_unit_price,
			(TAB.new_guest_pay_amount + TAB.old_guest_pay_amount) total_pay_amount,
			ROUND(TAB.new_guest_consume_count / TAB.old_guest_consume_count, 2) rate,
			ROUND((TAB.new_guest_pay_amount + TAB.old_guest_pay_amount) / (sd.total_consumption / gdr.discount_rate), 2) roi
		FROM(
			SELECT
				AA.create_date,
				AA.activity_group_id,
				AA.activity_group,
				AA.seq_no,
				AA.group_id,
				AA.discount_rate,
				SUM(AA.new_guest_combine_order_count) new_guest_combine_order_count,
				SUM(AA.new_guest_consume_count) new_guest_consume_count,
				SUM(AA.new_guest_pay_amount) new_guest_pay_amount,
				SUM(AA.old_guest_combine_order_count) old_guest_combine_order_count,
				SUM(AA.old_guest_consume_count) old_guest_consume_count,
				SUM(AA.old_guest_pay_amount) old_guest_pay_amount,
				SUM(AA.new_guest_pay_amount + AA.old_guest_pay_amount) total_pay_amount,
				ROUND(SUM(AA.new_guest_consume_count) / SUM(AA.old_guest_consume_count), 2) rate
			FROM(
				SELECT
					DATE_FORMAT(A.create_date, '%Y-%m-%d') create_date,
					sag.id activity_group_id,
					sag.activity_group,
					<if test="visitType == 'firstVisit'">
						td.firstSpreadname spreadname,
					</if>
					<if test="visitType == 'newVisit'">
						td.spreadname spreadname,
					</if>
					<if test="visitType == 'orderVisit'">
						coe.spreadname spreadname,
					</if>
					sag.group_id,
					sag.discount_rate,
					sn.seq_no,
					COUNT(A.id) new_guest_combine_order_count,
					COUNT(DISTINCT A.member_id) new_guest_consume_count,
					IFNULL(SUM(A.total_pay_amount), 0) new_guest_pay_amount,
					0 old_guest_combine_order_count,
					0 old_guest_consume_count,
					0 old_guest_pay_amount
				FROM
					<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
						bu_track_data td,
					</if>
					<if test="visitType == 'orderVisit'">
						bu_combine_order_extend coe,
					</if>
					bu_spread_name sn,
					bu_spread_activity_group sag,
					bu_spread_activity_group_set saps,
					bu_spread_activity_group_set_dtl sapsd,
					(
						SELECT
							co.id,
							co.member_id,
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								mi.req_imei,
							</if>
							co.total_pay_amount,
							co.create_date
						FROM
							bu_combine_order co
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								,bu_member_info mi
							</if>
						WHERE
							co.del_flag = '0'
						AND co.`status` = '1'
						AND co.del_flag = '0'
						AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
						AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
						AND co.is_first_order = '1'
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
							AND co.member_id = mi.id
							AND mi.del_flag = '0'
							AND mi.reg_client = '1'
							AND mi.req_imei IS NOT NULL
							AND mi.req_imei != ''
							AND mi.req_imei != '00000000-0000-0000-0000-000000000000'
						</if>
					) A
				WHERE
				<if test="visitType == 'firstVisit'">
						A.req_imei = td.idfa
					AND td.del_flag = '0'
					AND td.firstSpreadname IS NOT NULL
					AND td.firstSpreadname = sn.spread_name
				</if>
				<if test="visitType == 'newVisit'">
						A.req_imei = td.idfa
					AND td.del_flag = '0'
					AND td.spreadname IS NOT NULL
					AND td.spreadname = sn.spread_name
				</if>
				<if test="visitType == 'orderVisit'">
						A.id=coe.combine_order_id
					AND coe.del_flag = '0'
					AND coe.spreadname IS NOT NULL
					AND coe.spreadname = sn.spread_name
				</if>
				AND sn.device_type = #{deviceType}
				AND sn.del_flag = '0'
				AND sn.activity_group_id = sag.id
				AND sag.channel = #{channel}
				AND saps.del_flag = '0'
				AND sapsd.del_flag = '0'
				AND saps.id = #{activityGroupSetId}
				AND saps.status = '1'
				AND saps.id = sapsd.spread_activity_group_set_id
				AND sapsd.activity_group_id = sag.id
				AND sag.device_type = #{deviceType}
				AND saps.device_type = #{deviceType}
				<if test="spreadName != null">
					AND sn.spread_name = #{spreadName}
				</if>
				GROUP BY
					create_date, activity_group_id
				UNION
					SELECT
						DATE_FORMAT(B.create_date, '%Y-%m-%d') create_date,
						sag.id activity_group_id,
						sag.activity_group,
						<if test="visitType == 'firstVisit'">
							td.firstSpreadname spreadname,
						</if>
						<if test="visitType == 'newVisit'">
							td.spreadname spreadname,
						</if>
						<if test="visitType == 'orderVisit'">
							coe.spreadname spreadname,
						</if>
						sag.group_id,
						sag.discount_rate,
						sn.seq_no,
						0 new_guest_combine_order_count,
						0 new_guest_consume_count,
						0 new_guest_pay_amount,
						COUNT(B.id) old_guest_combine_order_count,
						COUNT(DISTINCT B.member_id) old_guest_consume_count,
						IFNULL(SUM(B.total_pay_amount), 0) old_guest_pay_amount
					FROM
						<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
							bu_track_data td,
						</if>
						<if test="visitType == 'orderVisit'">
							bu_combine_order_extend coe,
						</if>
						bu_spread_name sn,
						bu_spread_activity_group sag,
						bu_spread_activity_group_set saps,
						bu_spread_activity_group_set_dtl sapsd,
						(
							SELECT
								co.id,
								co.member_id,
								<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
									mi.req_imei,
								</if>
								co.total_pay_amount,
								co.create_date
								FROM
								bu_combine_order co
								<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
									,bu_member_info mi
								</if>
							WHERE
								co.del_flag = '0'
							AND co.`status` = '1'
							AND co.del_flag = '0'
							AND co.create_date <![CDATA[ >= ]]> #{orderDateBegin}
							AND co.create_date <![CDATA[ <= ]]> #{orderDateEnd}
							AND co.is_first_order = '0'
							<if test="visitType == 'firstVisit' or visitType == 'newVisit'">
								AND co.member_id = mi.id
								AND mi.del_flag = '0'
								AND mi.reg_client = '1'
								AND mi.req_imei IS NOT NULL
								AND mi.req_imei != ''
								AND mi.req_imei != '00000000-0000-0000-0000-000000000000'
							</if>
						) B
					WHERE
					<if test="visitType == 'firstVisit'">
							B.req_imei = td.idfa
						AND td.del_flag = '0'
						AND td.firstSpreadname IS NOT NULL
						AND td.firstSpreadname = sn.spread_name
					</if>
					<if test="visitType == 'newVisit'">
							B.req_imei = td.idfa
						AND td.del_flag = '0'
						AND td.spreadname IS NOT NULL
						AND td.spreadname = sn.spread_name
					</if>
					<if test="visitType == 'orderVisit'">
							B.id=coe.combine_order_id
						AND coe.del_flag = '0'
						AND coe.spreadname IS NOT NULL
						AND coe.spreadname = sn.spread_name
					</if>
					AND sn.device_type = #{deviceType}
					AND sn.del_flag = '0'
					AND sn.activity_group_id = sag.id
					AND sag.channel = #{channel}
					AND sag.device_type = #{deviceType}
					AND saps.device_type = #{deviceType}
					<if test="activityGroupSetId != null">
						AND saps.del_flag = '0'
						AND sapsd.del_flag = '0'
						AND saps.id = #{activityGroupSetId}
						AND saps.status = '1'
						AND saps.id = sapsd.spread_activity_group_set_id
						AND sapsd.activity_group_id = sag.id
					</if>
					<if test="spreadName != null">
						AND sn.spread_name = #{spreadName}
					</if>
					GROUP BY
						create_date, activity_group_id
			) AA
			GROUP BY
				create_date, activity_group_id
			ORDER BY
				AA.create_date
		) TAB
		LEFT JOIN bu_spread_data sd ON sd.date = TAB.create_date AND sd.account_id = TAB.group_id AND sd.del_flag = '0'
		LEFT JOIN bu_spread_activity_group_discount_rate gdr ON gdr.date = sd.date AND gdr.spread_activity_group_id = TAB.activity_group_id AND gdr.del_flag = '0'
	</select>

	<select id="spreadActivityGroupNull" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			sd.date create_date,
			A.activity_group_id,
			A.activity_group,
			ROUND(SUM(sd.total_consumption), 2) total_consumption,
			ROUND(SUM(sd.total_consumption / gdr.discount_rate), 2) actual_consumption,
			ROUND(SUM(sd.conversion_quantity)) conversion_quantity,
			ROUND(SUM(sd.total_consumption / gdr.discount_rate) / SUM(sd.conversion_quantity), 2) single_active_cost
		FROM(
			SELECT
				sag.group_id,
				sag.discount_rate,
				sag.id activity_group_id,
				sag.activity_group
			FROM
				bu_spread_activity_group sag,
				bu_spread_activity_group_set saps,
				bu_spread_activity_group_set_dtl sapsd
			WHERE
				sag.del_flag = '0'
			AND sag.channel = #{channel}
			AND sag.device_type = #{deviceType}
			AND saps.device_type = #{deviceType}
			AND saps.del_flag = '0'
			AND sapsd.del_flag = '0'
			AND saps.id = #{activityGroupSetId}
			AND saps.status = '1'
			AND saps.id = sapsd.spread_activity_group_set_id
			AND sapsd.activity_group_id = sag.id
		) A,
		bu_spread_data sd,
		bu_spread_activity_group_discount_rate gdr
		WHERE
			sd.account_id = A.group_id
		AND gdr.spread_activity_group_id = A.activity_group_id
		AND gdr.date = sd.date
		AND sd.del_flag = '0'
		AND sd.date <![CDATA[ >= ]]> #{orderDateBegin}
		AND sd.date <![CDATA[ <= ]]> #{orderDateEnd}
		GROUP BY
			create_date, activity_group_id
		ORDER BY
			create_date
	</select>

	<select id="iosSpreadChannelDataTotal" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		channel,
		ifnull( SUM( new_guest_combine_order_count ), 0 ) new_guest_combine_order_count,
		ifnull( SUM( actual_consumption ), 0.00 ) actual_consumption,
		ifnull( SUM( total_pay_amount_sum ), 0.00 ) total_pay_amount_sum,
		ifnull( SUM( combine_order_count ), 0 ) combine_order_count
		FROM
		(
		SELECT
			A.channel,
			count(A.new_guest_combine_order_id) new_guest_combine_order_count,
			ifnull(ROUND(sum(A.total_consumption / A.discount_rate), 2), 0.00) actual_consumption,
			ifnull(sum(A.total_pay_amount), 0.00) total_pay_amount_sum,
			count(A.combine_order_id) combine_order_count
		FROM(
			SELECT
				coe.channel,
				co.id combine_order_id,
				IF (co.is_first_order IS NOT NULL AND co.is_first_order = '1', co.id, NULL) new_guest_combine_order_id,
				co.total_pay_amount,
				0.00 total_consumption,
				0.00 discount_rate
			FROM
				bu_combine_order co,
				bu_combine_order_extend coe
			WHERE
				co.id = coe.combine_order_id
			AND co.del_flag = '0'
			AND co. STATUS = '1'
			AND coe.del_flag = '0'
			AND coe.channel IS NOT NULL
			AND coe.channel != ''
			<if test="reportDateBegin != null">
				<![CDATA[
					AND co.create_date >= concat(#{reportDateBegin}, ' 00:00:00')
				]]>
			</if>
			<if test="reportDateEnd != null">
				<![CDATA[
					AND co.create_date <= concat(#{reportDateEnd}, ' 23:59:59')
				]]>
			</if>
			<if test="channel != null">
				AND coe.channel = #{channel}
			</if>
			UNION ALL
				SELECT
					FUN_GET_STATUS_DESC("BU_SPREAD_ACTIVITY_GROUP", "CHANNEL", sag.channel) channel,
					NULL combine_order_id,
					NULL new_guest_combine_order_id,
					0.00 total_pay_amount,
					CONVERT (sd.total_consumption, DECIMAL (10, 2)) total_consumption,
					gdr.discount_rate
				FROM
					bu_spread_activity_group sag,
					bu_spread_data sd,
					bu_spread_activity_group_discount_rate gdr
				WHERE
					sag.group_id = sd.account_id
				AND sag.id = gdr.spread_activity_group_id
				AND sd.date = gdr.date
				AND sag.is_effect = '1'
				AND sag.del_flag = '0'
				AND sd.del_flag = '0'
				AND gdr.del_flag = '0'
				AND sag.device_type = '1'
				<if test="reportDateBegin != null">
					<![CDATA[
						AND sd.date >= #{reportDateBegin}
					]]>
				</if>
				<if test="reportDateEnd != null">
					<![CDATA[
						AND sd.date <= #{reportDateEnd}
					]]>
				</if>
				<if test="channelInt != null">
					AND sag.channel = #{channelInt}
				</if>
		) A
		GROUP BY
		channel
		) B
		<if test="showStatus != null">
			<![CDATA[
				WHERE actual_consumption > 0
			]]>
		</if>
	</select>

	<select id="androidSpreadChannelDataTotal" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		channel,
		ifnull( SUM( new_guest_combine_order_count ), 0 ) new_guest_combine_order_count,
		ifnull( SUM( actual_consumption ), 0.00 ) actual_consumption,
		ifnull( SUM( total_pay_amount_sum ), 0.00 ) total_pay_amount_sum,
		ifnull( SUM( combine_order_count ), 0 ) combine_order_count
		FROM
		(
		SELECT
			A.channel,
			count(A.new_guest_combine_order_id) new_guest_combine_order_count,
			ifnull(ROUND(sum(A.total_consumption / A.discount_rate), 2), 0.00) actual_consumption,
			ifnull(sum(A.total_pay_amount), 0.00) total_pay_amount_sum,
			count(A.combine_order_id) combine_order_count
		FROM (
			SELECT
				ss.REMARK channel,
				co.id combine_order_id,
				IF (co.is_first_order IS NOT NULL AND co.is_first_order = '1', co.id, NULL) new_guest_combine_order_id,
				co.total_pay_amount,
				0.00 total_consumption,
				0.00 discount_rate,
				0 spread_data_id
			FROM
				bu_combine_order co,
				bu_member_info mi,
				sys_status ss
			WHERE
				co.member_id = mi.id
			AND mi.spr_chnl = ss.status_value
			AND ss.table_name = 'BU_MEMBER_INFO'
			AND ss.col_name = 'SPR_CHNL'
			AND co.del_flag = '0'
			AND co.`status` = '1'
			AND mi.del_flag = '0'
			AND ss.REMARK != '推广渠道'
			AND ss.REMARK != ''
			AND ss.REMARK IS NOT NULL
			<if test="reportDateBegin != null">
				<![CDATA[
					AND co.create_date >= concat(#{reportDateBegin}, ' 00:00:00')
				]]>
			</if>
			<if test="reportDateEnd != null">
				<![CDATA[
					AND co.create_date <= concat(#{reportDateEnd}, ' 23:59:59')
				]]>
			</if>
			<if test="channel != null">
				AND ss.REMARK = #{channel}
			</if>
			UNION ALL
				SELECT DISTINCT
					ss.REMARK channel,
					NULL combine_order_id,
					NULL new_guest_combine_order_id,
					0.00 total_pay_amount,
					CONVERT (sd.total_consumption, DECIMAL (10, 2)) total_consumption,
					gdr.discount_rate,
					sd.id spread_data_id
				FROM
					bu_android_channel_group acg,
					bu_spread_data sd,
					sys_status ss,
					bu_android_channel_group_discount_rate gdr
				WHERE
					acg.group_id = sd.account_id
				AND ss.STATUS_DESC LIKE CONCAT(acg.prefix, '%')
				AND acg.id = gdr.android_channel_group_id
				AND sd.date = gdr.date
				AND acg.del_flag = '0'
				AND gdr.del_flag = '0'
				AND acg.type = '1'
				AND acg.`status` = '1'
				AND sd.del_flag = '0'
				AND ss.REMARK != '推广渠道'
				AND ss.REMARK != ''
				AND ss.REMARK IS NOT NULL
				AND ss.table_name = 'BU_MEMBER_INFO'
				AND ss.col_name = 'SPR_CHNL'
				<if test="reportDateBegin != null">
					<![CDATA[
						AND sd.date >= #{reportDateBegin}
					]]>
				</if>
				<if test="reportDateEnd != null">
					<![CDATA[
						AND sd.date <= #{reportDateEnd}
					]]>
				</if>
				<if test="channel != null">
					AND ss.REMARK = #{channel}
				</if>
		) A
		GROUP BY
		channel
		) B
		<if test="showStatus != null">
			<![CDATA[
				WHERE actual_consumption > 0
			]]>
		</if>
	</select>


	<select id="iosSpreadChannelDataList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			A.channel,
			count(A.new_guest_combine_order_id) new_guest_combine_order_count,
			ifnull(ROUND(sum(A.total_consumption / A.discount_rate), 2), 0.00) actual_consumption,
			ifnull(sum(A.total_pay_amount), 0.00) total_pay_amount_sum,
			count(A.combine_order_id) combine_order_count,
			ifnull(sum(conversion_quantity), 0) conversion_quantity_sum,
			sum(A.total_consumption) total_consumption_sum
		FROM(
			SELECT
			coe.channel,
			co.id combine_order_id,
			IF (co.is_first_order IS NOT NULL AND co.is_first_order = '1', co.id, NULL) new_guest_combine_order_id,
			co.total_pay_amount,
			0.00 total_consumption,
			0.00 discount_rate,
			0 conversion_quantity
		FROM
			bu_combine_order co,
			bu_combine_order_extend coe
		WHERE
			co.id = coe.combine_order_id
		AND co.del_flag = '0'
		AND co. STATUS = '1'
		AND coe.del_flag = '0'
		AND coe.channel IS NOT NULL
		AND coe.channel != ''
		<if test="reportDateBegin != null">
			<![CDATA[
				AND co.create_date >= concat(#{reportDateBegin}, ' 00:00:00')
			]]>
		</if>
		<if test="reportDateEnd != null">
			<![CDATA[
				AND co.create_date <= concat(#{reportDateEnd}, ' 23:59:59')
			]]>
		</if>
		<if test="channel != null">
			AND coe.channel = #{channel}
		</if>
		UNION ALL
			SELECT
				FUN_GET_STATUS_DESC("BU_SPREAD_ACTIVITY_GROUP", "CHANNEL", sag.channel) channel,
				NULL combine_order_id,
				NULL new_guest_combine_order_id,
				0.00 total_pay_amount,
				CONVERT (sd.total_consumption, DECIMAL (10, 2)) total_consumption,
				gdr.discount_rate,
				CONVERT (sd.conversion_quantity, SIGNED) conversion_quantity
			FROM
				bu_spread_activity_group sag,
				bu_spread_data sd,
				bu_spread_activity_group_discount_rate gdr
			WHERE
				sag.group_id = sd.account_id
			AND sag.id = gdr.spread_activity_group_id
			AND sd.date = gdr.date
			AND sag.is_effect = '1'
			AND sag.del_flag = '0'
			AND sd.del_flag = '0'
			AND gdr.del_flag = '0'
			AND sag.device_type = '1'
			<if test="reportDateBegin != null">
				<![CDATA[
					AND sd.date >= #{reportDateBegin}
				]]>
			</if>
			<if test="reportDateEnd != null">
				<![CDATA[
					AND sd.date <= #{reportDateEnd}
				]]>
			</if>
			<if test="channelInt != null">
				AND sag.channel = #{channelInt}
			</if>
		) A
		GROUP BY
			channel
	</select>


	<select id="androidSpreadChannelDataList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			A.channel,
			count(A.new_guest_combine_order_id) new_guest_combine_order_count,
			ifnull(ROUND(sum(A.total_consumption / A.discount_rate), 2), 0.00) actual_consumption,
			ifnull(sum(A.total_pay_amount), 0.00) total_pay_amount_sum,
			count(A.combine_order_id) combine_order_count,
			ifnull(sum(conversion_quantity), 0) conversion_quantity_sum,
			sum(A.total_consumption) total_consumption_sum
		FROM (
			SELECT
				ss.REMARK channel,
				co.id combine_order_id,
				IF (co.is_first_order IS NOT NULL AND co.is_first_order = '1', co.id, NULL) new_guest_combine_order_id,
				co.total_pay_amount,
				0.00 total_consumption,
				0.00 discount_rate,
				0 conversion_quantity,
				0 spread_data_id
			FROM
				bu_combine_order co,
				bu_member_info mi,
				sys_status ss
			WHERE
				co.member_id = mi.id
			AND mi.spr_chnl = ss.status_value
			AND ss.table_name = 'BU_MEMBER_INFO'
			AND ss.col_name = 'SPR_CHNL'
			AND co.del_flag = '0'
			AND co.`status` = '1'
			AND mi.del_flag = '0'
			AND ss.REMARK != '推广渠道'
			AND ss.REMARK != ''
			AND ss.REMARK IS NOT NULL
			<if test="reportDateBegin != null">
				<![CDATA[
					AND co.create_date >= concat(#{reportDateBegin}, ' 00:00:00')
				]]>
			</if>
			<if test="reportDateEnd != null">
				<![CDATA[
					AND co.create_date <= concat(#{reportDateEnd}, ' 23:59:59')
				]]>
			</if>
			<if test="channel != null">
				AND ss.REMARK = #{channel}
			</if>
			UNION ALL
				SELECT DISTINCT
					ss.REMARK channel,
					NULL combine_order_id,
					NULL new_guest_combine_order_id,
					0.00 total_pay_amount,
					CONVERT (sd.total_consumption, DECIMAL (10, 2)) total_consumption,
					gdr.discount_rate,
					CONVERT (sd.conversion_quantity, SIGNED) conversion_quantity,
					sd.id spread_data_id
				FROM
					bu_android_channel_group acg,
					bu_spread_data sd,
					sys_status ss,
					bu_android_channel_group_discount_rate gdr
				WHERE
					acg.group_id = sd.account_id
				AND ss.STATUS_DESC LIKE CONCAT(acg.prefix, '%')
				AND acg.id = gdr.android_channel_group_id
				AND sd.date = gdr.date
				AND gdr.del_flag = '0'
				AND acg.del_flag = '0'
				AND acg.type = '1'
				AND acg.`status` = '1'
				AND sd.del_flag = '0'
				AND ss.REMARK != '推广渠道'
				AND ss.REMARK != ''
				AND ss.REMARK IS NOT NULL
				AND ss.table_name = 'BU_MEMBER_INFO'
				AND ss.col_name = 'SPR_CHNL'
				<if test="reportDateBegin != null">
					<![CDATA[
						AND sd.date >= #{reportDateBegin}
					]]>
				</if>
				<if test="reportDateEnd != null">
					<![CDATA[
						AND sd.date <= #{reportDateEnd}
					]]>
				</if>
				<if test="channel != null">
					AND ss.REMARK = #{channel}
				</if>
		) A
		GROUP BY
			channel
	</select>

	<select id="getTotalPayAmountSum" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			IFNULL(SUM(t.total_pay_amount), 0) co_pay_amount_sum,
			IFNULL( COUNT( t.id ), 0 ) combine_order_count
		FROM
			bu_combine_order t
		WHERE
			t.del_flag = '0'
		AND t. STATUS = '1'
		AND t.pay_date BETWEEN concat(#{reportDateBegin}, ' 00:00:00')
		AND concat(#{reportDateEnd}, ' 23:59:59')
	</select>


</mapper>
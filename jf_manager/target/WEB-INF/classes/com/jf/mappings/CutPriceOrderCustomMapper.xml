<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.CutPriceOrderCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.CutPriceOrderCustom" extends="com.jf.dao.CutPriceOrderMapper.BaseResultMap" >
    <result column="product_pic" property="productPic" jdbcType="VARCHAR" />
    <result column="product_code" property="productCode" jdbcType="VARCHAR" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="cut_price_order_dtl_count" property="cutPriceOrderDtlCount" jdbcType="INTEGER" />
    <result column="status_desc" property="statusDesc" jdbcType="VARCHAR" />
    <result column="audit_status_desc" property="auditStatusDesc" jdbcType="VARCHAR" />
    <result column="cut_price_order_count" property="cutPriceOrderCount" jdbcType="INTEGER" />
    <result column="cut_price_order_succ_count" property="cutPriceOrderSuccCount" jdbcType="INTEGER" />
    <result column="super_cut_price_order_count" property="superCutPriceOrderCount" jdbcType="INTEGER" />
    <result column="super_cut_price_order_succ_count" property="superCutPriceOrderSuccCount" jdbcType="INTEGER" />
    <result column="fixed_amount" property="fixedAmount" jdbcType="DECIMAL" />
    <result column="pay_date" property="payDate" jdbcType="TIMESTAMP" />
    <result column="combine_order_code" property="combineOrderCode" jdbcType="TIMESTAMP" />
    <result column="cut_price_order_dtl_success_count" property="cutPriceOrderDtlSuccessCount" jdbcType="INTEGER" />
    <result column="combine_order_status" property="combineOrderStatus" jdbcType="VARCHAR" />
    <result column="max_invite_times" property="maxInviteTimes" jdbcType="INTEGER" />
  
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_code, single_product_activity_id, activity_type, member_id, product_id, 
    product_item_id, sku_pic, product_name, art_no, brand_name, product_prop_desc, quantity, 
    tag_price, sale_price, audit_status, audit_remarks, status, can_order, combine_order_id, 
    pay_amount, member_nick, address_id, receiver_name, receiver_phone, receiver_address, 
    source_client, create_by, create_date, update_by, update_date, remarks, del_flag,
    (select bp.pic from bu_product_pic bp where bp.product_id = t.product_id and bp.is_default = '1' and bp.del_flag='0' ) product_pic,
    (select bp.code from bu_product bp where bp.id = t.product_id and bp.del_flag = '0' ) product_code,
    (select mi.shop_name from bu_product bp, bu_mcht_info mi where bp.del_flag = '0' and mi.del_flag = '0' and bp.mcht_id = mi.id and bp.id = t.product_id ) shop_name,
    (select count(1) from bu_cut_price_order_dtl cpod where cpod.del_flag = '0' and cpod.cut_price_order_id = t.id ) cut_price_order_dtl_count,
    FUN_GET_STATUS_DESC("BU_CUT_PRICE_ORDER", "STATUS", t.status) status_desc,
    FUN_GET_STATUS_DESC("BU_CUT_PRICE_ORDER", "AUDIT_STATUS", t.audit_status) audit_status_desc,
    (select count(1) from bu_cut_price_order cpo, bu_single_product_activity spa where cpo.del_flag = '0' and spa.del_flag = '0' and cpo.single_product_activity_id = spa.id and spa.type = '7' and cpo.member_id = t.member_id ) cut_price_order_count, 
    (select count(1) from bu_cut_price_order cpo, bu_single_product_activity spa where cpo.del_flag = '0' and spa.del_flag = '0' and cpo.single_product_activity_id = spa.id and spa.type = '7' and cpo.status in(2,4) and cpo.member_id = t.member_id ) cut_price_order_succ_count,
    (select count(1) from bu_cut_price_order cpo, bu_single_product_activity spa where cpo.del_flag = '0' and spa.del_flag = '0' and cpo.single_product_activity_id = spa.id and spa.type = '8' and cpo.member_id = t.member_id ) super_cut_price_order_count, 
    (select count(1) from bu_cut_price_order cpo, bu_single_product_activity spa where cpo.del_flag = '0' and spa.del_flag = '0' and cpo.single_product_activity_id = spa.id and spa.type = '8' and cpo.status in(2,4) and cpo.member_id = t.member_id ) super_cut_price_order_succ_count,
    (select cpcd.fixed_amount from bu_cut_price_cnf cpc, bu_cut_price_cnf_dtl cpcd where cpc.del_flag = '0' and cpcd.del_flag = '0' and cpc.id = cpcd.cut_price_cnf_id and cpc.single_product_activity_id = t.single_product_activity_id limit 1 ) fixed_amount,
    (select co.pay_date from bu_combine_order co where co.del_flag = '0' and co.id = t.combine_order_id ) pay_date,
    (select co.combine_order_code from bu_combine_order co where co.del_flag = '0' and co.id = t.combine_order_id ) combine_order_code,
    (select count(1) from bu_cut_price_order_dtl cpod where cpod.del_flag = '0' and cpod.status = '1' and cpod.cut_price_order_id = t.id ) cut_price_order_dtl_success_count,
    (select co.status from bu_combine_order co where co.del_flag = '0' and co.id = t.combine_order_id ) combine_order_status,
    (select cpc.max_invite_times from bu_cut_price_cnf cpc where cpc.del_flag = '0' and cpc.single_product_activity_id = t.single_product_activity_id limit 1 ) max_invite_times
    
  </sql>
  <select id="selectByCustomExample" resultMap="BaseResultMap" parameterType="com.jf.entity.CutPriceOrderCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_cut_price_order t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByCustomPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_cut_price_order t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByCustomExample" parameterType="com.jf.entity.CutPriceOrderCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_cut_price_order t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCustomExampleSelective" parameterType="map" >
    update bu_cut_price_order t
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderCode != null" >
        order_code = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.singleProductActivityId != null" >
        single_product_activity_id = #{record.singleProductActivityId,jdbcType=INTEGER},
      </if>
      <if test="record.activityType != null" >
        activity_type = #{record.activityType,jdbcType=CHAR},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productItemId != null" >
        product_item_id = #{record.productItemId,jdbcType=INTEGER},
      </if>
      <if test="record.skuPic != null" >
        sku_pic = #{record.skuPic,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.artNo != null" >
        art_no = #{record.artNo,jdbcType=VARCHAR},
      </if>
      <if test="record.brandName != null" >
        brand_name = #{record.brandName,jdbcType=VARCHAR},
      </if>
      <if test="record.productPropDesc != null" >
        product_prop_desc = #{record.productPropDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.tagPrice != null" >
        tag_price = #{record.tagPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.salePrice != null" >
        sale_price = #{record.salePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.auditStatus != null" >
        audit_status = #{record.auditStatus,jdbcType=CHAR},
      </if>
      <if test="record.auditRemarks != null" >
        audit_remarks = #{record.auditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.canOrder != null" >
        can_order = #{record.canOrder,jdbcType=CHAR},
      </if>
      <if test="record.combineOrderId != null" >
        combine_order_id = #{record.combineOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.memberNick != null" >
        member_nick = #{record.memberNick,jdbcType=VARCHAR},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.receiverName != null" >
        receiver_name = #{record.receiverName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverPhone != null" >
        receiver_phone = #{record.receiverPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverAddress != null" >
        receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceClient != null" >
        source_client = #{record.sourceClient,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- 免费砍价拿数据统计 或  邀请免费拿数据统计 -->
  <select id="cutPriceOrderStatisticsList" resultType="java.util.Map" parameterType="java.util.Map" >
  	SELECT
		IFNULL(sum(B.fq_count), 0) fq_count,
		IFNULL(SUM(B.new_member_count), 0) new_member_count,
		IFNULL(
			SUM(B.combine_order_count),
			0
		) combine_order_count,
		IFNULL(SUM(B.sale_price_sum), 0.00) sale_price_sum,
		IFNULL(SUM(B.ws_count), 0) ws_count,
		IFNULL(SUM(B.tg_count), 0) tg_count,
		IFNULL(SUM(B.sb_count), 0) sb_count,
		IFNULL(
			SUM(B.xd_settle_amount_sum),
			0
		) xd_settle_amount_sum,
		IFNULL(
			SUM(B.wsh_settle_amount_sum),
			0
		) wsh_settle_amount_sum,
		IFNULL(SUM(B.gm_count), 0) gm_count,
		IFNULL(SUM(B.dd_count), 0) dd_count,
		IFNULL(
			SUM(B.yg_commission_amount_sum),
			0.00
		) yg_commission_amount_sum,
		IFNULL(sum(B.xy_gm_count), 0) xy_gm_count,
		IFNULL(sum(B.xy_dd_count), 0) xy_dd_count,
		IFNULL(
			SUM(
				B.xy_yg_commission_amount_sum
			),
			0.00
		) xy_yg_commission_amount_sum
	FROM
		(
			SELECT
				count(1) fq_count,
				count(
					(
						SELECT
							m.id
						FROM
							bu_member_info m
						WHERE
							m.del_flag = '0'
						AND m.id = A.member_id
						AND m.create_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
						AND m.create_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
					)
				) new_member_count,
				NULL combine_order_count,
				NULL sale_price_sum,
				NULL ws_count,
				NULL tg_count,
				NULL sb_count,
				NULL xd_settle_amount_sum,
				NULL wsh_settle_amount_sum,
				count(
					(
						SELECT DISTINCT
							co.member_id
						FROM
							bu_combine_order co
						WHERE
							co.del_flag = '0'
						AND co.member_id = A.member_id
						AND co.pay_status = '1'
						AND co.order_type IN ('1', '2')
						AND co.pay_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
						AND co.pay_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
					)
				) gm_count,
				sum(
					(
						SELECT
							count(1)
						FROM
							bu_combine_order co
						WHERE
							co.del_flag = '0'
						AND co.member_id = A.member_id
						AND co.pay_status = '1'
						AND co.pay_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
						AND co.pay_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
					)
				) dd_count,
				sum(
					(
						SELECT
							sum(od.commission_amount)
						FROM
							bu_combine_order co,
							bu_sub_order so,
							bu_order_dtl od
						WHERE
							co.del_flag = '0'
						AND so.del_flag = '0'
						AND od.del_flag = '0'
						AND so.combine_order_id = co.id
						AND od.sub_order_id = so.id
						AND co.member_id = A.member_id
						AND co.pay_status = '1'
						AND co.pay_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
						AND co.pay_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
					)
				) yg_commission_amount_sum,
				count(
					(
						SELECT DISTINCT
							co.member_id
						FROM
							bu_combine_order co,
							bu_member_info m
						WHERE
							co.del_flag = '0'
						AND m.del_flag = '0'
						AND co.member_id = m.id
						AND m.id = A.member_id
						AND m.create_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
						AND m.create_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
						AND co.pay_status = '1'
						AND co.pay_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
						AND co.pay_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
					)
				) xy_gm_count,
				sum(
					(
						SELECT
							count(1)
						FROM
							bu_combine_order co,
							bu_member_info m
						WHERE
							co.del_flag = '0'
						AND m.del_flag = '0'
						AND co.member_id = m.id
						AND m.id = A.member_id
						AND m.create_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
						AND m.create_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
						AND co.pay_status = '1'
						AND co.order_type IN ('1', '2')
						AND co.pay_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
						AND co.pay_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
					)
				) xy_dd_count,
				sum(
					(
						SELECT
							sum(od.commission_amount)
						FROM
							bu_combine_order co,
							bu_sub_order so,
							bu_order_dtl od,
							bu_member_info m
						WHERE
							co.del_flag = '0'
						AND so.del_flag = '0'
						AND od.del_flag = '0'
						AND m.del_flag = '0'
						AND so.combine_order_id = co.id
						AND od.sub_order_id = so.id
						AND co.member_id = m.id
						AND m.id = A.member_id
						AND m.create_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
						AND m.create_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
						AND co.pay_status = '1'
						AND co.pay_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
						AND co.pay_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
					)
				) xy_yg_commission_amount_sum
			FROM
				(
					SELECT 
						a.member_id
					FROM
						bu_cut_price_order a
					WHERE
						a.del_flag = '0'
					AND a.activity_type = #{type, jdbcType=VARCHAR}
					AND a.create_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
					AND a.create_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
					GROUP BY a.member_id
				) A
			UNION ALL
				SELECT
					NULL fq_count,
					NULL new_member_count,
					(
						SELECT
							count(1)
						FROM
							bu_cut_price_order cpo
						WHERE
							cpo.id = c.id
						AND cpo. STATUS = '4'
					) combine_order_count,
					(
						SELECT
							sum(cpo.sale_price)
						FROM
							bu_cut_price_order cpo
						WHERE
							cpo.id = c.id
						AND cpo.status = '4'
					) sale_price_sum,
					(
						SELECT
							count(1)
						FROM
							bu_cut_price_order cpo
						WHERE
							cpo.id = c.id
						AND cpo.audit_status = '0'
					) ws_count,
					(
						SELECT
							count(1)
						FROM
							bu_cut_price_order cpo
						WHERE
							cpo.id = c.id
						AND cpo.audit_status = '1'
					) tg_count,
					(
						SELECT
							count(1)
						FROM
							bu_cut_price_order cpo
						WHERE
							cpo.id = c.id
						AND cpo.audit_status = '2'
					) sb_count,
					(
						SELECT
							sum(od.settle_amount)
						FROM
							bu_cut_price_order cpo,
							bu_sub_order so,
							bu_order_dtl od
						WHERE
							cpo.del_flag = '0'
						AND so.del_flag = '0'
						AND od.del_flag = '0'
						AND so.combine_order_id = cpo.combine_order_id
						AND od.sub_order_id = so.id
						AND cpo. STATUS = '4'
						AND cpo.id = c.id
					) xd_settle_amount_sum,
					(
						SELECT
							sum(
								cpo.sale_price - (
									cpo.sale_price * mpb.pop_commission_rate
								)
							)
						FROM
							bu_cut_price_order cpo,
							bu_product p,
							bu_mcht_product_brand mpb
						WHERE
							cpo.del_flag = '0'
						AND p.del_flag = '0'
						AND mpb.del_flag = '0'
						AND cpo.product_id = p.id
						AND mpb.mcht_id = p.mcht_id
						AND mpb.product_brand_id = p.brand_id
						AND cpo.audit_status = '0'
						AND cpo.id = c.id
						LIMIT 1
					) wsh_settle_amount_sum,
					NULL gm_count,
					NULL dd_count,
					NULL yg_commission_amount_sum,
					NULL xy_gm_count,
					NULL xy_dd_count,
					NULL xy_yg_commission_amount_sum
				FROM
					bu_cut_price_order c
				WHERE
					c.del_flag = '0'
				AND c. STATUS IN ('2', '4')
				AND c.activity_type = #{type, jdbcType=VARCHAR}
				AND c.create_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
				AND c.create_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
		) B;

  </select>
  
  <!-- 批量修改 -->
  <update id="updateCutPriceOrderListSelective" parameterType="java.util.List" >
    <foreach collection="list" item="record" index="index" open="" close="" separator=";" >
	    update bu_cut_price_order t
	    <set >
	      <if test="record.id != null" >
	        id = #{record.id,jdbcType=INTEGER},
	      </if>
	      <if test="record.orderCode != null" >
	        order_code = #{record.orderCode,jdbcType=VARCHAR},
	      </if>
	      <if test="record.singleProductActivityId != null" >
	        single_product_activity_id = #{record.singleProductActivityId,jdbcType=INTEGER},
	      </if>
	      <if test="record.activityType != null" >
	        activity_type = #{record.activityType,jdbcType=CHAR},
	      </if>
	      <if test="record.memberId != null" >
	        member_id = #{record.memberId,jdbcType=INTEGER},
	      </if>
	      <if test="record.productId != null" >
	        product_id = #{record.productId,jdbcType=INTEGER},
	      </if>
	      <if test="record.productItemId != null" >
	        product_item_id = #{record.productItemId,jdbcType=INTEGER},
	      </if>
	      <if test="record.skuPic != null" >
	        sku_pic = #{record.skuPic,jdbcType=VARCHAR},
	      </if>
	      <if test="record.productName != null" >
	        product_name = #{record.productName,jdbcType=VARCHAR},
	      </if>
	      <if test="record.artNo != null" >
	        art_no = #{record.artNo,jdbcType=VARCHAR},
	      </if>
	      <if test="record.brandName != null" >
	        brand_name = #{record.brandName,jdbcType=VARCHAR},
	      </if>
	      <if test="record.productPropDesc != null" >
	        product_prop_desc = #{record.productPropDesc,jdbcType=VARCHAR},
	      </if>
	      <if test="record.quantity != null" >
	        quantity = #{record.quantity,jdbcType=INTEGER},
	      </if>
	      <if test="record.tagPrice != null" >
	        tag_price = #{record.tagPrice,jdbcType=DECIMAL},
	      </if>
	      <if test="record.salePrice != null" >
	        sale_price = #{record.salePrice,jdbcType=DECIMAL},
	      </if>
	      <if test="record.auditStatus != null" >
	        audit_status = #{record.auditStatus,jdbcType=CHAR},
	      </if>
	      <if test="record.auditRemarks != null" >
	        audit_remarks = #{record.auditRemarks,jdbcType=VARCHAR},
	      </if>
	      <if test="record.status != null" >
	        status = #{record.status,jdbcType=CHAR},
	      </if>
	      <if test="record.canOrder != null" >
	        can_order = #{record.canOrder,jdbcType=CHAR},
	      </if>
	      <if test="record.combineOrderId != null" >
	        combine_order_id = #{record.combineOrderId,jdbcType=INTEGER},
	      </if>
	      <if test="record.payAmount != null" >
	        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
	      </if>
	      <if test="record.memberNick != null" >
	        member_nick = #{record.memberNick,jdbcType=VARCHAR},
	      </if>
	      <if test="record.addressId != null" >
	        address_id = #{record.addressId,jdbcType=INTEGER},
	      </if>
	      <if test="record.receiverName != null" >
	        receiver_name = #{record.receiverName,jdbcType=VARCHAR},
	      </if>
	      <if test="record.receiverPhone != null" >
	        receiver_phone = #{record.receiverPhone,jdbcType=VARCHAR},
	      </if>
	      <if test="record.receiverAddress != null" >
	        receiver_address = #{record.receiverAddress,jdbcType=VARCHAR},
	      </if>
	      <if test="record.sourceClient != null" >
	        source_client = #{record.sourceClient,jdbcType=VARCHAR},
	      </if>
	      <if test="record.createBy != null" >
	        create_by = #{record.createBy,jdbcType=INTEGER},
	      </if>
	      <if test="record.createDate != null" >
	        create_date = #{record.createDate,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.updateBy != null" >
	        update_by = #{record.updateBy,jdbcType=INTEGER},
	      </if>
	      <if test="record.updateDate != null" >
	        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
	      </if>
	      <if test="record.remarks != null" >
	        remarks = #{record.remarks,jdbcType=VARCHAR},
	      </if>
	      <if test="record.delFlag != null" >
	        del_flag = #{record.delFlag,jdbcType=CHAR},
	      </if>
	  	</set>
	    where id = #{record.id,jdbcType=INTEGER}
	    	AND t.status = '2'
	    	AND t.audit_status != '1'
	    	AND t.del_flag = '0'
    </foreach>
  </update>
  
  <!-- 助力减价数据分析 -->
  <select id="cutPriceOrderAssistStatisticsList" resultType="java.util.Map" parameterType="java.util.Map" >
  	SELECT
		DATE_FORMAT(t.create_date, #{dateFormat}) create_date,
		count(
			(
				SELECT DISTINCT
					cpo.member_id
				FROM
					bu_cut_price_order cpo
				WHERE
					cpo.del_flag = '0'
				AND cpo.id = t.id
			)
		) member_id_count,
		sum(
			(
				SELECT
					count(1)
				FROM
					bu_cut_price_order cpo
				WHERE
					cpo.del_flag = '0'
				AND cpo.combine_order_id IS NOT NULL
				AND cpo.status = '4'
				AND cpo.id = t.id
			)
		) cut_price_order_success_sum,
		sum(
			(
				SELECT
					count(1)
				FROM
					bu_cut_price_order cpo,
					bu_combine_order c
				WHERE
					cpo.del_flag = '0'
				AND c.del_flag = '0'
				AND cpo.combine_order_id = c.id
				AND c.`status` = '1'
				AND cpo.id = t.id
			)
		) combine_order_success_sum,
		ifnull(
			sum(
				(
					SELECT
						c.total_pay_amount
					FROM
						bu_cut_price_order cpo,
						bu_combine_order c
					WHERE
						cpo.del_flag = '0'
					AND c.del_flag = '0'
					AND cpo.combine_order_id = c.id
					AND c.`status` = '1'
					AND cpo.id = t.id
				)
			), 
			0
		) total_pay_amount_sum,
		ifnull(
			sum(
				(
					SELECT
						cast(
							sum(
								d.pop_commission_rate * d.pay_amount
							) AS DECIMAL (9, 2)
						)
					FROM
						bu_cut_price_order cpo,
						bu_combine_order c,
						bu_sub_order o,
						bu_order_dtl d
					WHERE
						cpo.del_flag = '0'
					AND c.del_flag = '0'
					AND o.del_flag = '0'
					AND d.del_flag = '0'
					AND cpo.combine_order_id = c.id
					AND c.`status` = '1'
					AND c.id = o.combine_order_id
					AND o.id = d.sub_order_id
					AND cpo.id = t.id
				)
			), 
			0
		) pop_rate_amount_sum,
		sum(
			(
				SELECT
					count(DISTINCT cpod.cut_price_order_id)
				FROM
					bu_cut_price_order_dtl cpod
				WHERE
					cpod.del_flag = '0'
				AND cpod.cut_price_order_id = t.id
				AND cpod.status = '1'
				AND cpod.is_new_member = '1'
			)
		) cut_price_order_dtl_sum,
		sum(
			(
				SELECT
					count(1)
				FROM
					bu_cut_price_order_dtl cpod
				WHERE
					cpod.del_flag = '0'
				AND cpod.cut_price_order_id = t.id
				AND cpod.is_new_member = '1'
			)
		) cut_new_member_sum
	FROM
		bu_cut_price_order t
	WHERE
		t.del_flag = '0'
	AND t.activity_type = #{type}
	<if test="productCode != null" >
		AND EXISTS (
			SELECT
				p.id
			FROM
				bu_product p
			WHERE
				p.del_flag = '0'
			AND p.id = t.product_id
			AND p. CODE = #{productCode}
		)
    </if>
	AND DATE_FORMAT(t.create_date, #{dateFormat}) BETWEEN #{beginDate}
	AND #{endDate}
	GROUP BY
		DATE_FORMAT(t.create_date, #{dateFormat})
  </select>
  <select id="getCutLinkClickLogMemberCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select
        count(distinct t.member_id)
    	FROM bu_cut_link_click_log t
        LEFT JOIN  bu_cut_price_order_dtl cpod
        ON t.member_id = cpod.member_id
        WHERE
	    t.del_flag = '0'
        AND t.share_link_type = '1'
        AND cpod.is_new_member = '1'
    	and DATE_FORMAT(t.create_date, #{dateFormat}) = #{createDate }
  </select>
  
  
  <!-- 邀请免费拿数据统计（STORY#1328优化） -->
  <select id="cutPriceOrderNewStatisticsList" resultType="java.util.Map" parameterType="java.util.Map" >
  	SELECT
		SUM(A.count_member) count_member, <!-- 发起人数 -->
		SUM(A.sum_cut_price_order_dtl) sum_cut_price_order_dtl, <!-- 被邀请人数 -->
		SUM(A.sum_cut_price_order_dtl_status) sum_cut_price_order_dtl_status, <!-- 已下载APP人数 -->
		SUM(A.sum_combine_order_member) sum_combine_order_member, <!-- 被邀请人下单人数 -->
		CONCAT(ROUND(SUM(A.sum_cut_price_order_dtl_status) / SUM(A.sum_cut_price_order_dtl) * 100, 2), '%') download_rate, <!-- 下载率 -->
		CONCAT(ROUND(SUM(A.sum_combine_order_member) / SUM(A.sum_cut_price_order_dtl) * 100, 2), '%') buy_rate, <!-- 购买率 -->
		SUM(A.count_cut_price_order) count_cut_price_order, <!-- 发起享免单数 -->
		SUM(A.count_cut_price_order_audit_status) count_cut_price_order_audit_status, <!-- 审核通过的免单数 -->
		SUM(A.sum_total_platform_preferential) sum_total_platform_preferential, <!-- 平台支出 -->
		CONCAT(ROUND(SUM(A.count_cut_price_order_audit_status) / SUM(A.count_cut_price_order) * 100, 2), '%') success_rate, <!-- 成功率 -->
		SUM(A.sum_combine_order) sum_combine_order, <!-- 被邀请人下单订单数 -->
		SUM(A.sum_total_pay_amount) sum_total_pay_amount, <!-- 被邀请人消费金额 -->
		SUM(A.sum_commission_amount) sum_commission_amount, <!-- 平台收益 -->
		CONCAT(ROUND(SUM(A.sum_commission_amount) / SUM(A.sum_total_platform_preferential) * 100, 2), '%') expense_rate <!-- 消费率 -->
	FROM
		(
			SELECT
				count(DISTINCT cpo.member_id) count_member, <!-- 发起人数 -->
				0 sum_cut_price_order_dtl, <!-- 被邀请人数 -->
				0 sum_cut_price_order_dtl_status, <!-- 已下载APP人数 -->
				0 sum_combine_order_member, <!-- 被邀请人下单人数 -->
				0 count_cut_price_order, <!-- 发起享免单数 -->
				0 count_cut_price_order_audit_status, <!-- 审核通过的免单数 -->
				0 sum_total_platform_preferential, <!-- 平台支出 -->
				0 sum_combine_order, <!-- 被邀请人下单订单数 -->
				0 sum_total_pay_amount, <!-- 被邀请人消费金额 -->
				0 sum_commission_amount <!-- 平台收益 -->
			FROM
				bu_cut_price_order cpo
			WHERE
				cpo.del_flag = '0'
			AND cpo.activity_type = #{type, jdbcType=VARCHAR}
			AND cpo.create_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
			AND cpo.create_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
			UNION ALL
			SELECT
				0 count_member,
				0 sum_cut_price_order_dtl,
				0 sum_cut_price_order_dtl_status,
				0 sum_combine_order_member,
				0 count_cut_price_order,
				count(1) count_cut_price_order_audit_status,
				0 sum_total_platform_preferential,
				0 sum_combine_order,
				0 sum_total_pay_amount,
				0 sum_commission_amount
			FROM
				bu_cut_price_order cpo
			WHERE
				cpo.del_flag = '0'
			AND cpo.activity_type = #{type, jdbcType=VARCHAR}
			AND cpo.audit_status = '1'
			AND cpo.create_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
			AND cpo.create_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
			UNION ALL
			SELECT
				0 count_member,
				sum(
					(
						SELECT
							count(1)
						FROM
							bu_cut_price_order_dtl cpod
						WHERE
							cpod.del_flag = '0'
						AND cpod.cut_price_order_id = t.id
					)
				) sum_cut_price_order_dtl,
				sum(
					(
						SELECT
							count(1)
						FROM
							bu_cut_price_order_dtl cpod
						WHERE
							cpod.del_flag = '0'
						AND cpod. STATUS = '1'
						AND cpod.cut_price_order_id = t.id
					)
				) sum_cut_price_order_dtl_status,
				sum(
					(
						SELECT
							count(DISTINCT cpod.member_id)
						FROM
							bu_combine_order co,
							bu_cut_price_order_dtl cpod
						WHERE
							co.del_flag = '0'
						AND co. STATUS = '1'
						AND co.member_id = cpod.member_id
						AND cpod.del_flag = '0'
						AND cpod.cut_price_order_id = t.id
					)
				) sum_combine_order_member,
				count(1) count_cut_price_order,
				0 count_cut_price_order_audit_status,
				sum(
					(
						SELECT
							sum(
								co.total_platform_preferential
							)
						FROM
							bu_combine_order co,
							bu_cut_price_order cpo
						WHERE
							co.del_flag = '0'
						AND co. STATUS = '1'
						AND co.id = cpo.combine_order_id
						AND cpo.del_flag = '0'
						AND cpo. STATUS = '4'
						AND cpo.audit_status = '1'
						AND cpo.id = t.id
					)
				) sum_total_platform_preferential,
				sum(
					(
						SELECT
							count(1)
						FROM
							bu_combine_order co,
							bu_cut_price_order_dtl cpod
						WHERE
							co.del_flag = '0'
						AND co. STATUS = '1'
						AND co.member_id = cpod.member_id
						AND cpod.del_flag = '0'
						AND cpod.cut_price_order_id = t.id
					)
				) sum_combine_order,
				sum(
					(
						SELECT
							sum(co.total_pay_amount)
						FROM
							bu_combine_order co,
							bu_cut_price_order_dtl cpod
						WHERE
							co.del_flag = '0'
						AND co. STATUS = '1'
						AND co.member_id = cpod.member_id
						AND cpod.del_flag = '0'
						AND cpod.cut_price_order_id = t.id
					)
				) sum_total_pay_amount,
				sum(
					(
						SELECT
							sum(od.commission_amount)
						FROM
							bu_combine_order co,
							bu_sub_order so,
							bu_order_dtl od,
							bu_cut_price_order_dtl cpod
						WHERE
							co.del_flag = '0'
						AND co. STATUS = '1'
						AND co.id = so.combine_order_id
						AND so.id = od.sub_order_id
						AND od.product_status != '2'
						AND od.product_status != '3'
						AND co.member_id = cpod.member_id
						AND cpod.del_flag = '0'
						AND cpod.cut_price_order_id = t.id
					)
				) sum_commission_amount
			FROM
				bu_cut_price_order t
			WHERE
				t.del_flag = '0'
			AND t.activity_type = #{type, jdbcType=VARCHAR}
			AND t.create_date <![CDATA[ >= ]]> #{beginDate, jdbcType=VARCHAR}
			AND t.create_date <![CDATA[ <= ]]> #{endDate, jdbcType=VARCHAR}
	) A
  </select>
  
  
</mapper>
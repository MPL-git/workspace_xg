<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.MchtMonthTradeMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.MchtMonthTrade" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="trade_month" property="tradeMonth" jdbcType="VARCHAR" />
    <result column="mcht_id" property="mchtId" jdbcType="INTEGER" />
    <result column="begin_unpay" property="beginUnpay" jdbcType="DECIMAL" />
    <result column="current_month_settle_amount" property="currentMonthSettleAmount" jdbcType="DECIMAL" />
    <result column="current_deposit_amount" property="currentDepositAmount" jdbcType="DECIMAL" />
    <result column="current_pay_amount" property="currentPayAmount" jdbcType="DECIMAL" />
    <result column="violate_need_deduct" property="violateNeedDeduct" jdbcType="DECIMAL" />
    <result column="deposit_dtl" property="depositDtl" jdbcType="DECIMAL" />
    <result column="discount" property="discount" jdbcType="DECIMAL" />
    <result column="end_unpay" property="endUnpay" jdbcType="DECIMAL" />
    <result column="total_order_pay_amount" property="totalOrderPayAmount" jdbcType="DECIMAL" />
    <result column="collect_deposit_amount" property="collectDepositAmount" jdbcType="DECIMAL" />
    <result column="current_change_amount" property="currentChangeAmount" jdbcType="DECIMAL" />
    <result column="deposit_balance" property="depositBalance" jdbcType="DECIMAL" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, trade_month, mcht_id, begin_unpay, current_month_settle_amount, current_deposit_amount, 
    current_pay_amount, violate_need_deduct, deposit_dtl, discount, end_unpay, total_order_pay_amount, 
    collect_deposit_amount, current_change_amount, deposit_balance, create_by, create_date, 
    update_by, update_date, remarks, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MchtMonthTradeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_mcht_month_trade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_mcht_month_trade
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bu_mcht_month_trade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jf.entity.MchtMonthTradeExample" >
    delete from bu_mcht_month_trade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.entity.MchtMonthTrade" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_mcht_month_trade (trade_month, mcht_id, begin_unpay, 
      current_month_settle_amount, current_deposit_amount, 
      current_pay_amount, violate_need_deduct, deposit_dtl, 
      discount, end_unpay, total_order_pay_amount, 
      collect_deposit_amount, current_change_amount, 
      deposit_balance, create_by, create_date, 
      update_by, update_date, remarks, 
      del_flag)
    values (#{tradeMonth,jdbcType=VARCHAR}, #{mchtId,jdbcType=INTEGER}, #{beginUnpay,jdbcType=DECIMAL}, 
      #{currentMonthSettleAmount,jdbcType=DECIMAL}, #{currentDepositAmount,jdbcType=DECIMAL}, 
      #{currentPayAmount,jdbcType=DECIMAL}, #{violateNeedDeduct,jdbcType=DECIMAL}, #{depositDtl,jdbcType=DECIMAL}, 
      #{discount,jdbcType=DECIMAL}, #{endUnpay,jdbcType=DECIMAL}, #{totalOrderPayAmount,jdbcType=DECIMAL}, 
      #{collectDepositAmount,jdbcType=DECIMAL}, #{currentChangeAmount,jdbcType=DECIMAL}, 
      #{depositBalance,jdbcType=DECIMAL}, #{createBy,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jf.entity.MchtMonthTrade" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_mcht_month_trade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tradeMonth != null" >
        trade_month,
      </if>
      <if test="mchtId != null" >
        mcht_id,
      </if>
      <if test="beginUnpay != null" >
        begin_unpay,
      </if>
      <if test="currentMonthSettleAmount != null" >
        current_month_settle_amount,
      </if>
      <if test="currentDepositAmount != null" >
        current_deposit_amount,
      </if>
      <if test="currentPayAmount != null" >
        current_pay_amount,
      </if>
      <if test="violateNeedDeduct != null" >
        violate_need_deduct,
      </if>
      <if test="depositDtl != null" >
        deposit_dtl,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="endUnpay != null" >
        end_unpay,
      </if>
      <if test="totalOrderPayAmount != null" >
        total_order_pay_amount,
      </if>
      <if test="collectDepositAmount != null" >
        collect_deposit_amount,
      </if>
      <if test="currentChangeAmount != null" >
        current_change_amount,
      </if>
      <if test="depositBalance != null" >
        deposit_balance,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tradeMonth != null" >
        #{tradeMonth,jdbcType=VARCHAR},
      </if>
      <if test="mchtId != null" >
        #{mchtId,jdbcType=INTEGER},
      </if>
      <if test="beginUnpay != null" >
        #{beginUnpay,jdbcType=DECIMAL},
      </if>
      <if test="currentMonthSettleAmount != null" >
        #{currentMonthSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="currentDepositAmount != null" >
        #{currentDepositAmount,jdbcType=DECIMAL},
      </if>
      <if test="currentPayAmount != null" >
        #{currentPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="violateNeedDeduct != null" >
        #{violateNeedDeduct,jdbcType=DECIMAL},
      </if>
      <if test="depositDtl != null" >
        #{depositDtl,jdbcType=DECIMAL},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="endUnpay != null" >
        #{endUnpay,jdbcType=DECIMAL},
      </if>
      <if test="totalOrderPayAmount != null" >
        #{totalOrderPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="collectDepositAmount != null" >
        #{collectDepositAmount,jdbcType=DECIMAL},
      </if>
      <if test="currentChangeAmount != null" >
        #{currentChangeAmount,jdbcType=DECIMAL},
      </if>
      <if test="depositBalance != null" >
        #{depositBalance,jdbcType=DECIMAL},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.entity.MchtMonthTradeExample" resultType="java.lang.Integer" >
    select count(*) from bu_mcht_month_trade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bu_mcht_month_trade
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tradeMonth != null" >
        trade_month = #{record.tradeMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.mchtId != null" >
        mcht_id = #{record.mchtId,jdbcType=INTEGER},
      </if>
      <if test="record.beginUnpay != null" >
        begin_unpay = #{record.beginUnpay,jdbcType=DECIMAL},
      </if>
      <if test="record.currentMonthSettleAmount != null" >
        current_month_settle_amount = #{record.currentMonthSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.currentDepositAmount != null" >
        current_deposit_amount = #{record.currentDepositAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.currentPayAmount != null" >
        current_pay_amount = #{record.currentPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.violateNeedDeduct != null" >
        violate_need_deduct = #{record.violateNeedDeduct,jdbcType=DECIMAL},
      </if>
      <if test="record.depositDtl != null" >
        deposit_dtl = #{record.depositDtl,jdbcType=DECIMAL},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=DECIMAL},
      </if>
      <if test="record.endUnpay != null" >
        end_unpay = #{record.endUnpay,jdbcType=DECIMAL},
      </if>
      <if test="record.totalOrderPayAmount != null" >
        total_order_pay_amount = #{record.totalOrderPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.collectDepositAmount != null" >
        collect_deposit_amount = #{record.collectDepositAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.currentChangeAmount != null" >
        current_change_amount = #{record.currentChangeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.depositBalance != null" >
        deposit_balance = #{record.depositBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bu_mcht_month_trade
    set id = #{record.id,jdbcType=INTEGER},
      trade_month = #{record.tradeMonth,jdbcType=VARCHAR},
      mcht_id = #{record.mchtId,jdbcType=INTEGER},
      begin_unpay = #{record.beginUnpay,jdbcType=DECIMAL},
      current_month_settle_amount = #{record.currentMonthSettleAmount,jdbcType=DECIMAL},
      current_deposit_amount = #{record.currentDepositAmount,jdbcType=DECIMAL},
      current_pay_amount = #{record.currentPayAmount,jdbcType=DECIMAL},
      violate_need_deduct = #{record.violateNeedDeduct,jdbcType=DECIMAL},
      deposit_dtl = #{record.depositDtl,jdbcType=DECIMAL},
      discount = #{record.discount,jdbcType=DECIMAL},
      end_unpay = #{record.endUnpay,jdbcType=DECIMAL},
      total_order_pay_amount = #{record.totalOrderPayAmount,jdbcType=DECIMAL},
      collect_deposit_amount = #{record.collectDepositAmount,jdbcType=DECIMAL},
      current_change_amount = #{record.currentChangeAmount,jdbcType=DECIMAL},
      deposit_balance = #{record.depositBalance,jdbcType=DECIMAL},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jf.entity.MchtMonthTrade" >
    update bu_mcht_month_trade
    <set >
      <if test="tradeMonth != null" >
        trade_month = #{tradeMonth,jdbcType=VARCHAR},
      </if>
      <if test="mchtId != null" >
        mcht_id = #{mchtId,jdbcType=INTEGER},
      </if>
      <if test="beginUnpay != null" >
        begin_unpay = #{beginUnpay,jdbcType=DECIMAL},
      </if>
      <if test="currentMonthSettleAmount != null" >
        current_month_settle_amount = #{currentMonthSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="currentDepositAmount != null" >
        current_deposit_amount = #{currentDepositAmount,jdbcType=DECIMAL},
      </if>
      <if test="currentPayAmount != null" >
        current_pay_amount = #{currentPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="violateNeedDeduct != null" >
        violate_need_deduct = #{violateNeedDeduct,jdbcType=DECIMAL},
      </if>
      <if test="depositDtl != null" >
        deposit_dtl = #{depositDtl,jdbcType=DECIMAL},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="endUnpay != null" >
        end_unpay = #{endUnpay,jdbcType=DECIMAL},
      </if>
      <if test="totalOrderPayAmount != null" >
        total_order_pay_amount = #{totalOrderPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="collectDepositAmount != null" >
        collect_deposit_amount = #{collectDepositAmount,jdbcType=DECIMAL},
      </if>
      <if test="currentChangeAmount != null" >
        current_change_amount = #{currentChangeAmount,jdbcType=DECIMAL},
      </if>
      <if test="depositBalance != null" >
        deposit_balance = #{depositBalance,jdbcType=DECIMAL},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jf.entity.MchtMonthTrade" >
    update bu_mcht_month_trade
    set trade_month = #{tradeMonth,jdbcType=VARCHAR},
      mcht_id = #{mchtId,jdbcType=INTEGER},
      begin_unpay = #{beginUnpay,jdbcType=DECIMAL},
      current_month_settle_amount = #{currentMonthSettleAmount,jdbcType=DECIMAL},
      current_deposit_amount = #{currentDepositAmount,jdbcType=DECIMAL},
      current_pay_amount = #{currentPayAmount,jdbcType=DECIMAL},
      violate_need_deduct = #{violateNeedDeduct,jdbcType=DECIMAL},
      deposit_dtl = #{depositDtl,jdbcType=DECIMAL},
      discount = #{discount,jdbcType=DECIMAL},
      end_unpay = #{endUnpay,jdbcType=DECIMAL},
      total_order_pay_amount = #{totalOrderPayAmount,jdbcType=DECIMAL},
      collect_deposit_amount = #{collectDepositAmount,jdbcType=DECIMAL},
      current_change_amount = #{currentChangeAmount,jdbcType=DECIMAL},
      deposit_balance = #{depositBalance,jdbcType=DECIMAL},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.MchtSettleSituationMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.MchtSettleSituation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="settle_date" property="settleDate" jdbcType="VARCHAR" />
    <result column="mcht_id" property="mchtId" jdbcType="INTEGER" />
    <result column="begin_unpay" property="beginUnpay" jdbcType="DECIMAL" />
    <result column="product_num" property="productNum" jdbcType="INTEGER" />
    <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
    <result column="commission_amount" property="commissionAmount" jdbcType="DECIMAL" />
    <result column="settle_price_total" property="settlePriceTotal" jdbcType="DECIMAL" />
    <result column="mcht_preferential_total" property="mchtPreferentialTotal" jdbcType="DECIMAL" />
    <result column="settle_amount" property="settleAmount" jdbcType="DECIMAL" />
    <result column="refund_amount" property="refundAmount" jdbcType="DECIMAL" />
    <result column="need_pay_amount" property="needPayAmount" jdbcType="DECIMAL" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="unpay_amount" property="unpayAmount" jdbcType="DECIMAL" />
    <result column="end_unpay" property="endUnpay" jdbcType="DECIMAL" />
    <result column="deposit_total" property="depositTotal" jdbcType="DECIMAL" />
    <result column="deduction_deposit_total" property="deductionDepositTotal" jdbcType="DECIMAL" />
    <result column="product_amount" property="productAmount" jdbcType="DECIMAL" />
    <result column="platform_preferential" property="platformPreferential" jdbcType="DECIMAL" />
    <result column="integral_preferential" property="integralPreferential" jdbcType="DECIMAL" />
    <result column="return_product_num" property="returnProductNum" jdbcType="INTEGER" />
    <result column="return_product_amount" property="returnProductAmount" jdbcType="DECIMAL" />
    <result column="return_mcht_preferential" property="returnMchtPreferential" jdbcType="DECIMAL" />
    <result column="return_platform_preferential" property="returnPlatformPreferential" jdbcType="DECIMAL" />
    <result column="return_integral_preferential" property="returnIntegralPreferential" jdbcType="DECIMAL" />
    <result column="return_commission_amount" property="returnCommissionAmount" jdbcType="DECIMAL" />
    <result column="discount" property="discount" jdbcType="DECIMAL" />
    <result column="discount_remarks" property="discountRemarks" jdbcType="VARCHAR" />
    <result column="discount_end_unpay" property="discountEndUnpay" jdbcType="DECIMAL" />
    <result column="return_amount" property="returnAmount" jdbcType="DECIMAL" />
    <result column="return_order_amount" property="returnOrderAmount" jdbcType="DECIMAL" />
    <result column="current_month_settle_amount" property="currentMonthSettleAmount" jdbcType="DECIMAL" />
    <result column="across_month_settle_amount" property="acrossMonthSettleAmount" jdbcType="DECIMAL" />
    <result column="across_month_return_amount" property="acrossMonthReturnAmount" jdbcType="DECIMAL" />
    <result column="begin_settle_amout" property="beginSettleAmout" jdbcType="DECIMAL" />
    <result column="end_settle_amount" property="endSettleAmount" jdbcType="DECIMAL" />
    <result column="begin_not_out_account" property="beginNotOutAccount" jdbcType="DECIMAL" />
    <result column="end_not_out_account" property="endNotOutAccount" jdbcType="DECIMAL" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, settle_date, mcht_id, begin_unpay, product_num, order_amount, commission_amount, 
    settle_price_total, mcht_preferential_total, settle_amount, refund_amount, need_pay_amount, 
    pay_amount, unpay_amount, end_unpay, deposit_total, deduction_deposit_total, product_amount, 
    platform_preferential, integral_preferential, return_product_num, return_product_amount, 
    return_mcht_preferential, return_platform_preferential, return_integral_preferential, 
    return_commission_amount, discount, discount_remarks, discount_end_unpay, return_amount, 
    return_order_amount, current_month_settle_amount, across_month_settle_amount, across_month_return_amount, 
    begin_settle_amout, end_settle_amount, begin_not_out_account, end_not_out_account, 
    create_by, create_date, update_by, update_date, remarks, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MchtSettleSituationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_mcht_settle_situation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_mcht_settle_situation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bu_mcht_settle_situation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jf.entity.MchtSettleSituationExample" >
    delete from bu_mcht_settle_situation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jf.entity.MchtSettleSituation" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_mcht_settle_situation (settle_date, mcht_id, begin_unpay, 
      product_num, order_amount, commission_amount, 
      settle_price_total, mcht_preferential_total, 
      settle_amount, refund_amount, need_pay_amount, 
      pay_amount, unpay_amount, end_unpay, 
      deposit_total, deduction_deposit_total, product_amount, 
      platform_preferential, integral_preferential, 
      return_product_num, return_product_amount, 
      return_mcht_preferential, return_platform_preferential, 
      return_integral_preferential, return_commission_amount, 
      discount, discount_remarks, discount_end_unpay, 
      return_amount, return_order_amount, current_month_settle_amount, 
      across_month_settle_amount, across_month_return_amount, 
      begin_settle_amout, end_settle_amount, begin_not_out_account, 
      end_not_out_account, create_by, create_date, 
      update_by, update_date, remarks, 
      del_flag)
    values (#{settleDate,jdbcType=VARCHAR}, #{mchtId,jdbcType=INTEGER}, #{beginUnpay,jdbcType=DECIMAL}, 
      #{productNum,jdbcType=INTEGER}, #{orderAmount,jdbcType=DECIMAL}, #{commissionAmount,jdbcType=DECIMAL}, 
      #{settlePriceTotal,jdbcType=DECIMAL}, #{mchtPreferentialTotal,jdbcType=DECIMAL}, 
      #{settleAmount,jdbcType=DECIMAL}, #{refundAmount,jdbcType=DECIMAL}, #{needPayAmount,jdbcType=DECIMAL}, 
      #{payAmount,jdbcType=DECIMAL}, #{unpayAmount,jdbcType=DECIMAL}, #{endUnpay,jdbcType=DECIMAL}, 
      #{depositTotal,jdbcType=DECIMAL}, #{deductionDepositTotal,jdbcType=DECIMAL}, #{productAmount,jdbcType=DECIMAL}, 
      #{platformPreferential,jdbcType=DECIMAL}, #{integralPreferential,jdbcType=DECIMAL}, 
      #{returnProductNum,jdbcType=INTEGER}, #{returnProductAmount,jdbcType=DECIMAL}, 
      #{returnMchtPreferential,jdbcType=DECIMAL}, #{returnPlatformPreferential,jdbcType=DECIMAL}, 
      #{returnIntegralPreferential,jdbcType=DECIMAL}, #{returnCommissionAmount,jdbcType=DECIMAL}, 
      #{discount,jdbcType=DECIMAL}, #{discountRemarks,jdbcType=VARCHAR}, #{discountEndUnpay,jdbcType=DECIMAL}, 
      #{returnAmount,jdbcType=DECIMAL}, #{returnOrderAmount,jdbcType=DECIMAL}, #{currentMonthSettleAmount,jdbcType=DECIMAL}, 
      #{acrossMonthSettleAmount,jdbcType=DECIMAL}, #{acrossMonthReturnAmount,jdbcType=DECIMAL}, 
      #{beginSettleAmout,jdbcType=DECIMAL}, #{endSettleAmount,jdbcType=DECIMAL}, #{beginNotOutAccount,jdbcType=DECIMAL}, 
      #{endNotOutAccount,jdbcType=DECIMAL}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jf.entity.MchtSettleSituation" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
       SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bu_mcht_settle_situation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="settleDate != null" >
        settle_date,
      </if>
      <if test="mchtId != null" >
        mcht_id,
      </if>
      <if test="beginUnpay != null" >
        begin_unpay,
      </if>
      <if test="productNum != null" >
        product_num,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="commissionAmount != null" >
        commission_amount,
      </if>
      <if test="settlePriceTotal != null" >
        settle_price_total,
      </if>
      <if test="mchtPreferentialTotal != null" >
        mcht_preferential_total,
      </if>
      <if test="settleAmount != null" >
        settle_amount,
      </if>
      <if test="refundAmount != null" >
        refund_amount,
      </if>
      <if test="needPayAmount != null" >
        need_pay_amount,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="unpayAmount != null" >
        unpay_amount,
      </if>
      <if test="endUnpay != null" >
        end_unpay,
      </if>
      <if test="depositTotal != null" >
        deposit_total,
      </if>
      <if test="deductionDepositTotal != null" >
        deduction_deposit_total,
      </if>
      <if test="productAmount != null" >
        product_amount,
      </if>
      <if test="platformPreferential != null" >
        platform_preferential,
      </if>
      <if test="integralPreferential != null" >
        integral_preferential,
      </if>
      <if test="returnProductNum != null" >
        return_product_num,
      </if>
      <if test="returnProductAmount != null" >
        return_product_amount,
      </if>
      <if test="returnMchtPreferential != null" >
        return_mcht_preferential,
      </if>
      <if test="returnPlatformPreferential != null" >
        return_platform_preferential,
      </if>
      <if test="returnIntegralPreferential != null" >
        return_integral_preferential,
      </if>
      <if test="returnCommissionAmount != null" >
        return_commission_amount,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="discountRemarks != null" >
        discount_remarks,
      </if>
      <if test="discountEndUnpay != null" >
        discount_end_unpay,
      </if>
      <if test="returnAmount != null" >
        return_amount,
      </if>
      <if test="returnOrderAmount != null" >
        return_order_amount,
      </if>
      <if test="currentMonthSettleAmount != null" >
        current_month_settle_amount,
      </if>
      <if test="acrossMonthSettleAmount != null" >
        across_month_settle_amount,
      </if>
      <if test="acrossMonthReturnAmount != null" >
        across_month_return_amount,
      </if>
      <if test="beginSettleAmout != null" >
        begin_settle_amout,
      </if>
      <if test="endSettleAmount != null" >
        end_settle_amount,
      </if>
      <if test="beginNotOutAccount != null" >
        begin_not_out_account,
      </if>
      <if test="endNotOutAccount != null" >
        end_not_out_account,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="settleDate != null" >
        #{settleDate,jdbcType=VARCHAR},
      </if>
      <if test="mchtId != null" >
        #{mchtId,jdbcType=INTEGER},
      </if>
      <if test="beginUnpay != null" >
        #{beginUnpay,jdbcType=DECIMAL},
      </if>
      <if test="productNum != null" >
        #{productNum,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="commissionAmount != null" >
        #{commissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="settlePriceTotal != null" >
        #{settlePriceTotal,jdbcType=DECIMAL},
      </if>
      <if test="mchtPreferentialTotal != null" >
        #{mchtPreferentialTotal,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null" >
        #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null" >
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="needPayAmount != null" >
        #{needPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="unpayAmount != null" >
        #{unpayAmount,jdbcType=DECIMAL},
      </if>
      <if test="endUnpay != null" >
        #{endUnpay,jdbcType=DECIMAL},
      </if>
      <if test="depositTotal != null" >
        #{depositTotal,jdbcType=DECIMAL},
      </if>
      <if test="deductionDepositTotal != null" >
        #{deductionDepositTotal,jdbcType=DECIMAL},
      </if>
      <if test="productAmount != null" >
        #{productAmount,jdbcType=DECIMAL},
      </if>
      <if test="platformPreferential != null" >
        #{platformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="integralPreferential != null" >
        #{integralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="returnProductNum != null" >
        #{returnProductNum,jdbcType=INTEGER},
      </if>
      <if test="returnProductAmount != null" >
        #{returnProductAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnMchtPreferential != null" >
        #{returnMchtPreferential,jdbcType=DECIMAL},
      </if>
      <if test="returnPlatformPreferential != null" >
        #{returnPlatformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="returnIntegralPreferential != null" >
        #{returnIntegralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="returnCommissionAmount != null" >
        #{returnCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="discountRemarks != null" >
        #{discountRemarks,jdbcType=VARCHAR},
      </if>
      <if test="discountEndUnpay != null" >
        #{discountEndUnpay,jdbcType=DECIMAL},
      </if>
      <if test="returnAmount != null" >
        #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnOrderAmount != null" >
        #{returnOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="currentMonthSettleAmount != null" >
        #{currentMonthSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="acrossMonthSettleAmount != null" >
        #{acrossMonthSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="acrossMonthReturnAmount != null" >
        #{acrossMonthReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="beginSettleAmout != null" >
        #{beginSettleAmout,jdbcType=DECIMAL},
      </if>
      <if test="endSettleAmount != null" >
        #{endSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="beginNotOutAccount != null" >
        #{beginNotOutAccount,jdbcType=DECIMAL},
      </if>
      <if test="endNotOutAccount != null" >
        #{endNotOutAccount,jdbcType=DECIMAL},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jf.entity.MchtSettleSituationExample" resultType="java.lang.Integer" >
    select count(*) from bu_mcht_settle_situation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bu_mcht_settle_situation
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.settleDate != null" >
        settle_date = #{record.settleDate,jdbcType=VARCHAR},
      </if>
      <if test="record.mchtId != null" >
        mcht_id = #{record.mchtId,jdbcType=INTEGER},
      </if>
      <if test="record.beginUnpay != null" >
        begin_unpay = #{record.beginUnpay,jdbcType=DECIMAL},
      </if>
      <if test="record.productNum != null" >
        product_num = #{record.productNum,jdbcType=INTEGER},
      </if>
      <if test="record.orderAmount != null" >
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.commissionAmount != null" >
        commission_amount = #{record.commissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.settlePriceTotal != null" >
        settle_price_total = #{record.settlePriceTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.mchtPreferentialTotal != null" >
        mcht_preferential_total = #{record.mchtPreferentialTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.settleAmount != null" >
        settle_amount = #{record.settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundAmount != null" >
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.needPayAmount != null" >
        need_pay_amount = #{record.needPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.unpayAmount != null" >
        unpay_amount = #{record.unpayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.endUnpay != null" >
        end_unpay = #{record.endUnpay,jdbcType=DECIMAL},
      </if>
      <if test="record.depositTotal != null" >
        deposit_total = #{record.depositTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.deductionDepositTotal != null" >
        deduction_deposit_total = #{record.deductionDepositTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.productAmount != null" >
        product_amount = #{record.productAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.platformPreferential != null" >
        platform_preferential = #{record.platformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.integralPreferential != null" >
        integral_preferential = #{record.integralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.returnProductNum != null" >
        return_product_num = #{record.returnProductNum,jdbcType=INTEGER},
      </if>
      <if test="record.returnProductAmount != null" >
        return_product_amount = #{record.returnProductAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.returnMchtPreferential != null" >
        return_mcht_preferential = #{record.returnMchtPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.returnPlatformPreferential != null" >
        return_platform_preferential = #{record.returnPlatformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.returnIntegralPreferential != null" >
        return_integral_preferential = #{record.returnIntegralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="record.returnCommissionAmount != null" >
        return_commission_amount = #{record.returnCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=DECIMAL},
      </if>
      <if test="record.discountRemarks != null" >
        discount_remarks = #{record.discountRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.discountEndUnpay != null" >
        discount_end_unpay = #{record.discountEndUnpay,jdbcType=DECIMAL},
      </if>
      <if test="record.returnAmount != null" >
        return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.returnOrderAmount != null" >
        return_order_amount = #{record.returnOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.currentMonthSettleAmount != null" >
        current_month_settle_amount = #{record.currentMonthSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.acrossMonthSettleAmount != null" >
        across_month_settle_amount = #{record.acrossMonthSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.acrossMonthReturnAmount != null" >
        across_month_return_amount = #{record.acrossMonthReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.beginSettleAmout != null" >
        begin_settle_amout = #{record.beginSettleAmout,jdbcType=DECIMAL},
      </if>
      <if test="record.endSettleAmount != null" >
        end_settle_amount = #{record.endSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.beginNotOutAccount != null" >
        begin_not_out_account = #{record.beginNotOutAccount,jdbcType=DECIMAL},
      </if>
      <if test="record.endNotOutAccount != null" >
        end_not_out_account = #{record.endNotOutAccount,jdbcType=DECIMAL},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bu_mcht_settle_situation
    set id = #{record.id,jdbcType=INTEGER},
      settle_date = #{record.settleDate,jdbcType=VARCHAR},
      mcht_id = #{record.mchtId,jdbcType=INTEGER},
      begin_unpay = #{record.beginUnpay,jdbcType=DECIMAL},
      product_num = #{record.productNum,jdbcType=INTEGER},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      commission_amount = #{record.commissionAmount,jdbcType=DECIMAL},
      settle_price_total = #{record.settlePriceTotal,jdbcType=DECIMAL},
      mcht_preferential_total = #{record.mchtPreferentialTotal,jdbcType=DECIMAL},
      settle_amount = #{record.settleAmount,jdbcType=DECIMAL},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      need_pay_amount = #{record.needPayAmount,jdbcType=DECIMAL},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      unpay_amount = #{record.unpayAmount,jdbcType=DECIMAL},
      end_unpay = #{record.endUnpay,jdbcType=DECIMAL},
      deposit_total = #{record.depositTotal,jdbcType=DECIMAL},
      deduction_deposit_total = #{record.deductionDepositTotal,jdbcType=DECIMAL},
      product_amount = #{record.productAmount,jdbcType=DECIMAL},
      platform_preferential = #{record.platformPreferential,jdbcType=DECIMAL},
      integral_preferential = #{record.integralPreferential,jdbcType=DECIMAL},
      return_product_num = #{record.returnProductNum,jdbcType=INTEGER},
      return_product_amount = #{record.returnProductAmount,jdbcType=DECIMAL},
      return_mcht_preferential = #{record.returnMchtPreferential,jdbcType=DECIMAL},
      return_platform_preferential = #{record.returnPlatformPreferential,jdbcType=DECIMAL},
      return_integral_preferential = #{record.returnIntegralPreferential,jdbcType=DECIMAL},
      return_commission_amount = #{record.returnCommissionAmount,jdbcType=DECIMAL},
      discount = #{record.discount,jdbcType=DECIMAL},
      discount_remarks = #{record.discountRemarks,jdbcType=VARCHAR},
      discount_end_unpay = #{record.discountEndUnpay,jdbcType=DECIMAL},
      return_amount = #{record.returnAmount,jdbcType=DECIMAL},
      return_order_amount = #{record.returnOrderAmount,jdbcType=DECIMAL},
      current_month_settle_amount = #{record.currentMonthSettleAmount,jdbcType=DECIMAL},
      across_month_settle_amount = #{record.acrossMonthSettleAmount,jdbcType=DECIMAL},
      across_month_return_amount = #{record.acrossMonthReturnAmount,jdbcType=DECIMAL},
      begin_settle_amout = #{record.beginSettleAmout,jdbcType=DECIMAL},
      end_settle_amount = #{record.endSettleAmount,jdbcType=DECIMAL},
      begin_not_out_account = #{record.beginNotOutAccount,jdbcType=DECIMAL},
      end_not_out_account = #{record.endNotOutAccount,jdbcType=DECIMAL},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jf.entity.MchtSettleSituation" >
    update bu_mcht_settle_situation
    <set >
      <if test="settleDate != null" >
        settle_date = #{settleDate,jdbcType=VARCHAR},
      </if>
      <if test="mchtId != null" >
        mcht_id = #{mchtId,jdbcType=INTEGER},
      </if>
      <if test="beginUnpay != null" >
        begin_unpay = #{beginUnpay,jdbcType=DECIMAL},
      </if>
      <if test="productNum != null" >
        product_num = #{productNum,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="commissionAmount != null" >
        commission_amount = #{commissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="settlePriceTotal != null" >
        settle_price_total = #{settlePriceTotal,jdbcType=DECIMAL},
      </if>
      <if test="mchtPreferentialTotal != null" >
        mcht_preferential_total = #{mchtPreferentialTotal,jdbcType=DECIMAL},
      </if>
      <if test="settleAmount != null" >
        settle_amount = #{settleAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundAmount != null" >
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="needPayAmount != null" >
        need_pay_amount = #{needPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="unpayAmount != null" >
        unpay_amount = #{unpayAmount,jdbcType=DECIMAL},
      </if>
      <if test="endUnpay != null" >
        end_unpay = #{endUnpay,jdbcType=DECIMAL},
      </if>
      <if test="depositTotal != null" >
        deposit_total = #{depositTotal,jdbcType=DECIMAL},
      </if>
      <if test="deductionDepositTotal != null" >
        deduction_deposit_total = #{deductionDepositTotal,jdbcType=DECIMAL},
      </if>
      <if test="productAmount != null" >
        product_amount = #{productAmount,jdbcType=DECIMAL},
      </if>
      <if test="platformPreferential != null" >
        platform_preferential = #{platformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="integralPreferential != null" >
        integral_preferential = #{integralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="returnProductNum != null" >
        return_product_num = #{returnProductNum,jdbcType=INTEGER},
      </if>
      <if test="returnProductAmount != null" >
        return_product_amount = #{returnProductAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnMchtPreferential != null" >
        return_mcht_preferential = #{returnMchtPreferential,jdbcType=DECIMAL},
      </if>
      <if test="returnPlatformPreferential != null" >
        return_platform_preferential = #{returnPlatformPreferential,jdbcType=DECIMAL},
      </if>
      <if test="returnIntegralPreferential != null" >
        return_integral_preferential = #{returnIntegralPreferential,jdbcType=DECIMAL},
      </if>
      <if test="returnCommissionAmount != null" >
        return_commission_amount = #{returnCommissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="discountRemarks != null" >
        discount_remarks = #{discountRemarks,jdbcType=VARCHAR},
      </if>
      <if test="discountEndUnpay != null" >
        discount_end_unpay = #{discountEndUnpay,jdbcType=DECIMAL},
      </if>
      <if test="returnAmount != null" >
        return_amount = #{returnAmount,jdbcType=DECIMAL},
      </if>
      <if test="returnOrderAmount != null" >
        return_order_amount = #{returnOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="currentMonthSettleAmount != null" >
        current_month_settle_amount = #{currentMonthSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="acrossMonthSettleAmount != null" >
        across_month_settle_amount = #{acrossMonthSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="acrossMonthReturnAmount != null" >
        across_month_return_amount = #{acrossMonthReturnAmount,jdbcType=DECIMAL},
      </if>
      <if test="beginSettleAmout != null" >
        begin_settle_amout = #{beginSettleAmout,jdbcType=DECIMAL},
      </if>
      <if test="endSettleAmount != null" >
        end_settle_amount = #{endSettleAmount,jdbcType=DECIMAL},
      </if>
      <if test="beginNotOutAccount != null" >
        begin_not_out_account = #{beginNotOutAccount,jdbcType=DECIMAL},
      </if>
      <if test="endNotOutAccount != null" >
        end_not_out_account = #{endNotOutAccount,jdbcType=DECIMAL},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jf.entity.MchtSettleSituation" >
    update bu_mcht_settle_situation
    set settle_date = #{settleDate,jdbcType=VARCHAR},
      mcht_id = #{mchtId,jdbcType=INTEGER},
      begin_unpay = #{beginUnpay,jdbcType=DECIMAL},
      product_num = #{productNum,jdbcType=INTEGER},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      commission_amount = #{commissionAmount,jdbcType=DECIMAL},
      settle_price_total = #{settlePriceTotal,jdbcType=DECIMAL},
      mcht_preferential_total = #{mchtPreferentialTotal,jdbcType=DECIMAL},
      settle_amount = #{settleAmount,jdbcType=DECIMAL},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      need_pay_amount = #{needPayAmount,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      unpay_amount = #{unpayAmount,jdbcType=DECIMAL},
      end_unpay = #{endUnpay,jdbcType=DECIMAL},
      deposit_total = #{depositTotal,jdbcType=DECIMAL},
      deduction_deposit_total = #{deductionDepositTotal,jdbcType=DECIMAL},
      product_amount = #{productAmount,jdbcType=DECIMAL},
      platform_preferential = #{platformPreferential,jdbcType=DECIMAL},
      integral_preferential = #{integralPreferential,jdbcType=DECIMAL},
      return_product_num = #{returnProductNum,jdbcType=INTEGER},
      return_product_amount = #{returnProductAmount,jdbcType=DECIMAL},
      return_mcht_preferential = #{returnMchtPreferential,jdbcType=DECIMAL},
      return_platform_preferential = #{returnPlatformPreferential,jdbcType=DECIMAL},
      return_integral_preferential = #{returnIntegralPreferential,jdbcType=DECIMAL},
      return_commission_amount = #{returnCommissionAmount,jdbcType=DECIMAL},
      discount = #{discount,jdbcType=DECIMAL},
      discount_remarks = #{discountRemarks,jdbcType=VARCHAR},
      discount_end_unpay = #{discountEndUnpay,jdbcType=DECIMAL},
      return_amount = #{returnAmount,jdbcType=DECIMAL},
      return_order_amount = #{returnOrderAmount,jdbcType=DECIMAL},
      current_month_settle_amount = #{currentMonthSettleAmount,jdbcType=DECIMAL},
      across_month_settle_amount = #{acrossMonthSettleAmount,jdbcType=DECIMAL},
      across_month_return_amount = #{acrossMonthReturnAmount,jdbcType=DECIMAL},
      begin_settle_amout = #{beginSettleAmout,jdbcType=DECIMAL},
      end_settle_amount = #{endSettleAmount,jdbcType=DECIMAL},
      begin_not_out_account = #{beginNotOutAccount,jdbcType=DECIMAL},
      end_not_out_account = #{endNotOutAccount,jdbcType=DECIMAL},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
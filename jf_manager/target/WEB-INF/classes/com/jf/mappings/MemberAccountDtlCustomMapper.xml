<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.MemberAccountDtlCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.MemberAccountDtlCustom" extends="com.jf.dao.MemberAccountDtlMapper.BaseResultMap" >
    <result column="member_nick" property="memberNick" jdbcType="VARCHAR" />
    <result column="member_mobile" property="memberMobile" jdbcType="VARCHAR" />
    <result column="biz_type_desc" property="bizTypeDesc" jdbcType="VARCHAR" />
    
    <result column="tally_Modes" property="tallyModes" jdbcType="VARCHAR" />
    <result column="biz_types" property="bizTypes" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="nick" property="nick" jdbcType="VARCHAR" />
     <result column="new_member_id" property="newMemberId" jdbcType="INTEGER" />
    <result column="new_nick" property="newNick" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="sub_order_code" property="subOrderCode" jdbcType="VARCHAR" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="current_balance" property="currentBalance" jdbcType="DECIMAL" />
    <result column="sub_order_id" property="subOrderId" jdbcType="INTEGER" />
    
     <result column="drawBack_amount" property="drawBackAmount" jdbcType="DECIMAL" />
    <result column="each_day" property="eachDay" jdbcType="VARCHAR" />
    <result column="first" property="first" jdbcType="DECIMAL" />
    <result column="order_distribution" property="orderDistribution" jdbcType="DECIMAL" />
    <result column="invite_new_awards" property="inviteNewAwards" jdbcType="DECIMAL" />
    <result column="cash_withdrawals" property="cashWithdrawals" jdbcType="DECIMAL" />
    <result column="FIRST1" property="first1" jdbcType="DECIMAL" />
    <result column="END1" property="end1" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, acc_id, tally_mode, amount, freeze_amount, total_freeze, balance, biz_type, biz_id, 
    create_by, create_date, update_by, update_date, remarks, del_flag,
    (select mi.nick from bu_member_account ma, bu_member_info mi where ma.del_flag = '0' and mi.del_flag = '0' and ma.member_id = mi.id and ma.id = t.acc_id) member_nick, <!-- 昵称 -->
    (select mi.mobile from bu_member_account ma, bu_member_info mi where ma.del_flag = '0' and mi.del_flag = '0' and ma.member_id = mi.id and ma.id = t.acc_id) member_mobile, <!-- 会员手机号码 -->
  	FUN_GET_STATUS_DESC("BU_MEMBER_ACCOUNT_DTL","BIZ_TYPE", t.biz_type) biz_type_desc
  </sql>
  <select id="selectByCustomExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MemberAccountDtlCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_member_account_dtl t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByCustomPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_member_account_dtl t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByCustomExample" parameterType="com.jf.entity.MemberAccountDtlCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_member_account_dtl t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCustomExampleSelective" parameterType="map" >
    update bu_member_account_dtl t
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accId != null" >
        acc_id = #{record.accId,jdbcType=INTEGER},
      </if>
      <if test="record.tallyMode != null" >
        tally_mode = #{record.tallyMode,jdbcType=CHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.freezeAmount != null" >
        freeze_amount = #{record.freezeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalFreeze != null" >
        total_freeze = #{record.totalFreeze,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.bizType != null" >
        biz_type = #{record.bizType,jdbcType=CHAR},
      </if>
      <if test="record.bizId != null" >
        biz_id = #{record.bizId,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
   <select id="countByCustomExampleFenRun" parameterType="com.jf.entity.MemberAccountDtlCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_member_account_dtl a left join bu_member_account z on z.del_flag = '0' and a.acc_id = z.id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
   <sql id="Base_Column_List1" >
	IF(tally_mode = '1','收入','支出') as tally_modes,
	CASE when biz_type ='12' THEN '提现' when biz_type ='8' THEN '邀新奖励' ELSE '订单分润' END AS biz_types,
	(select member_id from bu_combine_order d where a.biz_id = d.id and d.del_flag='0' and a.biz_type='8') new_member_id,
	(select member_nick from bu_combine_order d where a.biz_id = d.id and d.del_flag='0' and a.biz_type='8') new_nick,
	(select member_id from bu_order_dtl b,bu_sub_order c,bu_combine_order d where a.biz_id = b.id and b.sub_order_id = c.id and c.combine_order_id = d.id and  b.del_flag='0' and a.biz_type='9') member_id,
	(select member_nick from bu_order_dtl b,bu_sub_order c,bu_combine_order d where a.biz_id = b.id and b.sub_order_id = c.id and c.combine_order_id = d.id and  b.del_flag='0' and a.biz_type='9') nick,
	(select product_id from bu_order_dtl e where a.biz_id = e.id and e.del_flag = '0' and a.biz_type='9') product_id,
	(select product_name from bu_order_dtl f where a.biz_id = f.id and f.del_flag = '0' and a.biz_type='9') product_name,
	(select sub_order_code from bu_sub_order g,bu_order_dtl h where a.biz_id = h.id and h.sub_order_id = g.id and g.del_flag = '0' and h.del_flag = '0' and a.biz_type='9') sub_order_code,
	(select g.id from bu_sub_order g,bu_order_dtl h where a.biz_id = h.id and h.sub_order_id = g.id and g.del_flag = '0' and h.del_flag = '0' and a.biz_type='9') sub_order_id,
	(select pay_amount from bu_order_dtl j where a.biz_id = j.id and j.del_flag = '0' and a.biz_type='9') pay_amount,
	a.amount as amount,
	a.balance as balance,
	a.create_date as create_date
  </sql>
  <select id="selectByCustomExampleFenRun" resultMap="BaseResultMap" parameterType="com.jf.entity.MemberAccountDtlCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List1" />
    from bu_member_account_dtl a left join bu_member_account z on z.del_flag = '0' and a.acc_id = z.id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  
  <select id="selectMemberAccountDtlCountEachDayList" parameterType="java.util.HashMap" resultMap="BaseResultMap" >
    SELECT (
		alls.order_distribution1 + alls.invite_new_awards1 + alls.bizType_amount1-alls.cash_withdrawals1
	) AS FIRST1,
	alls.*, (
		alls.order_distribution1 + alls.invite_new_awards1 + alls.bizType_amount1-alls.cash_withdrawals1+alls.order_distribution + alls.invite_new_awards + alls.bizType_amount - alls.cash_withdrawals
	) AS END1
    from(
    	<include refid="selectMemberAccountDtlCountEachDayListSql"/>
    )alls
	 <if test="MAX_NUM!=null and MAX_NUM!=''">
		LIMIT ${MIN_NUM},${MAX_NUM}
	 </if>
  </select>
  
  <sql id="selectMemberAccountDtlCountEachDayListSql">
		SELECT
			t.each_day,
			SUM(t.drawBack_amount) AS drawBack_amount,
			SUM(t.bizType_amount1) AS bizType_amount1,
			SUM(t.order_distribution1) AS order_distribution1,
			SUM(t.invite_new_awards1) AS invite_new_awards1,
			SUM(t.cash_withdrawals1) AS cash_withdrawals1,

			SUM(t.order_distribution) AS order_distribution,
			SUM(t.invite_new_awards) AS invite_new_awards,
			SUM(t.cash_withdrawals) AS cash_withdrawals,
			SUM(t.bizType_amount) AS bizType_amount
		FROM
			(
			SELECT
					tmp.each_day,

IFNULL(
						(
							SELECT
								SUM(b.amount)
							FROM
								bu_member_account_dtl b
							WHERE
							EXISTS (SELECT c.id FROM bu_order_dtl c where c.id = b.biz_id and c.product_status in('2','3') and c.product_status_date <![CDATA[ >= ]]> CONCAT(tmp.each_day, ' 00:00:00') and c.product_status_date <![CDATA[ <= ]]> CONCAT(tmp.each_day, ' 23:59:59') and c.del_flag = '0')
							AND b.biz_type = '9' and b.create_date <![CDATA[ > ]]> CONCAT(tmp.each_day, ' 00:00:00') and b.create_date <![CDATA[ < ]]> CONCAT(tmp.each_day, ' 23:59:59')
							AND b.del_flag = '0'
						),
						0
					) AS drawBack_amount,
					0 AS bizType_amount1,
					0 AS order_distribution1,
					0 AS invite_new_awards1,
				  0 AS cash_withdrawals1,
					0 AS bizType_amount,
					0 AS order_distribution,
					0 AS invite_new_awards,
					0 AS cash_withdrawals
				FROM
					(
						SELECT DISTINCT
							DATE_FORMAT(b.create_date, '%Y-%m-%d') each_day
						FROM
							bu_member_account_dtl b
						WHERE
							b.create_date <![CDATA[ >= ]]> #{createDateBegin}
						AND b.create_date <![CDATA[ <= ]]> #{createDateEnd}
						AND b.biz_type IN ('8', '9', '10', '12')
						AND b.del_flag = '0'
					) tmp
				UNION
				SELECT
					tmp.each_day,
					0 AS drawBack_amount,
					IFNULL(
						(
							SELECT
								SUM(b.amount)
							FROM
								bu_member_account_dtl b
							WHERE
								b.create_date <![CDATA[ < ]]> CONCAT(tmp.each_day, ' 00:00:00')
							AND b.biz_type = '8'
							AND b.del_flag = '0'
						),
						0
					) AS bizType_amount1,
					0 AS order_distribution1,
					0 AS invite_new_awards1,
				  0 AS cash_withdrawals1,
					0 AS bizType_amount,
					0 AS order_distribution,
					0 AS invite_new_awards,
					0 AS cash_withdrawals
				FROM
					(
						SELECT DISTINCT
							DATE_FORMAT(b.create_date, '%Y-%m-%d') each_day
						FROM
							bu_member_account_dtl b
						WHERE
							b.create_date <![CDATA[ >= ]]> #{createDateBegin}
						AND b.create_date <![CDATA[ <= ]]> #{createDateEnd}
						AND b.biz_type IN ('8', '9', '10', '12')
						AND b.del_flag = '0'
					) tmp
				
				UNION
					
				SELECT
					tmp.each_day,
					0 AS drawBack_amount,
					0 AS bizType_amount1,
					IFNULL(
						(
							SELECT
								SUM(e.distribution_amount)
							FROM
								bu_member_account_dtl b,bu_order_dtl c,bu_sub_order d,bu_combine_order e
							WHERE
							b.biz_id = c.id and c.sub_order_id = d.id and d.combine_order_id = e.id 
							AND e.status = '1'
							AND e.pay_date <![CDATA[ < ]]> CONCAT(tmp.each_day, ' 00:00:00')
							AND e.promotion_type = '1'
							AND b.biz_type = '9'
							AND b.del_flag = '0'
							AND c.del_flag = '0'
							AND d.del_flag = '0'
							AND e.del_flag = '0'
						),
						0
					) AS order_distribution1,
					0 AS invite_new_awards1,
					0 AS cash_withdrawals1,
					0 AS bizType_amount,
					0 AS order_distribution,
					0 AS invite_new_awards,
					0 AS cash_withdrawals
				FROM
					(
						SELECT DISTINCT
							DATE_FORMAT(b.create_date, '%Y-%m-%d') each_day
						FROM
							bu_member_account_dtl b
						WHERE
							b.create_date <![CDATA[ >= ]]> #{createDateBegin}
						AND b.create_date <![CDATA[ <= ]]> #{createDateEnd}
						AND b.biz_type IN ('8', '9', '10', '12')
						AND b.del_flag = '0'
					) tmp
				
			UNION
       
	SELECT
					tmp.each_day,
					0 AS drawBack_amount,
					0 AS bizType_amount1,
					0 AS order_distribution1,
					IFNULL(
						(
							SELECT
								SUM(b.amount)
							FROM
								bu_member_account_dtl b
							WHERE
								b.create_date <![CDATA[ < ]]> CONCAT(tmp.each_day, ' 00:00:00')
							AND b.biz_type = '10'
							AND b.del_flag = '0'
						),
						0
					)  AS invite_new_awards1,
					0 AS cash_withdrawals1,
					0 AS bizType_amount,
					0 AS order_distribution,
					0 AS invite_new_awards,
					0 AS cash_withdrawals
				FROM
					(
						SELECT DISTINCT
							DATE_FORMAT(b.create_date, '%Y-%m-%d') each_day
						FROM
							bu_member_account_dtl b
						WHERE
							b.create_date <![CDATA[ >= ]]> #{createDateBegin}
						AND b.create_date <![CDATA[ <= ]]> #{createDateEnd}
						AND b.biz_type IN ('8', '9', '10', '12')
						AND b.del_flag = '0'
					) tmp

			UNION

SELECT
					tmp.each_day,
					0 AS drawBack_amount,
					0 AS bizType_amount1,
					0 AS order_distribution1,
					0 AS invite_new_awards1,
					IFNULL(
						(
							SELECT
								SUM(b.amount)
							FROM
								bu_member_account_dtl b
							WHERE
								b.create_date <![CDATA[ < ]]> CONCAT(tmp.each_day, ' 00:00:00')
							AND b.biz_type = '12'
							AND b.del_flag = '0'
						),
						0
					) AS cash_withdrawals1,
					0 AS bizType_amount,
					0 AS order_distribution,
					0 AS invite_new_awards,
					0 AS cash_withdrawals
				FROM
					(
						SELECT DISTINCT
							DATE_FORMAT(b.create_date, '%Y-%m-%d') each_day
						FROM
							bu_member_account_dtl b
						WHERE
							b.create_date <![CDATA[ >= ]]> #{createDateBegin}
						AND b.create_date <![CDATA[ <= ]]> #{createDateEnd}
						AND b.biz_type IN ('8', '9', '10', '12')
						AND b.del_flag = '0'
					) tmp

				UNION
				
				SELECT
					tmp.each_day,
					0 AS drawBack_amount,
					0 AS bizType_amount1,
					0 AS order_distribution1,
					0 AS invite_new_awards1,
					0 AS cash_withdrawals1,
					0 AS bizType_amount,
					IFNULL(
						(
						SELECT
								SUM(e.distribution_amount)
							FROM
								bu_member_account_dtl b,bu_order_dtl c,bu_sub_order d,bu_combine_order e
							WHERE
							b.biz_id = c.id and c.sub_order_id = d.id and d.combine_order_id = e.id 
							AND e.status = '1'
							AND e.pay_date <![CDATA[ > ]]> CONCAT(tmp.each_day, ' 00:00:00') and e.pay_date <![CDATA[ < ]]> CONCAT(tmp.each_day, ' 23:59:59')
							AND e.promotion_type = '1'
							AND b.biz_type = '9'
							AND b.del_flag = '0'
							AND c.del_flag = '0'
							AND d.del_flag = '0'
							AND e.del_flag = '0'
						),
						0
					) AS order_distribution,
					0 AS invite_new_awards,
					0 AS cash_withdrawals
				FROM
					(
						SELECT DISTINCT
							DATE_FORMAT(b.create_date, '%Y-%m-%d') each_day
						FROM
							bu_member_account_dtl b
						WHERE
							b.create_date <![CDATA[ >= ]]> #{createDateBegin}
						AND b.create_date <![CDATA[ <= ]]> #{createDateEnd}
						AND b.biz_type IN ('8', '9', '10', '12')
						AND b.del_flag = '0'
					) tmp
				UNION
					SELECT
						tmp.each_day,
						0 AS drawBack_amount,
					0 AS bizType_amount1,
					0 AS order_distribution1,
					0 AS invite_new_awards1,
					0 AS cash_withdrawals1,
						0 AS bizType_amount,
						0 AS order_distribution,
						IFNULL(
							(
								SELECT
									SUM(b.amount)
								FROM
									bu_member_account_dtl b
								WHERE
									b.create_date <![CDATA[ > ]]> CONCAT(tmp.each_day, ' 00:00:00') and b.create_date <![CDATA[ < ]]> CONCAT(tmp.each_day, ' 23:59:59')
								AND b.biz_type = '10'
								AND b.del_flag = '0'
							),
							0
						) AS invite_new_awards,
						0 AS cash_withdrawals
					FROM
						(
							SELECT DISTINCT
								DATE_FORMAT(b.create_date, '%Y-%m-%d') each_day
							FROM
								bu_member_account_dtl b
							WHERE
							b.create_date <![CDATA[ >= ]]> #{createDateBegin}
						AND b.create_date <![CDATA[ <= ]]> #{createDateEnd}
							AND b.biz_type IN ('8', '9', '10', '12')
							AND b.del_flag = '0'
						) tmp
					UNION
						SELECT
							tmp.each_day,
							0 AS drawBack_amount,
					0 AS bizType_amount1,
					0 AS order_distribution1,
					0 AS invite_new_awards1,
				  0 AS cash_withdrawals1,
							0 AS bizType_amount,
							0 AS order_distribution,
							0 AS invite_new_awards,
							IFNULL(
								(
									SELECT
										SUM(b.amount)
									FROM
										bu_member_account_dtl b
									WHERE
										b.create_date <![CDATA[ > ]]> CONCAT(tmp.each_day, ' 00:00:00') and b.create_date <![CDATA[ < ]]> CONCAT(tmp.each_day, ' 23:59:59')
									AND b.biz_type = '12'
									AND b.del_flag = '0'
								),
								0
							) AS cash_withdrawals
						FROM
							(
								SELECT DISTINCT
									DATE_FORMAT(b.create_date, '%Y-%m-%d') each_day
								FROM
									bu_member_account_dtl b
								WHERE
							b.create_date <![CDATA[ >= ]]> #{createDateBegin}
						AND b.create_date <![CDATA[ <= ]]> #{createDateEnd}
								AND b.biz_type IN ('8', '9', '10', '12')
								AND b.del_flag = '0'
							) tmp
						UNION
							SELECT
								tmp.each_day,
								0 AS drawBack_amount,
					0 AS bizType_amount1,
					0 AS order_distribution1,
					0 AS invite_new_awards1,
				  0 AS cash_withdrawals1,
								IFNULL(
									(
										SELECT
											SUM(b.amount)
										FROM
											bu_member_account_dtl b
										WHERE
											b.create_date <![CDATA[ > ]]> CONCAT(tmp.each_day, ' 00:00:00') and b.create_date <![CDATA[ < ]]> CONCAT(tmp.each_day, ' 23:59:59')
										AND b.biz_type = '8'
										AND b.del_flag = '0'
									),
									0
								) AS bizType_amount,
								0 AS order_distribution,
								0 AS invite_new_awards,
								0 AS cash_withdrawals
							FROM
								(
									SELECT DISTINCT
										DATE_FORMAT(b.create_date, '%Y-%m-%d') each_day
									FROM
										bu_member_account_dtl b
									WHERE
							b.create_date <![CDATA[ >= ]]> #{createDateBegin}
						AND b.create_date <![CDATA[ <= ]]> #{createDateEnd}
									AND b.biz_type IN ('8', '9', '10', '12')
									AND b.del_flag = '0'
								) tmp
			) t
		GROUP BY
			t.each_day
  </sql>
</mapper>
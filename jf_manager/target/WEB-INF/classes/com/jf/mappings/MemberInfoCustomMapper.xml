<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.MemberInfoCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.MemberInfoCustom"  extends="com.jf.dao.MemberInfoMapper.BaseResultMap">
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="status_desc" property="statusDesc" jdbcType="VARCHAR" />
    <result column="sex_desc" property="sexDesc" jdbcType="VARCHAR" />
    <result column="spr_chnl_desc" property="sprChnlDesc" jdbcType="VARCHAR" />
    <result column="reg_client_desc" property="regClientDesc" jdbcType="VARCHAR" />
    <result column="province_name" property="provinceName" jdbcType="VARCHAR" />
    <result column="city_name" property="cityName" jdbcType="VARCHAR" />
    <result column="county_name" property="countyName" jdbcType="VARCHAR" />
    <result column="g_value" property="gValue" jdbcType="INTEGER" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="login_count" property="loginCount" jdbcType="INTEGER" />
    <result column="login_days" property="loginDays" jdbcType="INTEGER" />
    <result column="first_pay_time" property="firstPayTime" jdbcType="TIMESTAMP" />
    <result column="last_pay_time" property="lastPayTime" jdbcType="TIMESTAMP" />
    <result column="pay_order_count" property="payOrderCount" jdbcType="INTEGER" />
    <result column="pay_order_amount" property="payOrderAmount" jdbcType="DECIMAL" />
    <result column="pay_product_count" property="payProductCount" jdbcType="INTEGER" />
    <result column="return_order_count" property="returnOrderCount" jdbcType="INTEGER" />
    <result column="refund_order_count" property="refundOrderCount" jdbcType="INTEGER" />
    <result column="pay_days" property="payDays" jdbcType="INTEGER" />
    <result column="spreadname" property="spreadname" jdbcType="VARCHAR" />
    <result column="channel" property="channel" jdbcType="VARCHAR" />
    <result column="activityname" property="activityname" jdbcType="VARCHAR" />
    <result column="buy_svip_pay_date" property="buySvipPayDate" jdbcType="TIMESTAMP" />
    <result column="last_app_login_date" property="lastAppLoginDate" jdbcType="TIMESTAMP" />
    <result column="member_status_log" property="memberStatuslog" jdbcType="VARCHAR" />
    
    <result column="invitation_count" property="invitationCount" jdbcType="INTEGER" />
    <result column="fenrun_total" property="fenrunTotal" jdbcType="DECIMAL" />
    <result column="withdraw_acount" property="withdrawAcount" jdbcType="INTEGER" />
    <result column="cash_balance" property="cashBalance" jdbcType="DECIMAL" />
    <result column="withdrawal_amount" property="withdrawalAmount" jdbcType="DECIMAL" />
    <result column="withdrawals_amount" property="withdrawalsAmount" jdbcType="DECIMAL" />
    <result column="first_join_date" property="firstJoinDate" jdbcType="TIMESTAMP" />
    <result column="end_lachine_date" property="endLachineDate" jdbcType="TIMESTAMP" />
    <result column="current_status" property="currentStatus" jdbcType="VARCHAR" />
    
    <result column="ms_last_login_time" property="msLastLoginTime" jdbcType="TIMESTAMP" />
    <result column="ms_first_buy_time" property="msFirstBuyTime" jdbcType="TIMESTAMP" />
    <result column="ms_last_buy_time" property="msLastBuyTime" jdbcType="TIMESTAMP" />
    <result column="total_buy_count" property="totalBuyCount" jdbcType="INTEGER" />
    <result column="total_buy_amount" property="totalBuyAmount" jdbcType="DECIMAL" />
    <result column="part_buy_count" property="partBuyCount" jdbcType="INTEGER" />
    <result column="part_buy_amount" property="partBuyAmount" jdbcType="DECIMAL" />

    <result column="qq_id" property="memberExtend.qqId" jdbcType="DECIMAL" />
    <result column="weibo_id" property="memberExtend.weiboId" jdbcType="DECIMAL" />
    
    <result column="customer_ServiceOrder_Count" property="customerServiceOrderCount" jdbcType="INTEGER" />
    <result column="intervention_order_Count" property="interventionOrderCount" jdbcType="INTEGER" />
    <result column="appeal_order_Count" property="appealOrderCount" jdbcType="INTEGER" />
    <result column="subOrderCustoms_cuont" property="subOrderCustomscuont" jdbcType="INTEGER" />

 	<result column="salesman_tag" property="salesmanTag" jdbcType="VARCHAR" />
    <result column="shopowner_Tag" property="shopownerTag" jdbcType="VARCHAR" />
    <result column="last_date" property="lastDate" jdbcType="TIMESTAMP" />

    <result column="each_Day" property="eachDay" jdbcType="VARCHAR" />
    <result column="member_everyday_added" property="memberEverydayAdded" jdbcType="INTEGER" />
    <result column="member_everyday_newlyaddedconsumption" property="memberEverydayNewlyaddedConsumption" jdbcType="INTEGER" />
    <result column="member_everyday_active" property="memberEverydayActive" jdbcType="INTEGER" />
    <result column="member_everyday_consumption" property="memberEverydayConsumption" jdbcType="INTEGER" />
    <result column="member_everyday_svipcount" property="memberEverydaySvipcount" jdbcType="INTEGER" />
    
    <result column="month_Day" property="monthDay" jdbcType="VARCHAR" />
    <result column="member_monthlyday_added" property="memberMonthlydayAdded" jdbcType="INTEGER" />
    <result column="member_monthlyday_newlyaddedconsumption" property="memberMonthlydayNewlyaddedConsumption" jdbcType="INTEGER" />
    <result column="member_monthlyday_active" property="memberMonthlydayActive" jdbcType="INTEGER" />
    <result column="member_monthlyday_consumption" property="memberMonthlydayConsumption" jdbcType="INTEGER" />
    <result column="member_monthlyday_svipcount" property="memberMonthlydaySvipcount" jdbcType="INTEGER" />
    
    <result column="weekly_Day" property="weeklyDay" jdbcType="VARCHAR" />
    <result column="member_Weekly_added" property="memberWeeklyAdded" jdbcType="INTEGER" />
    <result column="member_Weekly_newlyaddedconsumption" property="memberWeeklyNewlyaddedConsumption" jdbcType="INTEGER" />
    <result column="member_Weekly_active" property="memberWeeklyActive" jdbcType="INTEGER" />
    <result column="member_Weekly_consumption" property="memberWeeklyConsumption" jdbcType="INTEGER" />
    <result column="member_Weekly_svipcount" property="memberWeeklySvipcount" jdbcType="INTEGER" />
    
    <result column="zs_platform_contact_id" property="zsPlatformContactId" jdbcType="INTEGER" />
    <result column="mcht_settled_Apply_id" property="mchtSettledApplyId" jdbcType="VARCHAR" />
    <result column="mcht_company" property="mchtCompany" jdbcType="VARCHAR" />
     <result column="mcht_company_not_null" property="mchtCompanyNotNull" jdbcType="VARCHAR" />
    <result column="zs_name" property="zsName" jdbcType="VARCHAR" />
    <result column="mcht_code" property="mchtCode" jdbcType="VARCHAR" />
    <result column="column_type_desc" property="columnTypeDesc" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, login_code, login_pass, sup_id, nick, group_id, status, mobile, m_verfiy_flag, 
    email, e_verfiy_flag, weixin_id, weixin_unionid, qq_id, weibo_id, sex_type, birthday, 
    province, city, county, pic, weixin_head, spr_chnl, reg_client, req_mobile_brand, 
    req_mobile_model, req_imei, reg_ip, reg_area, is_inf_perfect, is_accept_push, weixin_xcx_spr_dtl_id, 
    new_weixin_xcx_spr_dtl_id, weixin_gdt_vid, weixin_adinfo, cancel_reason, limit_function, 
    black_reason, black_inner_remarks, is_svip, svip_expire_date, create_by, create_date, 
    update_by, update_date, remarks, del_flag,
    (select b.name from bu_member_group b where b.id=a.group_id) group_name,
    FUN_GET_STATUS_DESC("BU_MEMBER_INFO","STATUS", a.status) status_desc,
    FUN_GET_STATUS_DESC("BU_MEMBER_INFO","SEX_TYPE", a.sex_type) sex_desc,
    (
		CASE a.reg_client
		WHEN '5' 
			THEN '微信小程序'
		ELSE ( FUN_GET_STATUS_DESC("BU_MEMBER_INFO","SPR_CHNL", a.spr_chnl))
		END
	) spr_chnl_desc,
    FUN_GET_STATUS_DESC("BU_MEMBER_INFO","REG_CLIENT", a.reg_client) reg_client_desc,
    (select b.area_name from bu_p_area b where b.area_id=a.province) province_name,
    (select b.area_name from bu_p_area b where b.area_id=a.city)  city_name,
    (select b.area_name from bu_p_area b where b.area_id=a.county) county_name,
    (select b.integral from bu_member_account b where b.member_id=a.id) integral,
    (select b.g_value from bu_member_account b where b.member_id=a.id) g_value,
	(select b.create_date from sys_app_login_log b where b.member_id=a.id and b.del_flag='0' order by b.create_date desc limit 1) last_login_time,
	(select count(1) from sys_app_login_log b where b.member_id=a.id and b.del_flag='0') login_count,
    (select count(DISTINCT DATE_FORMAT(b.create_date, "%Y%m%d")) from sys_app_login_log b where b.member_id=a.id) login_days,
    (select b.pay_date from bu_combine_order b where b.member_id=a.id and b.status='1' and b.pay_status='1' and b.del_flag='0' order by b.pay_date limit 1) first_pay_time,
    (select b.pay_date from bu_combine_order b where b.member_id=a.id and b.status='1' and b.pay_status='1' and b.del_flag='0' order by b.pay_date desc limit 1) last_pay_time,
    (select count(1) from bu_combine_order b where b.member_id=a.id and b.status='1' and b.pay_status='1' and b.del_flag='0') pay_order_count,
	(select sum(b.total_pay_amount) from bu_combine_order b where b.member_id=a.id and b.status='1' and b.pay_status='1' and b.del_flag='0') pay_order_amount,
	(select sum(d.quantity) from bu_combine_order b, bu_sub_order c,bu_order_dtl d where b.member_id=a.id and b.status='1' and b.pay_status='1' and b.del_flag='0' and b.id=c.combine_order_id and c.id=d.sub_order_id) pay_product_count,
    (SELECT count(1) FROM bu_combine_order b, bu_sub_order c,bu_customer_service_order d WHERE b.member_id=a.id and b.status='1' and b.pay_status='1' AND b.del_flag='0' AND b.id=c.combine_order_id AND c.del_flag='0' AND c.id=d.sub_order_id AND d.service_type = 'B' AND d.status = '1' AND d.del_flag='0') return_order_count,
    (SELECT count(1) FROM bu_combine_order b, bu_sub_order c,bu_customer_service_order d WHERE b.member_id=a.id and b.status='1' and b.pay_status='1' AND b.del_flag='0' AND b.id=c.combine_order_id AND c.del_flag='0' AND c.id=d.sub_order_id AND d.service_type = 'A' AND d.status = '1' AND d.del_flag='0') refund_order_count,
	(select count(DISTINCT DATE_FORMAT(b.pay_date,"%Y%m%d")) from bu_combine_order b where b.status='1' and b.pay_status='1' and b.del_flag='0' and b.member_id=a.id) pay_days,
  	(case a.reg_client when '1' then (select btd.spreadname from bu_track_data btd where a.reg_client='1' and a.req_imei not like '000000%' and a.req_imei is not null and a.req_imei = btd.idfa and btd.del_flag = '0' limit 1) else (select btd.spreadname from bu_track_data btd where a.reg_client='2' and a.req_imei not like '000000%' and a.req_imei is not null and a.req_imei = btd.imei and btd.del_flag = '0' limit 1) end) spreadname,
  	( 
		CASE a.reg_client
		WHEN '1' 
			THEN (SELECT btd.channel FROM bu_track_data btd WHERE a.reg_client='1' AND a.req_imei NOT LIKE '000000%' AND a.req_imei IS NOT NULL AND a.req_imei = btd.idfa AND btd.del_flag = '0' LIMIT 1) 
		WHEN '5'
			THEN ( SELECT wxp.spr_plan_name FROM bu_weixin_xcx_spr_dtl wxd, bu_weixin_xcx_spr_plan wxp WHERE wxd.del_flag = '0' AND wxp.del_flag = '0' AND wxd.spr_plan_id = wxp.id AND wxd.id = a.weixin_xcx_spr_dtl_id LIMIT 1 )
		ELSE (SELECT btd.channel FROM bu_track_data btd WHERE a.reg_client='2' AND a.req_imei NOT LIKE '000000%' AND a.req_imei IS NOT NULL AND a.req_imei = btd.imei AND btd.del_flag = '0' LIMIT 1)
		END 
	) channel,
  	(case a.reg_client when '1' then (select btd.activityname from bu_track_data btd where a.reg_client='1' and a.req_imei not like '000000%' and a.req_imei is not null and a.req_imei = btd.idfa and btd.del_flag = '0' limit 1) else (select btd.activityname from bu_track_data btd where a.reg_client='2' and a.req_imei not like '000000%' and a.req_imei is not null and a.req_imei = btd.imei and btd.del_flag = '0' limit 1) end) activityname,
  	(select so.pay_date from bu_svip_order so where so.del_flag = '0' and so.status = '1' and so.member_id = a.id order by so.pay_date asc limit 1) buy_svip_pay_date,
	(select sall.create_date from sys_app_login_log sall where sall.del_flag = '0' and sall.type = '1' and sall.member_id = a.id order by sall.create_date desc limit 1 ) last_app_login_date,
	(SELECT m.`status` FROM bu_member_status_log m WHERE m.STATUS <![CDATA[ <> ]]>'C' AND m.member_id = a.id ORDER BY m.create_date DESC LIMIT 1) member_status_log,
	(select al.create_date from sys_app_login_log al where al.del_flag='0' and al.member_id = a.id order by al.id desc LIMIT 1) ms_last_login_time,
	(select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time desc limit 1 ) ms_first_buy_time,
	(select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1 ) ms_last_buy_time,
	(select sum(ms.total_buy_count) from bu_member_statistical_info ms where ms.member_id=a.id and ms.del_flag='0') total_buy_count,
	(select sum(ms.total_buy_amount) from bu_member_statistical_info ms where ms.member_id=a.id and ms.del_flag='0') total_buy_amount


  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MemberInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_member_info a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
	  (SELECT CONVERT(CONCAT(FUN_GET_STATUS_DESC("BU_PLATFORM_PV_STATISTICAL","CLIENT_SOURCE",ma.client_source), '-', FUN_GET_STATUS_DESC("BU_MEMBER_PV","COLUMN_TYPE",ma.column_type)), CHAR) FROM bu_member_action ma WHERE ma.action_item_id = a.id AND ma.action_type IN('9', '10', '11', '12', '13') AND ma.column_type IS NOT NULL AND ma.create_date BETWEEN a.create_date AND DATE_ADD(a.create_date, INTERVAL 1 DAY) ORDER BY ma.create_date DESC LIMIT 1) column_type_desc,
    <include refid="Base_Column_List" />
    from bu_member_info a
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByExample" parameterType="com.jf.entity.MemberInfoExample" resultType="java.lang.Integer" >
    select count(*) from bu_member_info a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <resultMap id="BaseResultMap2" type="com.jf.entity.MemberInfoCustomAreaCount" >
    <result column="area_name" property="areaName" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
  </resultMap>
  <select id="selectByExampleGroupByProvince" parameterType="com.jf.entity.MemberInfoExample" resultMap="BaseResultMap2" >
    select (select b.area_name from bu_p_area b where b.area_id=a.province) as area_name, count(0) as count from bu_member_info a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    group by area_name
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByExampleGroupByCity" parameterType="com.jf.entity.MemberInfoExample" resultMap="BaseResultMap2" >
    select (select b.area_name from bu_p_area b where b.area_id=a.city) as area_name, count(0) as count from bu_member_info a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    group by area_name
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  
  <select id="countMemberInfoByDay" parameterType="java.lang.String" resultType="java.lang.Integer" >
  	SELECT	COUNT(1) FROM bu_member_info mi WHERE mi.del_flag = '0'	AND DATE_FORMAT(mi.create_date, '%Y-%m-%d') = #{day}
  </select>
  
  <select id="findMobileBrandList" resultType="java.lang.String">
  	SELECT DISTINCT mi.req_mobile_brand from bu_member_info mi where mi.del_flag='0' AND mi.req_mobile_brand IS NOT NULL
  </select>
  
  
  <select id="countByExampleNova" parameterType="com.jf.entity.MemberInfoExample" resultType="java.lang.Integer" > 
    select count(*) from bu_member_info a
    <trim prefix="where" prefixOverrides="and">
    <if test="id != null">
    	and id = #{id}
    </if>
    <if test="nick != null">
       and nick like #{nick}
    </if>
   <if test="status == 1"> 	
    	and nova_project_end_date <![CDATA[ >= ]]> NOW() 
    </if>
    <if test="status == 2">
    	and nova_project_end_date <![CDATA[ <= ]]> NOW()
    </if>
  <if test="firstJoinDateBegin != null and firstJoinDateEnd != null" >
    	 and EXISTS(select id from bu_member_nova_record b where b.member_id= a.id and b.del_flag = '0' and b.contract_time between #{firstJoinDateBegin} and #{firstJoinDateEnd})
    </if>
     <if test="firstJoinDateBegin != null and firstJoinDateEnd == null">
    	 and EXISTS(select id from bu_member_nova_record b where b.member_id= a.id and b.del_flag = '0' and b.contract_time <![CDATA[ >= ]]> #{firstJoinDateBegin})
    </if>
    <if test="firstJoinDateBegin == null and firstJoinDateEnd != null">
    	 and EXISTS(select id from bu_member_nova_record b where b.member_id= a.id and b.del_flag = '0' and b.contract_time <![CDATA[ <= ]]> #{firstJoinDateEnd})
    </if>
     <if test="laNewDateBegin != null and laNewDateEnd != null" >
    	 and EXISTS(select id from bu_member_info b where b.invitation_member_id = a.id and b.del_flag = '0' and b.create_date between #{laNewDateBegin} and #{laNewDateEnd})
    </if>
      <if test="laNewDateBegin != null and laNewDateEnd == null" >
    	 and EXISTS(select id from bu_member_info b where b.invitation_member_id = a.id and b.del_flag = '0' and b.create_date <![CDATA[ >= ]]> #{laNewDateBegin})
    </if>
     <if test="laNewDateBegin == null and laNewDateEnd != null" >
         and EXISTS(select id from bu_member_info b where b.invitation_member_id = a.id and b.del_flag = '0' and b.create_date <![CDATA[ <= ]]> #{laNewDateEnd})     
     </if>
    	 and del_flag = '0'
    	 and EXISTS(select l.id from bu_member_nova_record l where a.id = l.member_id and l.del_flag = '0' and l.contract_time is not null)  	 
    </trim>
  </select>
  
   <sql id="Base_Column_List1" >
   	  	 select id,nick,
  	(select COUNT(b.id) from bu_member_info b where b.invitation_member_id = a.id and b.del_flag = '0') invitation_count,
	(select e.profit_invite_balance-e.profit_invite_freeze from bu_member_account e where e.member_id = a.id and e.del_flag = '0') fenrun_total,
	(select COUNT(g.id) from bu_withdraw_order g where a.id = g.member_id and withdraw_type='3' and g.del_flag = '0') withdraw_acount,
	(select h.profit_invite_balance from bu_member_account h where h.member_id = a.id and h.del_flag='0') cash_balance,
	(select SUM(j.amount) from bu_withdraw_order j where a.id = j.member_id and j.status in('1','3') and j.withdraw_type = '3' and j.del_flag = '0') withdrawal_amount,
	(select SUM(k.amount) from bu_withdraw_order k where a.id = k.member_id and k.status = '4' and k.withdraw_type = '3' and k.del_flag = '0') withdrawals_amount,
	CASE when a.nova_project_end_date IS NULL THEN NULL when a.nova_project_end_date >= NOW() THEN '开通中' ELSE '已过期' END AS current_status,
   </sql>
  <select id="selectMemberInfoCustomByExampleNova" parameterType="Map" resultMap="BaseResultMap">
    <include refid="Base_Column_List1" />
    <if test="firstJoinDateBegin != null and firstJoinDateEnd != null" >
    	 (select min(l.contract_time) from bu_member_nova_record l where a.id = l.member_id and l.del_flag = '0' and l.contract_time between #{firstJoinDateBegin} and  #{firstJoinDateEnd}) first_join_date,
    </if>
    <if test="firstJoinDateBegin != null and firstJoinDateEnd == null">
    	  (select min(l.contract_time) from bu_member_nova_record l where a.id = l.member_id and l.del_flag = '0' and l.contract_time <![CDATA[ >= ]]> #{firstJoinDateBegin}) first_join_date,	
    </if>
    <if test="firstJoinDateBegin == null and firstJoinDateEnd != null">
    	  (select min(l.contract_time) from bu_member_nova_record l where a.id = l.member_id and l.del_flag = '0' and l.contract_time <![CDATA[ <= ]]> #{firstJoinDateBegin}) first_join_date, 	
    </if>
     <if test="firstJoinDateBegin == null and firstJoinDateEnd == null">
    	  (select min(l.contract_time) from bu_member_nova_record l where a.id = l.member_id and l.del_flag = '0' ) first_join_date, 	
    </if>
    
     <if test="laNewDateBegin != null and laNewDateEnd != null" >
    	 (select MAX(m.create_date) from bu_member_info m where a.id = m.invitation_member_id and m.del_flag = '0' and m.create_date between #{laNewDateBegin} and #{laNewDateEnd}) end_lachine_date
    </if>
    <if test="laNewDateBegin != null and laNewDateEnd == null">
    	 (select MAX(m.create_date) from bu_member_info m where a.id = m.invitation_member_id and m.del_flag = '0' and m.create_date <![CDATA[ >= ]]> #{laNewDateBegin}) end_lachine_date
    </if>
    <if test="laNewDateBegin == null and laNewDateEnd != null">
		 (select MAX(m.create_date) from bu_member_info m where a.id = m.invitation_member_id and m.del_flag = '0' and m.create_date <![CDATA[ <= ]]> #{laNewDateEnd}) end_lachine_date
    </if>
     <if test="laNewDateBegin == null and laNewDateEnd == null">
    	  (select MAX(m.create_date) from bu_member_info m where a.id = m.invitation_member_id and m.del_flag = '0' ) end_lachine_date 	
    </if>
    
    from bu_member_info a
    <trim prefix="where" prefixOverrides="and">
    <if test="id != null">
    	and id = #{id}
    </if>
    <if test="nick != null">
       and nick like #{nick}
    </if>
    <if test="status == 1"> 	
    	and nova_project_end_date <![CDATA[ >= ]]> NOW() 
    </if>
    <if test="status == 2">
    	and nova_project_end_date <![CDATA[ <= ]]> NOW()
    </if>
   	<if test="firstJoinDateBegin != null and firstJoinDateEnd != null" >
    	 and EXISTS(select id from bu_member_nova_record b where b.member_id= a.id and b.del_flag = '0' and b.contract_time between #{firstJoinDateBegin} and #{firstJoinDateEnd})
    </if>
     <if test="firstJoinDateBegin != null and firstJoinDateEnd == null">
    	 and EXISTS(select id from bu_member_nova_record b where b.member_id= a.id and b.del_flag = '0' and b.contract_time <![CDATA[ >= ]]> #{firstJoinDateBegin})
    </if>
    <if test="firstJoinDateBegin == null and firstJoinDateEnd != null">
    	 and EXISTS(select id from bu_member_nova_record b where b.member_id= a.id and b.del_flag = '0' and b.contract_time <![CDATA[ <= ]]> #{firstJoinDateEnd})
    </if>
     <if test="laNewDateBegin != null and laNewDateEnd != null" >
    	 and EXISTS(select id from bu_member_info b where b.invitation_member_id = a.id and b.del_flag = '0' and b.create_date between #{laNewDateBegin} and #{laNewDateEnd})
    </if>
      <if test="laNewDateBegin != null and laNewDateEnd == null" >
    	 and EXISTS(select id from bu_member_info b where b.invitation_member_id = a.id and b.del_flag = '0' and b.create_date <![CDATA[ >= ]]> #{laNewDateBegin})
    </if>
     <if test="laNewDateBegin == null and laNewDateEnd != null" >
         and EXISTS(select id from bu_member_info b where b.invitation_member_id = a.id and b.del_flag = '0' and b.create_date <![CDATA[ <= ]]> #{laNewDateEnd})     
     </if>
    	 and del_flag = '0'
    	 and EXISTS(select l.id from bu_member_nova_record l where a.id = l.member_id and l.del_flag = '0' and l.contract_time is not null)
         ORDER BY
            first_join_date DESC
         limit #{limitStart},#{limitSize}
    </trim>
  </select>
  
  <sql id="Base_Column_List2">
	id,nick,mobile,status,create_date,invitation_member_id,
	(select id from bu_salesman b where b.member_id = a.id and b.del_flag = '0') salesmanTag,
	(select id from bu_shopowner b where b.member_id = a.id and b.del_flag = '0') shopownerTag,
	(select create_date from sys_app_login_log b where b.member_id = a.id and b.del_flag = '0' ORDER BY create_date desc LIMIT 1) last_date,
	
	(select GROUP_CONCAT(pc.contact_name)  from bu_member_extend me, bu_platform_contact pc where a.id = me.member_id and pc.id = me.zs_platform_contact_id and pc.del_flag='0' GROUP BY me.member_id) zs_name,
	(select GROUP_CONCAT(msa.company_name) from bu_member_extend me, bu_mcht_settled_apply msa where a.id = me.member_id and msa.id=me.mcht_settled_apply_id and msa.del_flag='0' ) mcht_company,
	(select GROUP_CONCAT(msa.company_name) from bu_member_extend me, bu_mcht_settled_apply msa where a.id = me.member_id and msa.id=me.mcht_settled_apply_id and msa.del_flag='0' and msa.mcht_id is not null ) mcht_company_not_null,
	(select GROUP_CONCAT(mi.mcht_code) from bu_member_extend me, bu_mcht_settled_apply msa ,bu_mcht_info mi where a.id = me.member_id and msa.id = me.mcht_settled_apply_id and mi.id = msa.mcht_id and msa.del_flag='0') mcht_code,
	(select GROUP_CONCAT(me.zs_platform_contact_id) from bu_member_extend me where a.id =me.member_id  and me.del_flag = "0" GROUP BY me.member_id)zs_platform_contact_id,
	(select GROUP_CONCAT(me.mcht_settled_apply_id) from bu_member_extend me where a.id = me.member_id  and me.del_flag = "0") mcht_settled_apply_id
  </sql>
  <select id="selectByCustomExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MemberInfoCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List2" />
    from bu_member_info a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  
  <select id="countByCustomExample" parameterType="com.jf.entity.MemberInfoCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_member_info a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <sql id="Column_List">
    id, 
    (SELECT count(1) FROM bu_customer_service_order cso WHERE cso.del_flag = '0' AND cso.create_by=a.id) customer_ServiceOrder_Count,
    (SELECT count(1) FROM bu_intervention_order io WHERE io.del_flag = '0' AND io.create_by=a.id) intervention_order_Count,
    (SELECT count(1) FROM bu_appeal_order ao WHERE ao.del_flag = '0' AND ao.create_by=a.id) appeal_order_Count,
    (SELECT count(1) FROM bu_sub_order so WHERE so.del_flag = '0' AND so.create_by=a.id) subOrderCustoms_cuont
  </sql>
  <select id="selectMemberIdByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.MemberInfoExample" >
     select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Column_List" />
    from bu_member_info a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  
  
  
 <sql id="member_everyday_List">
 SELECT
 each_Day AS each_Day,
 ifnull(sum(member_everyday_added), 0) AS member_everyday_added,
 ifnull(sum(member_everyday_newlyaddedconsumption), 0) AS member_everyday_newlyaddedconsumption,
 ifnull(sum(member_everyday_active), 0) AS member_everyday_active,
 ifnull(sum(member_everyday_consumption), 0) AS member_everyday_consumption,
 ifnull(sum(member_everyday_svipcount), 0) AS member_everyday_svipcount
 FROM
 (
    SELECT 
     DATE_FORMAT(mi.create_date, '%Y-%m-%d') each_Day,
     COUNT(DISTINCT mi.id) member_everyday_added,
     0 AS member_everyday_newlyaddedconsumption,
     0 AS member_everyday_active,
     0 AS member_everyday_consumption,
     0 AS member_everyday_svipcount
    FROM
          bu_member_info mi
     WHERE
		  mi.del_flag = '0'
		 AND mi.type='1'
		 AND mi.status='A'
		 AND mi.create_date IS NOT NULL
		 AND DATE_FORMAT(mi.create_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		 AND DATE_FORMAT(mi.create_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
		GROUP BY
			each_Day
    UNION
        SELECT
			DATE_FORMAT(mi.create_date, '%Y-%m-%d') each_Day,
            0 AS member_everyday_added,
            COUNT(DISTINCT co.member_id) member_everyday_newlyaddedconsumption,
            0 AS member_everyday_active,
            0 AS member_everyday_consumption,
            0 AS member_everyday_svipcount
		 FROM
			 bu_combine_order co,
			 bu_member_info mi
		 WHERE
			mi.`type` = '1'
			AND co.del_flag = '0'
			AND co.member_id=mi.id
			AND co.status='1'
			AND co.pay_status='1'
			AND mi.status='A'
			AND mi.del_flag = '0'
			AND mi.create_date IS NOT NULL
			AND DATE_FORMAT(mi.create_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		    AND DATE_FORMAT(mi.create_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
			GROUP BY
			    each_Day
          
      UNION
         SELECT
			DATE_FORMAT(sll.create_date, '%Y-%m-%d') each_Day,
            0 AS member_everyday_added,
            0 AS member_everyday_newlyaddedconsumption,
            COUNT(DISTINCT sll.member_id) member_everyday_active,
            0 AS member_everyday_consumption,
            0 AS member_everyday_svipcount
		  FROM
			  sys_app_login_log sll
		  WHERE
				sll.`type` = '1'
			AND sll.del_flag = '0'
			AND sll.create_date IS NOT NULL
			AND DATE_FORMAT(sll.create_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		    AND DATE_FORMAT(sll.create_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
			GROUP BY
			   each_Day
         
        UNION
            SELECT
				DATE_FORMAT(co.pay_date, '%Y-%m-%d') each_Day,
                0 AS member_everyday_added,
                0 AS member_everyday_newlyaddedconsumption,
                0 AS member_everyday_active,
                COUNT(DISTINCT co.member_id) member_everyday_consumption,
                0 AS member_everyday_svipcount
			 FROM
					 bu_combine_order co
			 WHERE
					     co.del_flag = '0'
			         AND co.status='1'
			         AND co.pay_status='1'
			         AND co.create_date IS NOT NULL
			         AND DATE_FORMAT(co.pay_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		             AND DATE_FORMAT(co.pay_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
					GROUP BY
						each_Day

       UNION
			SELECT
				DATE_FORMAT(sv.pay_date, '%Y-%m-%d') each_Day,
                0 AS member_everyday_added,
                0 AS member_everyday_newlyaddedconsumption,
                0 AS member_everyday_active,
                0 AS member_everyday_consumption,
                COUNT(DISTINCT sv.member_id) member_everyday_svipcount
			FROM
				bu_svip_order sv
			WHERE
				sv.`status` = '1'
			AND sv.del_flag = '0'
			AND sv.pay_date IS NOT NULL
			AND DATE_FORMAT(sv.pay_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		    AND DATE_FORMAT(sv.pay_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
			GROUP BY
				each_Day	
	) t
GROUP BY
	t.each_Day
ORDER BY
	t.each_Day DESC
LIMIT 61
	</sql>
  
  <!-- 会员数据(日报表) -->
  <select id="memberEverydayCount" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    	SELECT TAB.* FROM (
		<include refid="member_everyday_List" />
		)TAB
       	<if test="MAX_NUM!=null and MAX_NUM!=''">
			LIMIT ${MIN_NUM},${MAX_NUM}
	    </if>
  </select>
  	
 
<sql id="member_monthlyday_List">
 SELECT
 month_Day AS month_Day,
 ifnull(sum(member_monthlyday_added), 0) AS member_monthlyday_added,
 ifnull(sum(member_monthlyday_newlyaddedconsumption), 0) AS member_monthlyday_newlyaddedconsumption,
 ifnull(sum(member_monthlyday_active), 0) AS member_monthlyday_active,
 ifnull(sum(member_monthlyday_consumption), 0) AS member_monthlyday_consumption,
 ifnull(sum(member_monthlyday_svipcount), 0) AS member_monthlyday_svipcount
 FROM
 (
    SELECT 
     DATE_FORMAT(mi.create_date, '%Y-%m') month_Day,
     COUNT(DISTINCT mi.id) member_monthlyday_added,
     0 AS member_monthlyday_newlyaddedconsumption,
     0 AS member_monthlyday_active,
     0 AS member_monthlyday_consumption,
     0 AS member_monthlyday_svipcount
    FROM
          bu_member_info mi
     WHERE
		  mi.del_flag = '0'
		 AND mi.type='1'
		 AND mi.status='A'
		 AND mi.create_date IS NOT NULL
		 AND DATE_FORMAT(mi.create_date, '%Y-%m') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		 AND DATE_FORMAT(mi.create_date, '%Y-%m') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
		GROUP BY
			month_Day
    UNION
        SELECT
			DATE_FORMAT(mi.create_date, '%Y-%m') month_Day,
            0 AS member_monthlyday_added,
            COUNT(DISTINCT co.member_id) member_monthlyday_newlyaddedconsumption,
            0 AS member_monthlyday_active,
            0 AS member_monthlyday_consumption,
            0 AS member_monthlyday_svipcount
		 FROM
			 bu_combine_order co,
			 bu_member_info mi
		 WHERE
			mi.`type` = '1'
			AND co.del_flag = '0'
			AND co.member_id=mi.id
			AND co.status='1'
			AND co.pay_status='1'
			AND mi.status='A'
			AND mi.del_flag = '0'
			AND mi.create_date IS NOT NULL
			AND DATE_FORMAT(mi.create_date, '%Y-%m') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		    AND DATE_FORMAT(mi.create_date, '%Y-%m') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
			GROUP BY
			    month_Day
          
      UNION
         SELECT
			DATE_FORMAT(sll.create_date, '%Y-%m') month_Day,
            0 AS member_monthlyday_added,
            0 AS member_monthlyday_newlyaddedconsumption,
            COUNT(DISTINCT sll.member_id) member_monthlyday_active,
            0 AS member_monthlyday_consumption,
            0 AS member_monthlyday_svipcount
		  FROM
			  sys_app_login_log sll
		  WHERE
				sll.`type` = '1'
			AND sll.del_flag = '0'
			AND sll.create_date IS NOT NULL
			AND DATE_FORMAT(sll.create_date, '%Y-%m') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		    AND DATE_FORMAT(sll.create_date, '%Y-%m') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
			GROUP BY
			   month_Day
         
        UNION
            SELECT
				DATE_FORMAT(co.pay_date, '%Y-%m') month_Day,
                0 AS member_monthlyday_added,
                0 AS member_monthlyday_newlyaddedconsumption,
                0 AS member_monthlyday_active,
                COUNT(DISTINCT co.member_id) member_monthlyday_consumption,
                0 AS member_monthlyday_svipcount
			 FROM
					 bu_combine_order co
			 WHERE
					     co.del_flag = '0'
			         AND co.status='1'
			         AND co.pay_status='1'
			         AND co.pay_date IS NOT NULL
			         AND DATE_FORMAT(co.pay_date, '%Y-%m') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		             AND DATE_FORMAT(co.pay_date, '%Y-%m') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
					GROUP BY
						month_Day

       UNION
			SELECT
				DATE_FORMAT(sv.pay_date, '%Y-%m') month_Day,
                0 AS member_monthlyday_added,
                0 AS member_monthlyday_newlyaddedconsumption,
                0 AS member_monthlyday_active,
                0 AS member_monthlyday_consumption,
                COUNT(DISTINCT sv.member_id) member_monthlyday_svipcount
			FROM
				bu_svip_order sv
			WHERE
				sv.`status` = '1'
			AND sv.del_flag = '0'
			AND sv.pay_date IS NOT NULL
			AND DATE_FORMAT(sv.pay_date, '%Y-%m') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		    AND DATE_FORMAT(sv.pay_date, '%Y-%m') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
			GROUP BY
				month_Day	
	) t
GROUP BY
	t.month_Day
ORDER BY
	t.month_Day DESC
LIMIT 61
	</sql>

 <!-- 会员数据(月报表) -->
 <select id="memberMonthlydayCount" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    	SELECT TAB.* FROM (
		<include refid="member_monthlyday_List" />
		)TAB
       	<if test="MAX_NUM!=null and MAX_NUM!=''">
			LIMIT ${MIN_NUM},${MAX_NUM}
	    </if>
  </select>
  
  
 <sql id="member_Weekly_List">
 SELECT
 weekly_Day AS weekly_Day,
 ifnull(sum(member_Weekly_added), 0) AS member_Weekly_added,
 ifnull(sum(member_Weekly_newlyaddedconsumption), 0) AS member_Weekly_newlyaddedconsumption,
 ifnull(sum(member_Weekly_active), 0) AS member_Weekly_active,
 ifnull(sum(member_Weekly_consumption), 0) AS member_Weekly_consumption,
 ifnull(sum(member_Weekly_svipcount), 0) AS member_Weekly_svipcount
 FROM
 (
    SELECT 
     DATE_FORMAT(mi.create_date, '%Y-%m-%d') weekly_Day,
     COUNT(DISTINCT mi.id) member_Weekly_added,
     0 AS member_Weekly_newlyaddedconsumption,
     0 AS member_Weekly_active,
     0 AS member_Weekly_consumption,
     0 AS member_Weekly_svipcount
    FROM
          bu_member_info mi
     WHERE
		  mi.del_flag = '0'
		 AND mi.type='1'
		 AND mi.status='A'
		 AND mi.create_date IS NOT NULL
		 AND DATE_FORMAT(mi.create_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		 AND DATE_FORMAT(mi.create_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
		GROUP BY
			weekly_Day
    UNION
        SELECT
			DATE_FORMAT(mi.create_date, '%Y-%m-%d') weekly_Day,
            0 AS member_Weekly_added,
            COUNT(DISTINCT co.member_id) member_Weekly_newlyaddedconsumption,
            0 AS member_Weekly_active,
            0 AS member_Weekly_consumption,
            0 AS member_Weekly_svipcount
		 FROM
			 bu_combine_order co,
			 bu_member_info mi
		 WHERE
			mi.`type` = '1'
			AND co.del_flag = '0'
			AND co.member_id=mi.id
			AND co.status='1'
			AND co.pay_status='1'
			AND mi.status='A'
			AND mi.del_flag = '0'
			AND mi.create_date IS NOT NULL
			AND DATE_FORMAT(mi.create_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		    AND DATE_FORMAT(mi.create_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
			GROUP BY
			    weekly_Day
          
      UNION
         SELECT
			DATE_FORMAT(sll.create_date, '%Y-%m-%d') weekly_Day,
            0 AS member_Weekly_added,
            0 AS member_Weekly_newlyaddedconsumption,
            COUNT(DISTINCT sll.member_id) member_Weekly_active,
            0 AS member_Weekly_consumption,
            0 AS member_Weekly_svipcount
		  FROM
			  sys_app_login_log sll
		  WHERE
				sll.`type` = '1'
			AND sll.del_flag = '0'
			AND sll.create_date IS NOT NULL
			AND DATE_FORMAT(sll.create_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		    AND DATE_FORMAT(sll.create_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
			GROUP BY
			   weekly_Day
         
        UNION
            SELECT
				DATE_FORMAT(co.pay_date, '%Y-%m-%d') weekly_Day,
                0 AS member_Weekly_added,
                0 AS member_Weekly_newlyaddedconsumption,
                0 AS member_Weekly_active,
                COUNT(DISTINCT co.member_id) member_Weekly_consumption,
                0 AS member_Weekly_svipcount
			 FROM
					 bu_combine_order co
			 WHERE
					     co.del_flag = '0'
			         AND co.status='1'
			         AND co.pay_status='1'
			         AND co.pay_date IS NOT NULL
			         AND DATE_FORMAT(co.pay_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		             AND DATE_FORMAT(co.pay_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
					GROUP BY
						weekly_Day

       UNION
			SELECT
				DATE_FORMAT(sv.pay_date, '%Y-%m-%d') weekly_Day,
                0 AS member_Weekly_added,
                0 AS member_Weekly_newlyaddedconsumption,
                0 AS member_Weekly_active,
                0 AS member_Weekly_consumption,
                COUNT(DISTINCT sv.member_id) member_Weekly_svipcount
			FROM
				bu_svip_order sv
			WHERE
				sv.`status` = '1'
			AND sv.del_flag = '0'
			AND sv.pay_date IS NOT NULL
			AND DATE_FORMAT(sv.pay_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{dateBegin,jdbcType=VARCHAR}
		    AND DATE_FORMAT(sv.pay_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{dateEnd,jdbcType=VARCHAR}
			GROUP BY
				weekly_Day	
	) t
GROUP BY
	t.weekly_Day
	</sql>
	
  <!-- 会员数据(周报表) -->
 <select id="mmemberWeeklyReportCount" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    	SELECT TAB.* FROM (
		<include refid="member_Weekly_List" />
		)TAB
       	<if test="MAX_NUM!=null and MAX_NUM!=''">
			LIMIT ${MIN_NUM},${MAX_NUM}
	    </if>
  </select>

    <select id="listId" resultType="java.lang.Integer" parameterType="com.jf.entity.MemberInfoCustomExample" >
        select id from bu_member_info a
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0" >
            limit #{limitStart} , #{limitSize}
        </if>
    </select>
    <select id="listIdOfSet" resultType="java.lang.Integer" parameterType="com.jf.entity.MemberInfoCustomExample" >
        select id from bu_member_info a
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0" >
            limit #{limitStart} , #{limitSize}
        </if>
    </select>


    <select id="selectPartDataList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        SELECT
        id,
        type,
        nick,
        FUN_GET_STATUS_DESC ( "BU_MEMBER_INFO", "STATUS", a.STATUS ) status_desc,
        ( SELECT b.NAME FROM bu_member_group b WHERE b.id = a.group_id ) group_name,
        cancel_reason,
        create_date,
        (select al.create_date from sys_app_login_log al where al.del_flag='0' and al.member_id = a.id order by al.id desc LIMIT 1) ms_last_login_time,
        (SELECT ms.first_buy_time FROM bu_member_statistical_info ms WHERE ms.del_flag = '0' AND ms.member_id = a.id ORDER BY ms.first_buy_time DESC ) ms_first_buy_time,
        (SELECT ms.last_buy_time FROM bu_member_statistical_info ms WHERE ms.del_flag = '0' AND ms.member_id = a.id ORDER BY ms.last_buy_time DESC LIMIT 1 ) ms_last_buy_time,
        ( SELECT sum( ms.total_buy_count ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) total_buy_count,
        ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) total_buy_amount,
        part_buy_count,
        part_buy_amount,
        ( SELECT b.integral FROM bu_member_account b WHERE b.member_id = a.id ) integral,
        ( SELECT b.g_value FROM bu_member_account b WHERE b.member_id = a.id ) g_value,
        ( SELECT count( 1 ) FROM sys_app_login_log b WHERE b.member_id = a.id AND b.del_flag = '0' ) login_count,
        ( SELECT count( DISTINCT DATE_FORMAT( b.create_date, "%Y%m%d" ) ) FROM sys_app_login_log b WHERE b.member_id = a.id ) login_days
        from
        (SELECT
        *
        FROM
        (
        SELECT
        t.member_id,
        sum( t.total_pay_amount ) AS part_buy_amount,
        count( 1 ) AS part_buy_count
        FROM
        bu_combine_order t
        WHERE
        t.`status` = '1'
        <if test="comPayDateBegin != null and comPayDateBegin != '' and comPayDateEnd != null and comPayDateEnd != ''">
            AND t.pay_date <![CDATA[ >= ]]>#{comPayDateBegin}
            AND t.pay_date <![CDATA[ <= ]]>#{comPayDateEnd}
        </if>
        GROUP BY t.member_id
        ) T
        WHERE 1=1
        <if test=" partPayOrderAmountMin != null and  partPayOrderAmountMin != ''">
            AND T.part_buy_amount <![CDATA[ >= ]]>#{partPayOrderAmountMin}
        </if>
        <if test=" partPayOrderAmountMax != null and  partPayOrderAmountMax != ''">
            AND T.part_buy_amount <![CDATA[ <= ]]>#{partPayOrderAmountMax}
        </if>
        <if test=" partPayOrderCountMin != null and  partPayOrderCountMin != ''">
            AND T.part_buy_count <![CDATA[ >= ]]>#{partPayOrderCountMin}
        </if>
        <if test=" partPayOrderCountMax != null and  partPayOrderCountMax != ''">
            AND T.part_buy_count <![CDATA[ <= ]]>#{partPayOrderCountMax}
        </if>
        ) t2 RIGHT JOIN
        bu_member_info a on t2.member_id = a.id
        where
        a.del_flag = '0'
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="id != null and id != ''">
            AND id = #{id}
        </if>
        <if test="nick != null and nick != ''">
            AND nick = #{nick}
        </if>
        <if test="mobile != null and mobile != ''">
            AND mobile = #{mobile}
        </if>
        <if test="groupId != null and groupId != ''">
            AND group_id = #{groupId}
        </if>
        <if test="createDateBegin != null and createDateBegin != ''">
            AND create_date <![CDATA[ >= ]]>#{createDateBegin}
        </if>
        <if test="createDateEnd != null and createDateEnd != ''">
            AND create_date <![CDATA[ <= ]]>#{createDateEnd}
        </if>
        <if test="loginDateBegin != null and loginDateBegin != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_login_time desc limit 1) <![CDATA[ >= ]]>#{loginDateBegin}
        </if>
        <if test="loginDateEnd != null and loginDateEnd != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_login_time desc limit 1) <![CDATA[ <= ]]>#{loginDateEnd}
        </if>
        <if test="firstPayDateBegin != null and firstPayDateBegin != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time limit 1) <![CDATA[ >= ]]>#{firstPayDateBegin}
        </if>
        <if test="firstPayDateEnd != null and firstPayDateEnd != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time limit 1) <![CDATA[ <= ]]>#{firstPayDateEnd}
        </if>
        <if test="lastPayDateBegin != null and lastPayDateBegin != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1) <![CDATA[ >= ]]>#{lastPayDateBegin}
        </if>
        <if test="lastPayDateEnd != null and lastPayDateEnd != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1) <![CDATA[ <= ]]>#{lastPayDateEnd}
        </if>
        <if test=" payOrderAmountMin != null and  payOrderAmountMin != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) <![CDATA[ >= ]]>#{payOrderAmountMin}
        </if>
        <if test=" payOrderAmountMax != null and  payOrderAmountMax != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) <![CDATA[ <= ]]>#{payOrderAmountMax}
        </if>
        <if test=" payOrderCountMin != null and  payOrderCountMin != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag = '0') <![CDATA[ >= ]]>#{payOrderCountMin}
        </if>
        <if test=" payOrderCountMax != null and  payOrderCountMax != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag = '0') <![CDATA[ <= ]]>#{payOrderCountMax}
        </if>
        order by a.id DESC
        <if test="MAX_NUM!=null and MAX_NUM!=''">
            limit #{MIN_NUM,jdbcType=INTEGER},#{MAX_NUM,jdbcType=INTEGER}
        </if>
    </select>

    <select id="countPartDataList" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        bu_member_info a
        WHERE
        del_flag = '0'
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <if test="id != null and id != ''">
            AND id = #{id}
        </if>
        <if test="nick != null and nick != ''">
            AND nick = #{nick}
        </if>
        <if test="mobile != null and mobile != ''">
            AND mobile = #{mobile}
        </if>
        <if test="groupId != null and groupId != ''">
            AND group_id = #{groupId}
        </if>
        <if test="createDateBegin != null and createDateBegin != ''">
            AND create_date <![CDATA[ >= ]]>#{createDateBegin}
        </if>
        <if test="createDateEnd != null and createDateEnd != ''">
            AND create_date <![CDATA[ <= ]]>#{createDateEnd}
        </if>
        <if test="loginDateBegin != null and loginDateBegin != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_login_time desc limit 1) <![CDATA[ >= ]]>#{loginDateBegin}
        </if>
        <if test="loginDateEnd != null and loginDateEnd != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_login_time desc limit 1) <![CDATA[ <= ]]>#{loginDateEnd}
        </if>
        <if test="firstPayDateBegin != null and firstPayDateBegin != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time limit 1) <![CDATA[ >= ]]>#{firstPayDateBegin}
        </if>
        <if test="firstPayDateEnd != null and firstPayDateEnd != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time limit 1) <![CDATA[ <= ]]>#{firstPayDateEnd}
        </if>
        <if test="lastPayDateBegin != null and lastPayDateBegin != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1) <![CDATA[ >= ]]>#{lastPayDateBegin}
        </if>
        <if test="lastPayDateEnd != null and lastPayDateEnd != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1) <![CDATA[ <= ]]>#{lastPayDateEnd}
        </if>
        <if test=" payOrderAmountMin != null and  payOrderAmountMin != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) <![CDATA[ >= ]]>#{payOrderAmountMin}
        </if>
        <if test=" payOrderAmountMax != null and  payOrderAmountMax != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) <![CDATA[ <= ]]>#{payOrderAmountMax}
        </if>
        <if test=" payOrderCountMin != null and  payOrderCountMin != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag = '0') <![CDATA[ >= ]]>#{payOrderCountMin}
        </if>
        <if test=" payOrderCountMax != null and  payOrderCountMax != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag = '0') <![CDATA[ <= ]]>#{payOrderCountMax}
        </if>
    </select>

    <!--<select id="selectPartDataFromOrderList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        SELECT
        id,
        type,
        nick,
        FUN_GET_STATUS_DESC ( "BU_MEMBER_INFO", "STATUS", a.STATUS ) status_desc,
        ( SELECT b.NAME FROM bu_member_group b WHERE b.id = a.group_id ) group_name,
        cancel_reason,
        create_date,
        (select al.create_date from sys_app_login_log al where al.del_flag='0' and al.member_id = a.id order by al.id desc LIMIT 1) ms_last_login_time,
        (SELECT ms.first_buy_time FROM bu_member_statistical_info ms WHERE ms.del_flag = '0' AND ms.member_id = a.id ORDER BY ms.first_buy_time DESC ) ms_first_buy_time,
        (SELECT ms.last_buy_time FROM bu_member_statistical_info ms WHERE ms.del_flag = '0' AND ms.member_id = a.id ORDER BY ms.last_buy_time DESC LIMIT 1 ) ms_last_buy_time,
        ( SELECT sum( ms.total_buy_count ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) total_buy_count,
        ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) total_buy_amount,
        part_buy_count,
        part_buy_amount,
        ( SELECT b.integral FROM bu_member_account b WHERE b.member_id = a.id ) integral,
        ( SELECT b.g_value FROM bu_member_account b WHERE b.member_id = a.id ) g_value,
        ( SELECT count( 1 ) FROM sys_app_login_log b WHERE b.member_id = a.id AND b.del_flag = '0' ) login_count,
        ( SELECT count( DISTINCT DATE_FORMAT( b.create_date, "%Y%m%d" ) ) FROM sys_app_login_log b WHERE b.member_id = a.id ) login_days
        from
        (SELECT
        *
        FROM
        (
        SELECT
        t.member_id,
        sum( t.total_pay_amount ) AS part_buy_amount,
        count( 1 ) AS part_buy_count
        FROM
        bu_combine_order t
        WHERE
        t.`status` = '1'
        <if test="comPayDateBegin != null and comPayDateBegin != '' and comPayDateEnd != null and comPayDateEnd != ''">
        AND t.pay_date <![CDATA[ >= ]]>#{comPayDateBegin}
        AND t.pay_date <![CDATA[ <= ]]>#{comPayDateEnd}
        </if>
        GROUP BY t.member_id
        ) T
        WHERE 1=1
        <if test=" partPayOrderAmountMin != null and  partPayOrderAmountMin != ''">
            AND T.part_buy_amount <![CDATA[ >= ]]>#{partPayOrderAmountMin}
        </if>
        <if test=" partPayOrderAmountMax != null and  partPayOrderAmountMax != ''">
            AND T.part_buy_amount <![CDATA[ <= ]]>#{partPayOrderAmountMax}
        </if>
        <if test=" partPayOrderCountMin != null and  partPayOrderCountMin != ''">
            AND T.part_buy_count <![CDATA[ >= ]]>#{partPayOrderCountMin}
        </if>
        <if test=" partPayOrderCountMax != null and  partPayOrderCountMax != ''">
            AND T.part_buy_count <![CDATA[ <= ]]>#{partPayOrderCountMax}
        </if>
        ) t2 LEFT JOIN
        bu_member_info a on t2.member_id = a.id
        where
        a.del_flag = '0'
        <if test="status != null and status != ''">
            AND a.status = #{status}
        </if>
        <if test="id != null and id != ''">
            AND a.id = #{id}
        </if>
        <if test="nick != null and nick != ''">
            AND a.nick = #{nick}
        </if>
        <if test="mobile != null and mobile != ''">
            AND a.mobile = #{mobile}
        </if>
        <if test="groupId != null and groupId != ''">
            AND a.group_id = #{groupId}
        </if>
        <if test="createDateBegin != null and createDateBegin != ''">
            AND a.create_date <![CDATA[ >= ]]>#{createDateBegin}
        </if>
        <if test="createDateEnd != null and createDateEnd != ''">
            AND a.create_date <![CDATA[ <= ]]>#{createDateEnd}
        </if>
        <if test="loginDateBegin != null and loginDateBegin != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_login_time desc limit 1) <![CDATA[ >= ]]>#{loginDateBegin}
        </if>
        <if test="loginDateEnd != null and loginDateEnd != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_login_time desc limit 1) <![CDATA[ <= ]]>#{loginDateEnd}
        </if>
        <if test="firstPayDateBegin != null and firstPayDateBegin != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time limit 1) <![CDATA[ >= ]]>#{firstPayDateBegin}
        </if>
        <if test="firstPayDateEnd != null and firstPayDateEnd != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time limit 1) <![CDATA[ <= ]]>#{firstPayDateEnd}
        </if>
        <if test="lastPayDateBegin != null and lastPayDateBegin != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1) <![CDATA[ >= ]]>#{lastPayDateBegin}
        </if>
        <if test="lastPayDateEnd != null and lastPayDateEnd != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1) <![CDATA[ <= ]]>#{lastPayDateEnd}
        </if>
        <if test=" payOrderAmountMin != null and  payOrderAmountMin != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) <![CDATA[ >= ]]>#{payOrderAmountMin}
        </if>
        <if test=" payOrderAmountMax != null and  payOrderAmountMax != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) <![CDATA[ <= ]]>#{payOrderAmountMax}
        </if>
        <if test=" payOrderCountMin != null and  payOrderCountMin != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag = '0') <![CDATA[ >= ]]>#{payOrderCountMin}
        </if>
        <if test=" payOrderCountMax != null and  payOrderCountMax != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag = '0') <![CDATA[ <= ]]>#{payOrderCountMax}
        </if>
        order by a.id DESC
        <if test="MAX_NUM!=null and MAX_NUM!=''">
            limit #{MIN_NUM,jdbcType=INTEGER},#{MAX_NUM,jdbcType=INTEGER}
        </if>
    </select>-->

    <select id="selectPartDataFromOrderList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        SELECT id, TYPE, nick, FUN_GET_STATUS_DESC ( "BU_MEMBER_INFO", "STATUS", tab.STATUS ) status_desc, (
        SELECT b.NAME
        FROM bu_member_group b
        WHERE b.id = tab.group_id ) group_name, cancel_reason, create_date,
        (SELECT al.create_date
        FROM sys_app_login_log al
        WHERE al.del_flag='0' AND al.member_id = tab.id ORDER BY al.id DESC
        LIMIT 1) ms_last_login_time, (SELECT ms.first_buy_time
        FROM bu_member_statistical_info ms
        WHERE ms.del_flag = '0' AND ms.member_id = tab.id ORDER BY ms.first_buy_time DESC ) ms_first_buy_time, (SELECT ms.last_buy_time
        FROM bu_member_statistical_info ms
        WHERE ms.del_flag = '0' AND ms.member_id = tab.id ORDER BY ms.last_buy_time DESC
        LIMIT 1 ) ms_last_buy_time, (
        SELECT SUM( ms.total_buy_count )
        FROM bu_member_statistical_info ms
        WHERE ms.member_id = tab.id AND ms.del_flag = '0' ) total_buy_count, (
        SELECT SUM( ms.total_buy_amount )
        FROM bu_member_statistical_info ms
        WHERE ms.member_id = tab.id AND ms.del_flag = '0' ) total_buy_amount, part_buy_count, part_buy_amount, (
        SELECT b.integral
        FROM bu_member_account b
        WHERE b.member_id = tab.id ) integral, (
        SELECT b.g_value
        FROM bu_member_account b
        WHERE b.member_id = tab.id ) g_value, (
        SELECT COUNT( 1 )
        FROM sys_app_login_log b
        WHERE b.member_id = tab.id AND b.del_flag = '0' ) login_count, (
        SELECT COUNT( DISTINCT DATE_FORMAT( b.create_date, "%Y%m%d" ) )
        FROM sys_app_login_log b
        WHERE b.member_id = tab.id ) login_days

        FROM (
        SELECT id, TYPE, nick,STATUS,group_id,cancel_reason, create_date, part_buy_count,part_buy_amount
        from
        (SELECT
        *
        FROM
        (
        SELECT
        t.member_id,
        sum( t.total_pay_amount ) AS part_buy_amount,
        count( 1 ) AS part_buy_count
        FROM
        bu_combine_order t
        WHERE
        t.`status` = '1'
        <if test="comPayDateBegin != null and comPayDateBegin != '' and comPayDateEnd != null and comPayDateEnd != ''">
            AND t.pay_date <![CDATA[ >= ]]>#{comPayDateBegin}
            AND t.pay_date <![CDATA[ <= ]]>#{comPayDateEnd}
        </if>
        GROUP BY t.member_id
        ) T
        WHERE 1=1
        <if test=" partPayOrderAmountMin != null and  partPayOrderAmountMin != ''">
            AND T.part_buy_amount <![CDATA[ >= ]]>#{partPayOrderAmountMin}
        </if>
        <if test=" partPayOrderAmountMax != null and  partPayOrderAmountMax != ''">
            AND T.part_buy_amount <![CDATA[ <= ]]>#{partPayOrderAmountMax}
        </if>
        <if test=" partPayOrderCountMin != null and  partPayOrderCountMin != ''">
            AND T.part_buy_count <![CDATA[ >= ]]>#{partPayOrderCountMin}
        </if>
        <if test=" partPayOrderCountMax != null and  partPayOrderCountMax != ''">
            AND T.part_buy_count <![CDATA[ <= ]]>#{partPayOrderCountMax}
        </if>
        ) t2 LEFT JOIN
        bu_member_info a on t2.member_id = a.id
        where
        a.del_flag = '0'
        <if test="status != null and status != ''">
            AND a.status = #{status}
        </if>
        <if test="id != null and id != ''">
            AND a.id = #{id}
        </if>
        <if test="nick != null and nick != ''">
            AND a.nick = #{nick}
        </if>
        <if test="mobile != null and mobile != ''">
            AND a.mobile = #{mobile}
        </if>
        <if test="groupId != null and groupId != ''">
            AND a.group_id = #{groupId}
        </if>
        <if test="createDateBegin != null and createDateBegin != ''">
            AND a.create_date <![CDATA[ >= ]]>#{createDateBegin}
        </if>
        <if test="createDateEnd != null and createDateEnd != ''">
            AND a.create_date <![CDATA[ <= ]]>#{createDateEnd}
        </if>
        <if test="loginDateBegin != null and loginDateBegin != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_login_time desc limit 1) <![CDATA[ >= ]]>#{loginDateBegin}
        </if>
        <if test="loginDateEnd != null and loginDateEnd != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_login_time desc limit 1) <![CDATA[ <= ]]>#{loginDateEnd}
        </if>
        <if test="firstPayDateBegin != null and firstPayDateBegin != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time limit 1) <![CDATA[ >= ]]>#{firstPayDateBegin}
        </if>
        <if test="firstPayDateEnd != null and firstPayDateEnd != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time limit 1) <![CDATA[ <= ]]>#{firstPayDateEnd}
        </if>
        <if test="lastPayDateBegin != null and lastPayDateBegin != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1) <![CDATA[ >= ]]>#{lastPayDateBegin}
        </if>
        <if test="lastPayDateEnd != null and lastPayDateEnd != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1) <![CDATA[ <= ]]>#{lastPayDateEnd}
        </if>
        <if test=" payOrderAmountMin != null and  payOrderAmountMin != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) <![CDATA[ >= ]]>#{payOrderAmountMin}
        </if>
        <if test=" payOrderAmountMax != null and  payOrderAmountMax != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) <![CDATA[ <= ]]>#{payOrderAmountMax}
        </if>
        <if test=" payOrderCountMin != null and  payOrderCountMin != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag = '0') <![CDATA[ >= ]]>#{payOrderCountMin}
        </if>
        <if test=" payOrderCountMax != null and  payOrderCountMax != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag = '0') <![CDATA[ <= ]]>#{payOrderCountMax}
        </if>
        order by a.id DESC
        <if test="MAX_NUM!=null and MAX_NUM!=''">
            limit #{MIN_NUM,jdbcType=INTEGER},#{MAX_NUM,jdbcType=INTEGER}
        </if>
        ) tab
    </select>

    <select id="countPartDataFromOrderList" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT count(1)
        FROM (
        SELECT id, TYPE, nick,STATUS,group_id,cancel_reason, create_date, part_buy_count,part_buy_amount
        from
        (SELECT
        *
        FROM
        (
        SELECT
        t.member_id,
        sum( t.total_pay_amount ) AS part_buy_amount,
        count( 1 ) AS part_buy_count
        FROM
        bu_combine_order t
        WHERE
        t.`status` = '1'
        <if test="comPayDateBegin != null and comPayDateBegin != '' and comPayDateEnd != null and comPayDateEnd != ''">
            AND t.pay_date <![CDATA[ >= ]]>#{comPayDateBegin}
            AND t.pay_date <![CDATA[ <= ]]>#{comPayDateEnd}
        </if>
        GROUP BY t.member_id
        ) T
        WHERE 1=1
        <if test=" partPayOrderAmountMin != null and  partPayOrderAmountMin != ''">
            AND T.part_buy_amount <![CDATA[ >= ]]>#{partPayOrderAmountMin}
        </if>
        <if test=" partPayOrderAmountMax != null and  partPayOrderAmountMax != ''">
            AND T.part_buy_amount <![CDATA[ <= ]]>#{partPayOrderAmountMax}
        </if>
        <if test=" partPayOrderCountMin != null and  partPayOrderCountMin != ''">
            AND T.part_buy_count <![CDATA[ >= ]]>#{partPayOrderCountMin}
        </if>
        <if test=" partPayOrderCountMax != null and  partPayOrderCountMax != ''">
            AND T.part_buy_count <![CDATA[ <= ]]>#{partPayOrderCountMax}
        </if>
        ) t2 LEFT JOIN
        bu_member_info a on t2.member_id = a.id
        where
        a.del_flag = '0'
        <if test="status != null and status != ''">
            AND a.status = #{status}
        </if>
        <if test="id != null and id != ''">
            AND a.id = #{id}
        </if>
        <if test="nick != null and nick != ''">
            AND a.nick = #{nick}
        </if>
        <if test="mobile != null and mobile != ''">
            AND a.mobile = #{mobile}
        </if>
        <if test="groupId != null and groupId != ''">
            AND a.group_id = #{groupId}
        </if>
        <if test="createDateBegin != null and createDateBegin != ''">
            AND a.create_date <![CDATA[ >= ]]>#{createDateBegin}
        </if>
        <if test="createDateEnd != null and createDateEnd != ''">
            AND a.create_date <![CDATA[ <= ]]>#{createDateEnd}
        </if>
        <if test="loginDateBegin != null and loginDateBegin != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id
            = a.id order by ms.last_login_time desc limit 1) <![CDATA[ >= ]]>#{loginDateBegin}
        </if>
        <if test="loginDateEnd != null and loginDateEnd != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id
            = a.id order by ms.last_login_time desc limit 1) <![CDATA[ <= ]]>#{loginDateEnd}
        </if>
        <if test="firstPayDateBegin != null and firstPayDateBegin != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id =
            a.id order by ms.first_buy_time limit 1) <![CDATA[ >= ]]>#{firstPayDateBegin}
        </if>
        <if test="firstPayDateEnd != null and firstPayDateEnd != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id =
            a.id order by ms.first_buy_time limit 1) <![CDATA[ <= ]]>#{firstPayDateEnd}
        </if>
        <if test="lastPayDateBegin != null and lastPayDateBegin != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id =
            a.id order by ms.last_buy_time desc limit 1) <![CDATA[ >= ]]>#{lastPayDateBegin}
        </if>
        <if test="lastPayDateEnd != null and lastPayDateEnd != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id =
            a.id order by ms.last_buy_time desc limit 1) <![CDATA[ <= ]]>#{lastPayDateEnd}
        </if>
        <if test=" payOrderAmountMin != null and  payOrderAmountMin != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND
            ms.del_flag = '0' ) <![CDATA[ >= ]]>#{payOrderAmountMin}
        </if>
        <if test=" payOrderAmountMax != null and  payOrderAmountMax != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND
            ms.del_flag = '0' ) <![CDATA[ <= ]]>#{payOrderAmountMax}
        </if>
        <if test=" payOrderCountMin != null and  payOrderCountMin != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag
            = '0') <![CDATA[ >= ]]>#{payOrderCountMin}
        </if>
        <if test=" payOrderCountMax != null and  payOrderCountMax != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag
            = '0') <![CDATA[ <= ]]>#{payOrderCountMax}
        </if>
        )tab
    </select>

    <!--<select id="countPartDataFromOrderList" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT
        count(1)
        from
        (SELECT
        *
        FROM
        (
        SELECT
        t.member_id,
        sum( t.total_pay_amount ) AS part_buy_amount,
        count( 1 ) AS part_buy_count
        FROM
        bu_combine_order t
        WHERE
        t.`status` = '1'
        <if test="comPayDateBegin != null and comPayDateBegin != '' and comPayDateEnd != null and comPayDateEnd != ''">
        AND t.pay_date <![CDATA[ >= ]]>#{comPayDateBegin}
        AND t.pay_date <![CDATA[ <= ]]>#{comPayDateEnd}
        </if>
        GROUP BY t.member_id
        ) T
        WHERE 1=1
        <if test=" partPayOrderAmountMin != null and  partPayOrderAmountMin != ''">
            AND T.part_buy_amount <![CDATA[ >= ]]>#{partPayOrderAmountMin}
        </if>
        <if test=" partPayOrderAmountMax != null and  partPayOrderAmountMax != ''">
            AND T.part_buy_amount <![CDATA[ <= ]]>#{partPayOrderAmountMax}
        </if>
        <if test=" partPayOrderCountMin != null and  partPayOrderCountMin != ''">
            AND T.part_buy_count <![CDATA[ >= ]]>#{partPayOrderCountMin}
        </if>
        <if test=" partPayOrderCountMax != null and  partPayOrderCountMax != ''">
            AND T.part_buy_count <![CDATA[ <= ]]>#{partPayOrderCountMax}
        </if>
        ) t2 LEFT JOIN
        bu_member_info a on t2.member_id = a.id
        where
        a.del_flag = '0'
        <if test="status != null and status != ''">
            AND a.status = #{status}
        </if>
        <if test="id != null and id != ''">
            AND a.id = #{id}
        </if>
        <if test="nick != null and nick != ''">
            AND a.nick = #{nick}
        </if>
        <if test="mobile != null and mobile != ''">
            AND a.mobile = #{mobile}
        </if>
        <if test="groupId != null and groupId != ''">
            AND a.group_id = #{groupId}
        </if>
        <if test="createDateBegin != null and createDateBegin != ''">
            AND a.create_date <![CDATA[ >= ]]>#{createDateBegin}
        </if>
        <if test="createDateEnd != null and createDateEnd != ''">
            AND a.create_date <![CDATA[ <= ]]>#{createDateEnd}
        </if>
        <if test="loginDateBegin != null and loginDateBegin != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_login_time desc limit 1) <![CDATA[ >= ]]>#{loginDateBegin}
        </if>
        <if test="loginDateEnd != null and loginDateEnd != ''">
            AND ( select ms.last_login_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_login_time desc limit 1) <![CDATA[ <= ]]>#{loginDateEnd}
        </if>
        <if test="firstPayDateBegin != null and firstPayDateBegin != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time limit 1) <![CDATA[ >= ]]>#{firstPayDateBegin}
        </if>
        <if test="firstPayDateEnd != null and firstPayDateEnd != ''">
            AND ( select ms.first_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.first_buy_time limit 1) <![CDATA[ <= ]]>#{firstPayDateEnd}
        </if>
        <if test="lastPayDateBegin != null and lastPayDateBegin != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1) <![CDATA[ >= ]]>#{lastPayDateBegin}
        </if>
        <if test="lastPayDateEnd != null and lastPayDateEnd != ''">
            AND ( select ms.last_buy_time from bu_member_statistical_info ms where ms.del_flag = '0' and ms.member_id = a.id order by ms.last_buy_time desc limit 1) <![CDATA[ <= ]]>#{lastPayDateEnd}
        </if>
        <if test=" payOrderAmountMin != null and  payOrderAmountMin != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) <![CDATA[ >= ]]>#{payOrderAmountMin}
        </if>
        <if test=" payOrderAmountMax != null and  payOrderAmountMax != ''">
            AND ( SELECT sum( ms.total_buy_amount ) FROM bu_member_statistical_info ms WHERE ms.member_id = a.id AND ms.del_flag = '0' ) <![CDATA[ <= ]]>#{payOrderAmountMax}
        </if>
        <if test=" payOrderCountMin != null and  payOrderCountMin != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag = '0') <![CDATA[ >= ]]>#{payOrderCountMin}
        </if>
        <if test=" payOrderCountMax != null and  payOrderCountMax != ''">
            AND ( SELECT ms.total_buy_count FROM bu_member_statistical_info ms WHERE ms.member_id = a.id and ms.del_flag = '0') <![CDATA[ <= ]]>#{payOrderCountMax}
        </if>
    </select>-->

    <select id="getMemeberIdList" resultType="java.util.Map">
        SELECT
            t.id,
            t.mobile
        FROM
            bu_member_info t
        WHERE
            t.del_flag = '0'
        AND t.STATUS = 'A'
        AND t.mobile IS NOT NULL
        AND t.id NOT IN (
            SELECT
                bl.member_id
            FROM
                bu_black_list bl
            WHERE
                bl.del_flag = '0'
            AND bl.black_type = '4'
        )
        AND t.mobile NOT IN (
            SELECT
                pm.mobile
            FROM
                tmp_paichu_mobile pm
        )
        <if test="limitStart != null and limitSize != null" >
            LIMIT #{limitStart}, #{limitSize}
        </if>
    </select>

    <select id="countSmsBlackMobile" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM
        `sys_sms_black_mobile` t
        where
        del_flag = '0'
        <if test="mobile != null" >
            and t.mobile = #{mobile}
        </if>
        <if test="limitStart != null and limitSize != null" >
            LIMIT #{limitStart}, #{limitSize}
        </if>
    </select>

    <select id="selectSmsBlackMobile" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        t.id id,
        t.mobile memberMobile,
        DATE_FORMAT(t.create_date, '%Y-%m-%d %H:%i:%s') createDate
        FROM
        `sys_sms_black_mobile` t
        where
        del_flag = '0'
        <if test="mobile != null" >
            and t.mobile = #{mobile}
        </if>
        <if test="limitStart != null and limitSize != null" >
            LIMIT #{limitStart}, #{limitSize}
        </if>
    </select>

    <update id="delSmsBlackMobil" parameterType="java.util.HashMap">
        UPDATE sys_sms_black_mobile
        SET del_flag = '1',update_by = #{updateBy},update_date = #{updateDate}
        WHERE id = #{id}
    </update>
</mapper>
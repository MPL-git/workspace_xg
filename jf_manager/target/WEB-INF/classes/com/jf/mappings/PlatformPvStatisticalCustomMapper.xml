<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.PlatformPvStatisticalCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.PlatformPvStatisticalCustom" extends="com.jf.dao.PlatformPvStatisticalMapper.BaseResultMap" >
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, client_source, statistical_date, total_visitor_count, total_pv_count, pay_amount, 
    pay_sub_order_count, pay_product_count, pay_member_count, create_by, create_date, 
    update_by, update_date, remarks, del_flag
  </sql>
  <select id="selectByCustomExample" resultMap="BaseResultMap" parameterType="com.jf.entity.PlatformPvStatisticalCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_platform_pv_statistical t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByCustomPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_platform_pv_statistical t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByCustomExample" parameterType="com.jf.entity.PlatformPvStatisticalCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_platform_pv_statistical t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCustomExampleSelective" parameterType="map" >
    update bu_platform_pv_statistical t
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.clientSource != null" >
        client_source = #{record.clientSource,jdbcType=CHAR},
      </if>
      <if test="record.statisticalDate != null" >
        statistical_date = #{record.statisticalDate,jdbcType=CHAR},
      </if>
      <if test="record.totalVisitorCount != null" >
        total_visitor_count = #{record.totalVisitorCount,jdbcType=INTEGER},
      </if>
      <if test="record.totalPvCount != null" >
        total_pv_count = #{record.totalPvCount,jdbcType=INTEGER},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.paySubOrderCount != null" >
        pay_sub_order_count = #{record.paySubOrderCount,jdbcType=INTEGER},
      </if>
      <if test="record.payProductCount != null" >
        pay_product_count = #{record.payProductCount,jdbcType=INTEGER},
      </if>
      <if test="record.payMemberCount != null" >
        pay_member_count = #{record.payMemberCount,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <!-- 历史概况 -->
  <select id="getPlatformPvStatisticalSumUp" parameterType="java.util.Map" resultType="java.util.Map" >
  	SELECT
	  IFNULL(SUM(A.total_visitor_count_sum_a), 0) total_visitor_count_sum_a,
	  IFNULL(SUM(A.total_visitor_count_tourist_sum_a), 0) total_visitor_count_tourist_sum_a,
	  IFNULL(SUM(A.total_pv_count_sum_a), 0) total_pv_count_sum_a,
	  IFNULL(SUM(A.total_pv_count_tourist_sum_a), 0) total_pv_count_tourist_sum_a,
	  IFNULL(SUM(A.pay_amount_sum_a), 0.00) pay_amount_sum_a,
	  IFNULL(SUM(A.pay_combine_order_count_sum_a), 0) pay_combine_order_count_sum_a,
	  IFNULL(SUM(A.pay_sub_order_count_sum_a), 0) pay_sub_order_count_sum_a,
	  IFNULL(SUM(A.pay_product_count_sum_a), 0) pay_product_count_sum_a,
	  IFNULL(SUM(A.pay_member_count_sum_a), 0) pay_member_count_sum_a,
	  IFNULL(SUM(A.total_visitor_count_sum_b), 0) total_visitor_count_sum_b,
	  IFNULL(SUM(A.total_visitor_count_tourist_sum_b), 0) total_visitor_count_tourist_sum_b,
	  IFNULL(SUM(A.total_pv_count_sum_b), 0) total_pv_count_sum_b,
	  IFNULL(SUM(A.total_pv_count_tourist_sum_b), 0) total_pv_count_tourist_sum_b,
	  IFNULL(SUM(A.pay_amount_sum_b), 0) pay_amount_sum_b,
	  IFNULL(SUM(A.pay_combine_order_count_sum_b), 0) pay_combine_order_count_sum_b,
	  IFNULL(SUM(A.pay_sub_order_count_sum_b), 0) pay_sub_order_count_sum_b,
	  IFNULL(SUM(A.pay_product_count_sum_b), 0) pay_product_count_sum_b,
	  IFNULL(SUM(A.pay_member_count_sum_b), 0) pay_member_count_sum_b,
	  IFNULL(TRUNCATE ((SUM(A.total_visitor_count_sum_a) - SUM(A.total_visitor_count_sum_b)) / SUM(A.total_visitor_count_sum_b) * 100, 2), 0) total_visitor_count_rate,
	  IFNULL(TRUNCATE ((SUM(A.total_visitor_count_tourist_sum_a) - SUM(A.total_visitor_count_tourist_sum_b)) / SUM(A.total_visitor_count_tourist_sum_b) * 100, 2), 0) total_visitor_count_rate_tourist,
	  IFNULL(TRUNCATE ((SUM(A.total_pv_count_sum_a) - SUM(A.total_pv_count_sum_b)) / SUM(A.total_pv_count_sum_b) * 100, 2), 0) total_pv_count_rate,
	  IFNULL(TRUNCATE ((SUM(A.total_pv_count_tourist_sum_a) - SUM(A.total_pv_count_tourist_sum_b)) / SUM(A.total_pv_count_tourist_sum_b) * 100, 2), 0) total_pv_count_rate_tourist,
	  IFNULL(TRUNCATE ((SUM(A.pay_amount_sum_a) - SUM(A.pay_amount_sum_b)) / SUM(A.pay_amount_sum_b) * 100, 2), 0) pay_amount_rate,
	  IFNULL(TRUNCATE ((SUM(A.pay_combine_order_count_sum_a) - SUM(A.pay_combine_order_count_sum_b)) / SUM(A.pay_combine_order_count_sum_b) * 100, 2), 0) pay_combine_order_count_rate,
	  IFNULL(TRUNCATE ((SUM(A.pay_sub_order_count_sum_a) - SUM(A.pay_sub_order_count_sum_b)) / SUM(A.pay_sub_order_count_sum_b) * 100, 2), 0) pay_sub_order_count_rate,
	  IFNULL(TRUNCATE ((SUM(A.pay_product_count_sum_a) - SUM(A.pay_product_count_sum_b)) / SUM(A.pay_product_count_sum_b) * 100, 2), 0) pay_product_count_rate,
	  IFNULL(TRUNCATE ((SUM(A.pay_member_count_sum_a) - SUM(A.pay_member_count_sum_b)) / SUM(A.pay_member_count_sum_b) * 100, 2), 0) pay_member_count_rate,
	  IFNULL(TRUNCATE (SUM(A.total_pv_count_sum_a) / SUM(A.total_visitor_count_sum_a), 2), 0) pv,
	  IFNULL(TRUNCATE (SUM(A.total_pv_count_tourist_sum_a) / SUM(A.total_visitor_count_tourist_sum_a), 2), 0) pv_tourist,
	  IFNULL(TRUNCATE (SUM(A.pay_member_count_sum_a) / (SUM(A.total_visitor_count_sum_a)+SUM(A.total_visitor_count_tourist_sum_a)) * 100, 2), 0) cr
	FROM
		(
			SELECT
			  SUM(pps.total_visitor_count) total_visitor_count_sum_a,
			  SUM(pps.total_visitor_count_tourist) total_visitor_count_tourist_sum_a,
			  SUM(pps.total_pv_count) total_pv_count_sum_a,
			  SUM(pps.total_pv_count_tourist) total_pv_count_tourist_sum_a,
			  SUM(pps.pay_amount) pay_amount_sum_a,
			  SUM(pps.pay_combine_order_count) pay_combine_order_count_sum_a,
			  SUM(pps.pay_sub_order_count) pay_sub_order_count_sum_a,
			  SUM(pps.pay_product_count) pay_product_count_sum_a,
			  SUM(pps.pay_member_count) pay_member_count_sum_a,
			  0 total_visitor_count_sum_b,
			  0 total_visitor_count_tourist_sum_b,
			  0 total_pv_count_sum_b,
			  0 total_pv_count_tourist_sum_b,
			  0.00 pay_amount_sum_b,
			  0 pay_combine_order_count_sum_b,
			  0 pay_sub_order_count_sum_b,
			  0 pay_product_count_sum_b,
			  0 pay_member_count_sum_b
			FROM
				bu_platform_pv_statistical pps
			WHERE
				pps.del_flag = '0'
		 	<if test="clientSource != null and clientSource != ''" >
		 		AND pps.client_source = #{clientSource}
		 	</if>
			AND pps.statistical_date BETWEEN #{statisticsBeginDate}
			AND #{statisticsEndDate}
			UNION ALL
				SELECT
				  0 total_visitor_count_sum_a,
				  0 total_visitor_count_tourist_sum_a,
				  0 total_pv_count_sum_a,
				  0 total_pv_count_tourist_sum_a,
				  0.00 pay_amount_sum_a,
				  0 pay_combine_order_count_sum_a,
				  0 pay_sub_order_count_sum_a,
				  0 pay_product_count_sum_a,
				  0 pay_member_count_sum_a,
				  SUM(pps.total_visitor_count) total_visitor_count_sum_b,
				  SUM(pps.total_visitor_count_tourist) total_visitor_count_tourist_sum_b,
				  SUM(pps.total_pv_count) total_pv_count_sum_b,
				  SUM(pps.total_pv_count_tourist) total_pv_count_tourist_sum_b,
				  SUM(pps.pay_amount) pay_amount_sum_b,
				  SUM(pps.pay_combine_order_count) pay_combine_order_count_sum_b,
				  SUM(pps.pay_sub_order_count) pay_sub_order_count_sum_b,
				  SUM(pps.pay_product_count) pay_product_count_sum_b,
				  SUM(pps.pay_member_count) pay_member_count_sum_b
				FROM
					bu_platform_pv_statistical pps
				WHERE
					pps.del_flag = '0'
				<if test="clientSource != null and clientSource != ''" >
			 		AND pps.client_source = #{clientSource}
			 	</if>
				AND pps.statistical_date BETWEEN #{comparisonBeginDate}
				AND #{comparisonEndDate}
		) A
  </select>
  
	<!-- 历史页面分析 -->
	<select id="getPlatformPvStatisticalMSAList" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			mp.page_classify,
			FUN_GET_STATUS_DESC ('BU_MEMBER_PV', 'PAGE_CLASSIFY', mp.page_classify) page_classify_desc,
			IFNULL(TRUNCATE (SUM(mp.stay_time) / 1000 / COUNT(1), 1), 0) stay_time_avg,
			0 pay_member_count,
			0 member_pv_count,
			COUNT(DISTINCT mp.member_id) member_count,
			COUNT(mp.member_id) total_pv_count,
			COUNT(DISTINCT IF(mp.member_id IS NOT NULL, NULL, mp.device_number)) member_count_tourist,
			COUNT(1)-COUNT(mp.member_id) total_pv_count_tourist
		FROM
			bu_member_pv mp
		WHERE
			mp.del_flag = '0'
		<if test="clientSource != null and clientSource != ''" >
			AND mp.client_source = #{clientSource}
		</if>
		AND mp.create_date BETWEEN #{statisticsBeginDate}
		AND #{statisticsEndDate}
		AND mp.page_classify IS NOT NULL
		GROUP BY
			page_classify
		ORDER BY
			total_pv_count DESC
	</select>
	<select id="getPlatformPvMemberIdCountList" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			a.page_classify page_classify,
			COUNT(DISTINCT t.member_id) count
		FROM
			bu_combine_order t INNER JOIN
			(
				SELECT DISTINCT
					mp.member_id,
					mp.page_classify
				FROM
					bu_member_pv mp
				WHERE
					mp.del_flag = '0'
				<if test="clientSource != null and clientSource != ''" >
					AND mp.client_source = #{clientSource}
				</if>
				AND mp.create_date BETWEEN #{statisticsBeginDate}
				AND #{statisticsEndDate}
				AND mp.member_id IS NOT NULL
				AND mp.page_classify IS NOT NULL
			) a ON t.member_id = a.member_id
		WHERE
			t.del_flag = '0'
		AND t.`status` = '1'
		AND t.pay_date BETWEEN #{statisticsBeginDate}
		AND #{statisticsEndDate}
		GROUP BY
			page_classify
	</select>
	<select id="getPlatformPvPvIdCountList" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			a.page_classify page_classify,
			COUNT(1) count
		FROM
			bu_member_pv t
		INNER JOIN bu_member_pv a ON t.from_pv_id = a.pv_id
		WHERE
			t.del_flag = '0'
		<if test="clientSource != null and clientSource != ''" >
			AND t.client_source = #{clientSource}
		</if>
		AND t.create_date BETWEEN #{statisticsBeginDate}
		AND #{statisticsEndDate}
		AND a.del_flag = '0'
		<if test="clientSource != null and clientSource != ''" >
			AND a.client_source = #{clientSource}
		</if>
		AND a.create_date BETWEEN #{statisticsBeginDate}
		AND #{statisticsEndDate}
		GROUP BY
			page_classify
	</select>
	<!-- 上游 -->
	<select id="getPlatformPvStatisticalUpstreamList" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			<if test="totalCount == null" >
				FUN_GET_STATUS_DESC ('BU_MEMBER_PV', 'PAGE_CLASSIFY', pv2.page_classify) page_classify_desc,
			</if>
			COUNT(DISTINCT pv2.member_id) total_visitor_count,
			COUNT(pv2.member_id) total_pv_count,
			COUNT(DISTINCT IF(pv2.member_id IS NOT NULL,NULL,pv2.device_number)) total_visitor_count_tourist,
			COUNT(1)-COUNT(pv2.member_id) total_pv_count_tourist
		FROM
			bu_member_pv pv1
		JOIN bu_member_pv pv2 ON pv1.from_pv_id = pv2.pv_id
		WHERE
			pv1.del_flag = '0'
		AND pv1.page_classify = #{pageClassify}
		<if test="clientSource != null and clientSource != ''" >
			AND pv1.client_source = #{clientSource}
		</if>
		AND pv1.create_date BETWEEN #{statisticsBeginDate}
		AND #{statisticsEndDate}
		AND pv2.del_flag = '0'
		<if test="totalCount == null" >
			GROUP BY
				pv2.page_classify
		</if>
	</select>
	<!-- 下游 -->
	<select id="getPlatformPvStatisticalDownstreamList" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			<if test="totalCount == null" >
				FUN_GET_STATUS_DESC ('BU_MEMBER_PV', 'PAGE_CLASSIFY', pv2.page_classify) page_classify_desc,
			</if>
			COUNT(DISTINCT pv2.member_id) total_visitor_count,
			COUNT(pv2.member_id) total_pv_count,
			COUNT(DISTINCT IF(pv2.member_id IS NOT NULL,NULL,pv2.device_number)) total_visitor_count_tourist,
			COUNT(1)-COUNT(pv2.member_id) total_pv_count_tourist
		FROM
			bu_member_pv pv1
		JOIN bu_member_pv pv2 ON pv1.pv_id = pv2.from_pv_id
		WHERE
			pv1.del_flag = '0'
		AND pv1.page_classify = #{pageClassify}
		<if test="clientSource != null and clientSource != ''" >
			AND pv1.client_source = #{clientSource}
		</if>
		AND pv1.create_date BETWEEN #{statisticsBeginDate}
		AND #{statisticsEndDate}
		AND pv2.del_flag = '0'
		<if test="totalCount == null" >
			GROUP BY
				pv2.page_classify
		</if>
	</select>
  
	<!-- 详情 -->
	<select id="getPlatformPvStatisticalDtlList" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			mp.value_id,
			mp.page_type,
			FUN_GET_STATUS_DESC ('BU_MEMBER_PV', 'PAGE_TYPE', mp.page_type) page_type_desc,
			COUNT(
				DISTINCT (
					SELECT DISTINCT
					co.member_id
					FROM
					bu_combine_order co
					WHERE
					co.del_flag = '0'
					AND co.status = '1'
					AND co.pay_date BETWEEN #{statisticsBeginDate}
					AND #{statisticsEndDate}
					AND co.member_id = mp.member_id
				)
			) total_pay_member_count,
			COUNT(DISTINCT mp.member_id) total_visitor_count,
			COUNT(mp.member_id) total_pv_count,
			COUNT(DISTINCT IF(mp.member_id IS NOT NULL, NULL, mp.device_number)) total_visitor_count_tourist,
			COUNT(1)-COUNT(mp.member_id) total_pv_count_tourist,
			IFNULL(
				SUM(
					(
						SELECT
							COUNT(pv.id)
						FROM
							bu_member_pv pv
						WHERE
							pv.del_flag = '0'
						AND pv.create_date BETWEEN #{statisticsBeginDate}
						AND #{statisticsEndDate}
						AND pv.from_pv_id = mp.pv_id
					)
				),
				0
			) member_pv_count,
			IFNULL(TRUNCATE (SUM(mp.stay_time) / 1000 / COUNT(1), 1), 0) stay_time_avg,
			'0.00%' total_pv_rate
		FROM
			bu_member_pv mp
		WHERE
			mp.del_flag = '0'
		<if test="clientSource != null and clientSource != ''" >
			AND mp.client_source = #{clientSource}
		</if>
		AND mp.page_classify = #{pageClassify}
		AND mp.create_date BETWEEN #{statisticsBeginDate}
		AND #{statisticsEndDate}
		<if test="pageType != null" >
			AND mp.page_type != #{pageType}
		</if>
		<if test="valueId != null" >
			AND mp.value_id IS NOT NULL
		</if>
		AND mp.page_type IS NOT NULL
		GROUP BY
		<if test="valueId != null" >
			page_type, value_id
		</if>
		<if test="valueId == null" >
			page_type
		</if>
		<if test="valueId != null" >
			ORDER BY total_pv_count DESC, value_id DESC
		</if>
		<if test="valueId == null" >
			ORDER BY total_pv_count DESC
		</if>
		LIMIT #{limitStart} , #{limitSize}
	</select>

	<select id="getPlatformPvStatisticalDtlCount" parameterType="java.util.Map" resultType="java.lang.Integer" >
		SELECT
			COUNT(A.page_type)
		FROM
		(
			SELECT
				page_type,
				value_id
			FROM
				bu_member_pv mp
			WHERE
				mp.del_flag = '0'
			<if test="clientSource != null and clientSource != ''" >
				AND mp.client_source = #{clientSource}
			</if>
			AND mp.page_classify = #{pageClassify}
			AND mp.create_date BETWEEN #{statisticsBeginDate}
			AND #{statisticsEndDate}
			<if test="pageType != null" >
				AND mp.page_type != #{pageType}
			</if>
			GROUP BY
			<if test="valueId != null" >
				page_type, value_id
			</if>
			<if test="valueId == null" >
				page_type
			</if>
		) A
	</select>
  
  <!-- 商品流量相关 -->
  <select id="getFlowProductPvMap" parameterType="java.util.Map" resultType="java.util.Map" >
  	SELECT
		IFNULL(SUM(A.total_visitor_count_a), 0) total_visitor_count_a,
		IFNULL(SUM(A.total_pv_count_a), 0) total_pv_count_a,
	  	IFNULL(SUM(A.total_visitor_count_tourist_a), 0) total_visitor_count_tourist_a,
	  	IFNULL(SUM(A.total_pv_count_tourist_a), 0) total_pv_count_tourist_a,
		IFNULL(SUM(A.total_product_count_a), 0) total_product_count_a,
		IFNULL(SUM(A.total_visitor_count_b), 0) total_visitor_count_b,
		IFNULL(SUM(A.total_pv_count_b), 0) total_pv_count_b,
	  	IFNULL(SUM(A.total_visitor_count_tourist_b), 0) total_visitor_count_tourist_b,
	  	IFNULL(SUM(A.total_pv_count_tourist_b), 0) total_pv_count_tourist_b,
		IFNULL(SUM(A.total_product_count_b), 0) total_product_count_b,
		IFNULL(TRUNCATE ((SUM(A.total_visitor_count_a) - SUM(A.total_visitor_count_b)) / SUM(A.total_visitor_count_b) * 100, 2), 0) total_visitor_count_rate,
		IFNULL(TRUNCATE ((SUM(A.total_pv_count_a) - SUM(A.total_pv_count_b)) / SUM(A.total_pv_count_b) * 100, 2), 0) total_pv_count_rate,
		IFNULL(TRUNCATE ((SUM(A.total_visitor_count_tourist_a) - SUM(A.total_visitor_count_tourist_b)) / SUM(A.total_visitor_count_tourist_b) * 100, 2), 0) total_visitor_count_tourist_rate,
		IFNULL(TRUNCATE ((SUM(A.total_pv_count_tourist_a) - SUM(A.total_pv_count_tourist_b)) / SUM(A.total_pv_count_tourist_b) * 100, 2), 0) total_pv_count_tourist_rate,
		IFNULL(TRUNCATE ((SUM(A.total_product_count_a) - SUM(A.total_product_count_b)) / SUM(A.total_product_count_b) * 100, 2), 0) total_product_count_rate
	FROM
		(
			SELECT
				COUNT(DISTINCT pv.member_id) total_visitor_count_a,
				COUNT(pv.member_id) total_pv_count_a,
			  	COUNT(DISTINCT IF(pv.member_id IS NOT NULL,NULL,pv.device_number)) total_visitor_count_tourist_a,
			  	COUNT(1)-COUNT(pv.member_id) total_pv_count_tourist_a,
				COUNT(DISTINCT pv.value_id) total_product_count_a,
				0 total_visitor_count_b,
				0 total_pv_count_b,
	  			0 total_visitor_count_tourist_b,
	  			0 total_pv_count_tourist_b,
				0 total_product_count_b
			FROM
				bu_member_pv pv
			WHERE
				pv.del_flag = '0'
			AND pv.page_type = '29'
			AND pv.create_date BETWEEN #{statisticsBeginDate}
			AND #{statisticsEndDate}
			<if test="clientSource != null and clientSource != ''" >
				AND pv.client_source = #{clientSource}
			</if>
			UNION ALL
				SELECT
					0 total_visitor_count_a,
					0 total_pv_count_a,
	  				0 total_visitor_count_tourist_a,
	  				0 total_pv_count_tourist_a,
					0 total_product_count_a,
					COUNT(DISTINCT pv.member_id) total_visitor_count_b,
					COUNT(pv.member_id) total_pv_count_b,
	  				COUNT(DISTINCT IF(pv.member_id IS NOT NULL,NULL,pv.device_number)) total_visitor_count_tourist_b,
	  				COUNT(1)-COUNT(pv.member_id) total_pv_count_tourist_b,
					COUNT(DISTINCT pv.value_id) total_product_count_b
				FROM
					bu_member_pv pv
				WHERE
					pv.del_flag = '0'
				AND pv.page_type = '29'
				AND pv.create_date BETWEEN #{comparisonBeginDate}
				AND #{comparisonEndDate}
				<if test="clientSource != null and clientSource != ''" >
					AND pv.client_source = #{clientSource}
				</if>
		) A
  </select>
  
  <!-- 商品相关 -->
  <select id="getProductPvMap" parameterType="java.util.Map" resultType="java.util.Map" >
  	SELECT
		IFNULL(SUM(T.member_remind_count_a), 0) member_remind_count_a,
		IFNULL(SUM(T.shopping_cart_quantity_sum_a), 0) shopping_cart_quantity_sum_a,
		IFNULL(SUM(T.order_dtl_quantity_sum_a), 0) order_dtl_quantity_sum_a,
		IFNULL(SUM(T.pay_product_sum_a), 0) pay_product_sum_a,
		IFNULL(SUM(T.member_remind_count_b), 0) member_remind_count_b,
		IFNULL(SUM(T.shopping_cart_quantity_sum_b), 0) shopping_cart_quantity_sum_b,
		IFNULL(SUM(T.order_dtl_quantity_sum_b), 0) order_dtl_quantity_sum_b,
		IFNULL(SUM(T.pay_product_sum_b), 0) pay_product_sum_b,
		IFNULL(TRUNCATE ((SUM(T.member_remind_count_a) - SUM(T.member_remind_count_b)) / SUM(T.member_remind_count_b) * 100, 2), 0) member_remind_count_rate,
		IFNULL(TRUNCATE ((SUM(T.shopping_cart_quantity_sum_a) - SUM(T.shopping_cart_quantity_sum_b)) / SUM(T.shopping_cart_quantity_sum_b) * 100, 2), 0) shopping_cart_quantity_sum_rate,
		IFNULL(TRUNCATE ((SUM(T.order_dtl_quantity_sum_a) - SUM(T.order_dtl_quantity_sum_b)) / SUM(T.order_dtl_quantity_sum_b) * 100, 2), 0) order_dtl_quantity_sum_rate,
		IFNULL(TRUNCATE ((SUM(T.pay_product_sum_a) - SUM(T.pay_product_sum_b)) / SUM(T.pay_product_sum_b) * 100, 2), 0) pay_product_sum_rate
	FROM
		(
			SELECT
				member_remind_count_a,
				shopping_cart_quantity_sum_a,
				order_dtl_quantity_sum_a,
				pay_product_sum_a,
				0 member_remind_count_b,
				0 shopping_cart_quantity_sum_b,
				0 order_dtl_quantity_sum_b,
				0 pay_product_sum_b
			FROM
				(
					SELECT DISTINCT
						pv.value_id
					FROM
						bu_member_pv pv
					WHERE
						pv.del_flag = '0'
					AND pv.page_classify = '10'
					AND pv.page_type = '29'
					<if test="clientSource != null and clientSource != ''" >
					  AND pv.client_source = #{clientSource}
					</if>
					AND pv.create_date BETWEEN #{statisticsBeginDate}
	  				AND #{statisticsEndDate}
				) A
				LEFT JOIN
				(
					SELECT
						mr.remind_id,
						COUNT(DISTINCT mr.member_id) member_remind_count_a
					FROM
						bu_member_remind mr
					WHERE
						mr.del_flag = '0'
					AND mr.remind_type = '2'
					AND mr.create_date BETWEEN #{statisticsBeginDate}
	  				AND #{statisticsEndDate}
					GROUP BY remind_id
				) B ON A.value_id = B.remind_id
				LEFT JOIN
				(
					SELECT
						p.product_id,
						SUM(s.quantity) shopping_cart_quantity_sum_a
					FROM
						bu_shopping_cart s,
						bu_product_item p
					WHERE
						s.product_item_id = p.id
					AND s.del_flag = '0'
					AND s.create_date BETWEEN #{statisticsBeginDate}
	  				AND #{statisticsEndDate}
					AND p.del_flag = '0'
					GROUP BY product_id
				) C ON A.value_id = C.product_id
				LEFT JOIN
				(
					SELECT
						od.product_id,
						SUM(od.quantity) order_dtl_quantity_sum_a
					FROM
						bu_order_dtl od
					WHERE
						od.del_flag = '0'
					AND od.create_date BETWEEN #{statisticsBeginDate}
					AND #{statisticsEndDate}
					GROUP BY product_id
				) D ON A.value_id = D.product_id
				LEFT JOIN
				(
					SELECT
						od.product_id,
						SUM(od.quantity) pay_product_sum_a
					FROM
						bu_combine_order co,
						bu_sub_order so,
						bu_order_dtl od
					WHERE
						co.id = so.combine_order_id
					AND so.id = od.sub_order_id
					AND co.del_flag = '0'
					AND co.status = '1'
					AND co.pay_date BETWEEN #{statisticsBeginDate}
	  				AND #{statisticsEndDate}
					AND so.del_flag = '0'
					AND od.del_flag = '0'
					GROUP BY product_id
				) E ON A.value_id = E.product_id
			UNION ALL
				SELECT
					0 member_remind_count_a,
					0 shopping_cart_quantity_sum_a,
					0 order_dtl_quantity_sum_a,
					0 pay_product_sum_a,
					member_remind_count_b,
					shopping_cart_quantity_sum_b,
					order_dtl_quantity_sum_b,
					pay_product_sum_b
				FROM
					(
						SELECT DISTINCT
							pv.value_id
						FROM
							bu_member_pv pv
						WHERE
							pv.del_flag = '0'
						AND pv.page_classify = '10'
						AND pv.page_type = '29'
						<if test="clientSource != null and clientSource != ''" >
						  AND pv.client_source = #{clientSource}
						</if>
						AND pv.create_date BETWEEN #{statisticsBeginDate}
						AND #{statisticsEndDate}
					) A
					LEFT JOIN
					(
						SELECT
							mr.remind_id,
							COUNT(DISTINCT mr.member_id) member_remind_count_b
						FROM
							bu_member_remind mr
						WHERE
							mr.del_flag = '0'
						AND mr.remind_type = '2'
						AND mr.create_date BETWEEN #{statisticsBeginDate}
						AND #{statisticsEndDate}
						GROUP BY remind_id
					) B ON A.value_id = B.remind_id
					LEFT JOIN
					(
						SELECT
							p.product_id,
							SUM(s.quantity) shopping_cart_quantity_sum_b
						FROM
							bu_shopping_cart s,
							bu_product_item p
						WHERE
							s.product_item_id = p.id
						AND s.del_flag = '0'
						AND s.create_date BETWEEN #{statisticsBeginDate}
						AND #{statisticsEndDate}
						AND p.del_flag = '0'
						GROUP BY product_id
					) C ON A.value_id = C.product_id
					LEFT JOIN
					(
						SELECT
							od.product_id,
							SUM(od.quantity) order_dtl_quantity_sum_b
						FROM
							bu_order_dtl od
						WHERE
							od.del_flag = '0'
						AND od.create_date BETWEEN #{statisticsBeginDate}
						AND #{statisticsEndDate}
						GROUP BY product_id
					) D ON A.value_id = D.product_id
					LEFT JOIN
					(
						SELECT
							od.product_id,
							SUM(od.quantity) pay_product_sum_b
						FROM
							bu_combine_order co,
							bu_sub_order so,
							bu_order_dtl od
						WHERE
							co.id = so.combine_order_id
						AND so.id = od.sub_order_id
						AND co.del_flag = '0'
						AND co.status = '1'
						AND co.pay_date BETWEEN #{statisticsBeginDate}
						AND #{statisticsEndDate}
						AND so.del_flag = '0'
						AND od.del_flag = '0'
						GROUP BY product_id
					) E ON A.value_id = E.product_id
			) T
  </select>
  
	<!-- 商品效果明细 -->
	<select id="getProductPvList" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT
			A.*,
			(
				SELECT
					COUNT(DISTINCT mr.member_id)
				FROM
					bu_member_remind mr
				WHERE
					mr.del_flag = '0'
				AND mr.remind_type = '2'
				AND mr.create_date BETWEEN #{statisticsBeginDate}
				AND #{statisticsEndDate}
				AND mr.remind_id = A.product_id
			) member_remind_count,
			(
				SELECT
					IFNULL(SUM(sc.quantity), 0)
				FROM
					bu_shopping_cart sc, bu_product_item pi
				WHERE
					sc.product_item_id = pi.id
				AND sc.del_flag = '0'
				AND sc.create_date BETWEEN #{statisticsBeginDate}
				AND #{statisticsEndDate}
				AND pi.del_flag = '0'
				AND pi.product_id = A.product_id
			) shopping_cart_quantity_sum,
			(
				SELECT
					IFNULL(SUM(od.quantity), 0)
				FROM
					bu_order_dtl od
				WHERE
					od.del_flag = '0'
				AND od.create_date BETWEEN #{statisticsBeginDate}
				AND #{statisticsEndDate}
				AND od.product_id = A.product_id
			) order_dtl_quantity_sum,
			(
				SELECT
					IFNULL(SUM(od.quantity), 0)
				FROM
					bu_combine_order co, bu_sub_order so, bu_order_dtl od
				WHERE
					co.id = so.combine_order_id
				AND so.id = od.sub_order_id
				AND co.del_flag = '0'
				AND co.status = '1'
				AND co.pay_date BETWEEN #{statisticsBeginDate}
				AND #{statisticsEndDate}
				AND so.del_flag = '0'
				AND od.del_flag = '0'
				AND od.product_id = A.product_id
			) pay_product_sum,
			(
				SELECT
					IFNULL(SUM(od.pay_amount), 0)
				FROM
					bu_combine_order co, bu_sub_order so, bu_order_dtl od
				WHERE
					co.id = so.combine_order_id
				AND so.id = od.sub_order_id
				AND co.del_flag = '0'
				AND co.status = '1'
				AND co.pay_date BETWEEN #{statisticsBeginDate}
				AND #{statisticsEndDate}
				AND so.del_flag = '0'
				AND od.del_flag = '0'
				AND od.product_id = A.product_id
			) pay_amount_sum
		FROM(
			SELECT
				p.id product_id,
				p.`name` product_name,
				p.`code` product_code,
				pc.pic product_pic,
				pt.name product_type_name,
				p.art_no product_art_no,
				COUNT(DISTINCT pv.member_id) total_visitor_count,
				COUNT(DISTINCT IF(pv.member_id IS NOT NULL, NULL, pv.device_number)) total_visitor_count_tourist,
				COUNT(pv.member_id) total_pv_count,
				COUNT(1)-COUNT(pv.member_id) total_pv_count_tourist
			FROM
				bu_member_pv pv,
				bu_product p,
				bu_product_type pt,
				bu_product_pic pc
			WHERE
				pv.value_id = p.id
			AND p.product_type1_id = pt.id
			AND p.id = pc.product_id
			AND pv.page_classify = '10'
			AND pv.page_type = '29'
			AND pv.create_date BETWEEN #{statisticsBeginDate}
			AND #{statisticsEndDate}
			<if test="clientSource != null and clientSource != ''" >
				AND pv.client_source = #{clientSource}
			</if>
			<if test="saleType != null and saleType != ''" >
				AND p.sale_type = #{saleType}
			</if>
			<if test="productName != null and productName != ''" >
				AND p.`name` LIKE #{productName}
			</if>
			<if test="productCode != null and productCode != ''" >
				AND p.`code` = #{productCode}
			</if>
			<if test="productTypeId != null and productTypeId != ''" >
				AND pt.id = #{productTypeId}
			</if>
			AND pc.is_default = '1'
			GROUP BY
			product_id
			<if test="orderByClause != null" >
				ORDER BY ${orderByClause}
			</if>
			<if test="limitStart != null and limitStart>=0" >
				LIMIT #{limitStart} , #{limitSize}
			</if>
		)A
	</select>
	<select id="getProductPvCount" parameterType="java.util.Map" resultType="java.lang.Integer" >
		SELECT
			COUNT(DISTINCT p.id)
		FROM
			bu_member_pv pv,
			bu_product p,
			bu_product_type pt,
			bu_product_pic pc
		WHERE
			pv.value_id = p.id
		AND p.product_type1_id = pt.id
		AND p.id = pc.product_id
		AND pv.page_classify = '10'
		AND pv.page_type = '29'
		AND pv.create_date BETWEEN #{statisticsBeginDate}
		AND #{statisticsEndDate}
		<if test="clientSource != null and clientSource != ''" >
			AND pv.client_source = #{clientSource}
		</if>
		<if test="saleType != null and saleType != ''" >
			AND p.sale_type = #{saleType}
		</if>
		<if test="productName != null and productName != ''" >
			AND p.`name` LIKE #{productName}
		</if>
		<if test="productCode != null and productCode != ''" >
			AND p.`code` = #{productCode}
		</if>
		<if test="productTypeId != null and productTypeId != ''" >
			AND pt.id = #{productTypeId}
		</if>
		AND pc.is_default = '1'
	</select>

	<select id="getShoppingCartId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT
			t.id
		FROM
			bu_shopping_cart t
		WHERE
			t.del_flag = '0'
		AND t.order_dtl_id = #{orderDtlId}
	</select>

	<select id="getColumnType" parameterType="java.lang.Integer" resultType="java.lang.String">
		SELECT
			t.column_type
		FROM
			bu_member_action t
		WHERE
			t.del_flag = '0'
		AND t.action_type in('14','15')
		AND t.action_item_id = #{shoppingCartId}
	</select>

  
</mapper>
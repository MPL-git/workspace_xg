<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.ProductCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.ProductCustom"  extends="com.jf.dao.ProductMapper.BaseResultMap">
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="product_brand_name" property="productBrandName" jdbcType="VARCHAR" />
    <result column="product_type_name" property="productTypeName" jdbcType="VARCHAR" />
    <result column="activity_status_desc" property="activityStatusDesc" jdbcType="VARCHAR" />
    <result column="mcht_name" property="mchtName" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="mcht_code" property="mchtCode" jdbcType="VARCHAR" />
    <result column="mcht_type" property="mchtType" jdbcType="CHAR" />
    <result column="status_desc" property="statusDesc" jdbcType="VARCHAR" />
    <result column="off_reason_desc" property="offReasonDesc" jdbcType="VARCHAR" />
    <result column="season_desc" property="seasonDesc" jdbcType="VARCHAR" />
    <result column="price_model" property="priceModel" jdbcType="VARCHAR" />
    <result column="price_model_desc" property="priceModelDesc" jdbcType="VARCHAR" />
    <result column="audit_status_desc" property="auditStatusDesc" jdbcType="VARCHAR" />
    <result column="sale_type_desc" property="saleTypeDesc" jdbcType="VARCHAR" />
    
    <result column="tag_price_min" property="tagPriceMin" jdbcType="DECIMAL" />
    <result column="sale_price_min" property="salePriceMin" jdbcType="DECIMAL" />
    <result column="mall_price_min" property="mallPriceMin" jdbcType="DECIMAL" />
    <result column="cost_price_min" property="costPriceMin" jdbcType="DECIMAL" />
    
    <result column="tag_price_max" property="tagPriceMax" jdbcType="DECIMAL" />
    <result column="sale_price_max" property="salePriceMax" jdbcType="DECIMAL" />
    <result column="mall_price_max" property="mallPriceMax" jdbcType="DECIMAL" />
    <result column="cost_price_max" property="costPriceMax" jdbcType="DECIMAL" />
    
    
    <result column="discount_max" property="discountMax" jdbcType="DECIMAL" />
    <result column="discount_min" property="discountMin" jdbcType="DECIMAL" />
    <result column="profitRate_max" property="profitRateMax" jdbcType="DECIMAL" />
    <result column="profitRate_min" property="profitRateMin" jdbcType="DECIMAL" />
    
    <result column="pop_commission_rate" property="popCommissionRate" jdbcType="DECIMAL" />
    <result column="product_activity_status" property="productActivityStatus" jdbcType="VARCHAR" />
    <result column="audit_by_name" property="auditByName" jdbcType="VARCHAR" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    
    <result column="product_type1_name" property="productType1Name" jdbcType="VARCHAR" />
    <result column="product_type2_name" property="productType2Name" jdbcType="VARCHAR" />
    <result column="support_quantity" property="supportQuantity" jdbcType="VARCHAR" />
    <result column="ac_type" property="acType" jdbcType="VARCHAR" />
    
    <result column="stock_sum" property="stockSum" jdbcType="INTEGER" />
    
	  <result column="yy_contact_name" property="yyContactName" jdbcType="VARCHAR" />

	  <result column="member_visitors_num" property="memberVisitorsNum" jdbcType="INTEGER" />
	  <result column="unmember_visitors_num" property="unmemberVisitorsNum" jdbcType="INTEGER" />
	  <result column="member_page_view" property="memberPageView" jdbcType="INTEGER" />
	  <result column="unmember_page_view" property="unmemberPageView" jdbcType="INTEGER" />
	  <result column="add_product_amount" property="addProductAmount" jdbcType="INTEGER" />
	  <result column="submit_order_amount" property="submitOrderAmount" jdbcType="INTEGER" />
	  <result column="payment_amount" property="paymentAmount" jdbcType="INTEGER" />
	  <result column="add_product_rate" property="addProductRate" jdbcType="VARCHAR" />
	  <result column="submit_order_rate" property="submitOrderRate" jdbcType="VARCHAR" />
	  <result column="payment_rate" property="paymentRate" jdbcType="VARCHAR" />
	  <result column="pay_money" property="payMoney" jdbcType="DECIMAL" />


  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jf.entity.ProductCustom" extends="BaseResultMap" >
    <result column="product_desc" property="productDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mcht_id, code, source, ref_id, name, status, off_reason, audit_status, audit_by, 
    audit_remarks, brand_id, product_type1_id, product_type2_id, product_type_id, art_no, 
    suit_sex, suit_group, year, season, limit_buy, cs_templet_id, remarks_color, sale_type, 
    del_date, is_single_prop, shop_product_custom_type_id_group, weights, is_activity, 
    is_show, min_sale_price_item_id, min_price_item_id, min_mall_price, min_sale_price, 
    min_tag_price, sale_weight, freight_template_id, is_shop_show, search_fields, third_platform_coupon_info, 
    sort, comment_weight, svip_discount,recommend_remarks,year_of_listing, shelf_life,create_by, create_date, update_by, update_date,
    remarks, del_flag,
    (select a.name from bu_product_brand a where a.id=brand_id) product_brand_name,
    (select a.name from bu_product_type a where a.id=product_type_id) product_type_name,
    (select a.short_name from bu_mcht_info a where a.id=mcht_id) mcht_name,
    (select a.company_name from bu_mcht_info a where a.id=mcht_id) company_name,
    (select a.shop_name from bu_mcht_info a where a.id=mcht_id) shop_name,
    (select a.mcht_code from bu_mcht_info a where a.id=mcht_id) mcht_code,
    (select a.mcht_type from bu_mcht_info a where a.id=mcht_id) mcht_type,
    (select a.pop_commission_rate from bu_mcht_product_brand a, bu_product_brand pb where a.mcht_id=t.mcht_id and a.product_brand_id=t.brand_id and a.product_brand_id = pb.id and pb.status='1' and pb.del_flag='0' and a.del_flag='0' and a.status='1' and a.audit_status='3') pop_commission_rate,
    FUN_GET_STATUS_DESC("BU_PRODUCT","STATUS", t.status) status_desc,
    FUN_GET_STATUS_DESC("BU_PRODUCT","OFF_REASON", t.off_reason) off_reason_desc,
    FUN_GET_STATUS_DESC("BU_PRODUCT","SEASON", t.season) season_desc,
    FUN_GET_STATUS_DESC("BU_PRODUCT","AUDIT_STATUS", t.audit_status) audit_status_desc,
    FUN_GET_STATUS_DESC("BU_PRODUCT","SALE_TYPE", t.sale_type) sale_type_desc,
    FUN_GET_STATUS_DESC("BU_MCHT_PRODUCT_BRAND","PRICE_MODEL", (select a.price_model from bu_mcht_product_brand a where a.mcht_id=t.mcht_id and a.product_brand_id=t.brand_id and a.del_flag='0' and a.status='1' and a.audit_status='3') ) price_model,
    (select a.price_model_desc from bu_mcht_product_brand a where a.mcht_id=t.mcht_id and a.product_brand_id=t.brand_id and a.del_flag='0' and a.status='1' and a.audit_status='3') price_model_desc,
    (select min(a.tag_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') tag_price_min,
    (select min(a.cost_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') cost_price_min,
    (select min(a.sale_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') sale_price_min,
    (select min(a.mall_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') mall_price_min,
    (select max(a.tag_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') tag_price_max,
    (select max(a.cost_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') cost_price_max,
    (select max(a.sale_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') sale_price_max,
    (select max(a.mall_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') mall_price_max,
    (select ROUND(max(a.sale_price/a.tag_price)*10,1) from bu_product_item a where a.product_id=t.id and a.del_flag='0') discount_max,
    (select ROUND(min(a.sale_price/a.tag_price)*10,1) from bu_product_item a where a.product_id=t.id and a.del_flag='0') discount_min,
    (select ROUND(max((a.sale_price*t.svip_discount-a.cost_price)/a.sale_price),3) from bu_product_item a where a.product_id=t.id and a.del_flag='0') profitRate_max,
    (select ROUND(min((a.sale_price*t.svip_discount-a.cost_price)/a.sale_price),3) from bu_product_item a where a.product_id=t.id and a.del_flag='0') profitRate_min,
    (select a.pic from bu_product_pic a where a.product_id=t.id and a.del_flag='0' and a.is_default=1 order by a.id desc limit 1) pic,
    FUN_GET_PRODUCT_ACTIVITY_STATUS(t.id) product_activity_status,
    (select s.staff_name from sys_staff_info s where s.staff_id = t.audit_by) audit_by_name,
    (select IFNULL(SUM(bpi.stock-bpi.locked_amount),0) from bu_product_item bpi where bpi.del_flag='0' and bpi.product_id=t.id) stock,
    (select a.name from bu_product_type a where a.id=product_type1_id) product_type1_name,
    (select a.name from bu_product_type a where a.id=product_type2_id) product_type2_name,
    (select sn.support_quantity from bu_source_niche sn where sn.link_id=t.id and sn.type='1' and sn.del_flag='0' order by sn.id desc limit 1)support_quantity,
  	<![CDATA[
  	(SELECT spa.type FROM bu_single_product_activity spa WHERE spa.product_id = t.id and spa.begin_time <= NOW( ) AND spa.end_time >= NOW( ) AND spa.audit_status = '3' AND spa.`status` = '1' AND spa.is_close = '0' AND spa.del_flag = '0' ORDER BY spa.id DESC LIMIT 1) ac_type,
  	]]>
    (select IFNULL(SUM(bp.stock), 0) from bu_product_item bp where t.id = bp.product_id and bp.del_flag = '0') stock_sum, <!--库存  -->
  	(select c.contact_name from bu_platform_contact c,bu_mcht_platform_contact b where c.id = b.platform_contact_id and b.mcht_id = t.mcht_id and c.contact_type = '2' and b.del_flag='0' and c.del_flag='0' and b.status='1' and c.status='0' LIMIT 1) yy_contact_name   
  </sql>
  <sql id="Blob_Column_List" >
    product_desc
  </sql>
  <sql id="ProductSort_Column_List">
  	t.*,
  	(select a.pic from bu_product_pic a where a.product_id=t.id and a.del_flag='0' and a.is_default=1) pic,
  	(select a.name from bu_product_brand a where a.id=brand_id) product_brand_name,
  	(select IFNULL(pw.season_weight,0) from bu_product_weight pw where pw.product_id = t.id and pw.del_flag='0')season_weight,
  	(select IFNULL(pw.sale_weight,0) from bu_product_weight pw where pw.product_id = t.id and pw.del_flag='0')sale_weight,
  	(select IFNULL(pw.pv_weight,0) from bu_product_weight pw where pw.product_id = t.id and pw.del_flag='0')pv_weight,
  	(select IFNULL(pw.mcht_grade_weight,0) from bu_product_weight pw where pw.product_id = t.id and pw.del_flag='0')mcht_grade_weight,
  	(select IFNULL(pw.brand_grade_weight,0) from bu_product_weight pw where pw.product_id = t.id and pw.del_flag='0')brand_grade_weight,
  	(select IFNULL(pw.manual_weight,0) from bu_product_weight pw where pw.product_id = t.id and pw.del_flag='0')manual_weight,
  	(select IFNULL(pw.sale_amount_weight,0) from bu_product_weight pw where pw.product_id = t.id and pw.del_flag='0')sale_amount_weight,
  	(select IFNULL(pw.comment_weight,0) from bu_product_weight pw where pw.product_id = t.id and pw.del_flag='0')product_weight,
  	(select a.name from bu_product_type a where a.id=t.product_type_id) product_type_name,
  	FUN_GET_STATUS_DESC("BU_PRODUCT","SUIT_SEX", t.suit_sex) suit_sex_desc,
  	FUN_GET_STATUS_DESC("BU_PRODUCT","SUIT_GROUP", t.suit_group) suit_group_desc,
  	(select min(a.tag_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') tag_price_min,
  	(select max(a.tag_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') tag_price_max,
  	(select min(a.mall_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') mall_price_min,
  	(select max(a.mall_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') mall_price_max,
  	(select min(a.sale_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') sale_price_min,
  	(select max(a.sale_price) from bu_product_item a where a.product_id=t.id and a.del_flag='0') sale_price_max,
  	FUN_GET_STATUS_DESC("BU_PRODUCT","STATUS", t.status) status_desc,
  	FUN_GET_STATUS_DESC("BU_PRODUCT","IS_SHOW", t.is_show) is_show_desc
  
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jf.entity.ProductCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bu_product t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.ProductCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_product t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="productBrandName!=null">
		AND t.brand_id in (<![CDATA[select id from bu_product_brand pb where pb.del_flag='0' and (pb.name = #{productBrandName} or pb.name_zh = #{productBrandName} or pb.name_en = #{productBrandName})]]>)
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>

  </select>

	<select id="selectRecommendedProductCustomByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.ProductCustomExample" >
		select
		<include refid="Base_Column_List" />
		from (select
		<if test="distinct" >
			distinct
		</if>
		p.*
		from bu_product p
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
		<if test="productBrandName!=null">
			AND t.brand_id in (<![CDATA[select id from bu_product_brand pb where pb.del_flag='0' and (pb.name = #{productBrandName} or pb.name_zh = #{productBrandName} or pb.name_en = #{productBrandName})]]>)
		</if>
		<if test="orderByClause != null" >
			order by ${orderByClause}
		</if>
		<if test="limitStart != null and limitStart>=0" >
			limit #{limitStart} , #{limitSize}
		</if>) t

	</select>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bu_product t
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="countByExample" parameterType="com.jf.entity.ProductCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_product t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="productBrandName!=null">
		AND t.brand_id in (<![CDATA[select id from bu_product_brand pb where pb.del_flag='0' and (pb.name = #{productBrandName} or pb.name_zh = #{productBrandName} or pb.name_en = #{productBrandName})]]>)
    </if>

  </select>
  
  <select id="getProductPropByProductId" parameterType="int" resultMap="com.jf.dao.ProductPropMapper.BaseResultMap">
	SELECT a.* FROM bu_product_prop a WHERE a.id IN (SELECT b.prop_id FROM bu_product_prop_value b WHERE FIND_IN_SET(b.id,( SELECT c.prop_val_id FROM bu_product_item c WHERE c.product_id = #{productId,jdbcType=INTEGER} AND c.del_flag = '0' LIMIT 1)))
  </select>
  <select id="getProductPropNameByProductId" parameterType="int" resultType="java.util.HashMap">
  	select d.prop_id,(select a.name from bu_product_prop a where a.id=d.prop_id) prop_name,group_concat(d.prop_value SEPARATOR " ") prop_value_str from (select distinct b.prop_id,b.prop_value from bu_product_prop_value b,bu_product_item c  where FIND_IN_SET(b.id,c.prop_val_id) and c.product_id = #{productId,jdbcType=INTEGER} and c.del_flag = '0') d group by d.prop_id;
  </select>
  <select id="getActivityIdsByProductId" parameterType="int" resultType="java.lang.String">
  	select GROUP_CONCAT(IFNULL(a.id,"")) from bu_activity_area aa,bu_activity a,bu_activity_product ap where aa.id = a.activity_area_id and a.id = ap.activity_id and aa.source = '2' and ap.product_id = #{productId} and ap.del_flag='0' and a.del_flag='0' and aa.del_flag='0' order by a.id desc limit 15
  </select>
  <select id="getLastActivityIdByProductId" parameterType="int" resultType="java.util.HashMap">
  	select aa.source,aa.id as activityAreaId,a.id as activityId from bu_activity_area aa,bu_activity a,bu_activity_product ap where aa.id = a.activity_area_id and a.id = ap.activity_id and ap.product_id = #{productId} and ap.del_flag='0' and a.del_flag='0' and aa.del_flag='0' and FUN_GET_PRODUCT_ACTIVITY_STATUS(#{productId})!='0' and aa.activity_end_time>now() order by ap.id desc limit 1
  </select>
  <select id="getLastSingleProductActivityIdByProductId" parameterType="int" resultType="java.util.HashMap">
  	select FUN_GET_STATUS_DESC("BU_SINGLE_PRODUCT_ACTIVITY","TYPE", spa.type) as typeDesc,spa.id as singleProductActivityId from bu_single_product_activity spa where spa.product_id = #{productId} and spa.is_close = '0' and spa.del_flag = '0' and FUN_GET_PRODUCT_ACTIVITY_STATUS(#{productId})!='0' order by spa.id desc limit 1
  </select>
  <select id="getProductIds" parameterType="java.util.HashMap" resultType="java.lang.Integer">
  	SELECT
		p.id
	FROM
		bu_product p,
		bu_product_type pt,
		bu_product_type fpt
	WHERE
		p.product_type_id = pt.id
		AND pt.parent_id = fpt.id
		<if test="productType2Ids!=null">
			AND fpt.id IN
			<foreach collection="productType2Ids" item="listItem" open="(" close=")" separator="," >
				#{listItem}
	    	</foreach>
    	</if>
    	<if test="productType1Ids!=null">
			AND fpt.parent_id IN
			<foreach collection="productType1Ids" item="listItem" open="(" close=")" separator="," >
				#{listItem}
	    	</foreach>
    	</if>
    	<if test="productBrandIds!=null">
			AND p.brand_id IN
			<foreach collection="productBrandIds" item="listItem" open="(" close=")" separator="," >
				#{listItem}
    		</foreach> 
    	</if>
  </select>
  <select id="getProductIdsByCode" parameterType="java.lang.String" resultType="java.lang.Integer">
  	SELECT p.id FROM bu_product p WHERE p.del_flag='0' and FIND_IN_SET(p.`code`,#{codeStr}) 
  </select>
  
  
  <select id="getProductTypeAllChild" parameterType="java.lang.Integer" resultType="java.lang.String">
  	SELECT FUN_GET_PRODUCT_TYPE_All_CHILD (#{productTypeId})
  </select>
  
  <select id="getProductSortList" resultType="java.util.HashMap" parameterType="com.jf.entity.ProductCustomExample">
  	select
    <if test="distinct" >
      distinct
    </if>
    <include refid="ProductSort_Column_List" />
    from bu_product t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  
  
  <select id="selectProdutCopyLog" resultType="int">
  	SELECT log.product_id from bu_product_copy_log log where log.del_flag='0' and log.product_id in 
  	<foreach collection="productIds" item="listItem" open="(" close=")" separator="," >
				#{listItem}
	</foreach> 
	 and log.target_mcht_id = #{targetMchtId}
  </select>
  
  <select id="countMchtProductForm" parameterType="java.util.HashMap" resultType="java.lang.Integer" >
    SELECT
		COUNT(a.id)
	FROM
		bu_mcht_info a
	LEFT JOIN (
		SELECT
			t1.mcht_id,
			GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type1_str
		FROM
			(
			SELECT
				t1.mcht_id,
				t2.id,
				t2.NAME AS product_type_name,
				COUNT( t2.id ) AS product_type_count 
			FROM
				bu_product t1
				LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type1_id 
			WHERE
				t1.STATUS = "1"
				AND t1.audit_status = "2"  
				AND t1.sale_type = "1" 
				AND t2.STATUS = "1"
				AND t1.del_flag = "0" 
				AND t2.del_flag = "0"  
			GROUP BY
				t1.mcht_id,
				t2.id,
				t2.NAME 
			HAVING product_type_count > 0
			) t1
		<if test="type1Id != null and type1Id != ''">
			WHERE EXISTS (
					SELECT
						p1.id 
					FROM
						bu_product p1
						LEFT JOIN bu_product_type p2 ON p2.id = p1.product_type1_id 
					WHERE
						p1.STATUS = "1" 
						AND p1.audit_status = "2" 
						AND p1.sale_type = "1" 
						AND p2.STATUS = "1" 
						AND p1.del_flag = "0" 
						AND p2.del_flag = "0" 
						AND p1.product_type1_id = #{type1Id} 
						AND t1.mcht_id = p1.mcht_id 
				)
		</if> 
		GROUP BY
			t1.mcht_id
	) p1 ON p1.mcht_id = a.id
	LEFT JOIN (
		SELECT
			t1.mcht_id,
			GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type2_str
		FROM
			(
			SELECT
				t1.mcht_id,
				t2.id,
				t2.NAME AS product_type_name,
				COUNT( t2.id ) AS product_type_count 
			FROM
				bu_product t1
				LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type2_id 
			WHERE
				t1.STATUS = "1"
				AND t1.audit_status = "2" 
				AND t1.sale_type = "1" 
				AND t2.STATUS = "1" 
				AND t1.del_flag = "0" 
				AND t2.del_flag = "0" 
			GROUP BY
				t1.mcht_id,
				t2.id,
				t2.NAME
			HAVING product_type_count > 0 
			) t1 
		<if test="type2Id != null and type2Id != ''">
			WHERE EXISTS (
					SELECT
						p1.id 
					FROM
						bu_product p1
						LEFT JOIN bu_product_type p2 ON p2.id = p1.product_type2_id 
					WHERE
						p1.STATUS = "1" 
						AND p1.audit_status = "2" 
						AND p1.sale_type = "1" 
						AND p2.STATUS = "1" 
						AND p1.del_flag = "0" 
						AND p2.del_flag = "0" 
						AND p1.product_type2_id = #{type2Id} 
						AND t1.mcht_id = p1.mcht_id 
				)
		</if>
		GROUP BY
			t1.mcht_id
	) p2 ON p2.mcht_id = a.id
	LEFT JOIN (
		SELECT
			t1.mcht_id,
			GROUP_CONCAT( CONCAT_WS( ",", t1.product_brand_name, t1.product_brand_count ) ORDER BY t1.product_brand_id ASC SEPARATOR ";" ) AS brand_str
		FROM
			(
			SELECT
				t1.mcht_id,
				t2.product_brand_id,
				t3.name AS product_brand_name,
				COUNT( t2.product_brand_id ) AS product_brand_count 
			FROM
				bu_product t1
				LEFT JOIN bu_mcht_product_brand t2 ON t2.product_brand_id = t1.brand_id AND t2.mcht_id = t1.mcht_id
				LEFT JOIN bu_product_brand t3 ON t3.id = t1.brand_id
			WHERE
				t1.STATUS = "1" 
				AND t1.sale_type = "1" 
				AND t2.status = "1" 
				AND t2.audit_status = 3
				AND t1.del_flag = "0" 
				AND t2.del_flag = "0" 
			GROUP BY
				t1.mcht_id,
				t2.product_brand_id,
				t2.product_brand_name 
			HAVING product_brand_count > 0 
			) t1
		<if test="productBrandName != null and productBrandName != ''">
			WHERE EXISTS (
					SELECT
						p1.id
					FROM
						bu_product p1
						LEFT JOIN bu_mcht_product_brand p2 ON p2.product_brand_id = p1.brand_id AND p2.mcht_id = p1.mcht_id
						LEFT JOIN bu_product_brand p3 ON p3.id = p1.brand_id
					WHERE
						p1.STATUS = "1" 
						AND p1.sale_type = "1" 
						AND p2.status = "1" 
						AND p2.audit_status = 3
						AND p1.del_flag = "0" 
						AND p2.del_flag = "0" 
						AND p1.mcht_id = t1.mcht_id 
						and	(p3.name LIKE CONCAT("%", #{productBrandName}, "%") OR p3.name_zh LIKE CONCAT("%", #{productBrandName}, "%")
							OR p3.name_en LIKE CONCAT("%", #{productBrandName}, "%"))
				)
		</if> 
		GROUP BY
			t1.mcht_id
	) p3 ON p3.mcht_id = a.id
	WHERE a.STATUS = "1" 
	<if test="mchtCode != null and mchtCode != ''">
		and	a.mcht_code LIKE CONCAT("%", #{mchtCode}, "%")
	</if>
	<if test="shopName != null and shopName != ''">
		and	a.shop_name LIKE CONCAT("%", #{shopName}, "%")
	</if>
	<if test="type1Id != null and type1Id != ''">
		and p1.type1_str IS NOT NULL
	</if>
	<if test="type2Id != null and type2Id != ''">
		and p2.type2_str IS NOT NULL
	</if>
	<if test="productBrandName != null and productBrandName != ''">
		and p3.brand_str IS NOT NULL
	</if>
  </select>
  
  <select id="selectMchtProductForm" parameterType="java.util.HashMap" resultType="java.util.HashMap" >
    SELECT
		a.id,
		a.mcht_code AS mchtCode,
		a.company_name AS companyName,
		a.shop_name AS shopName,
		p1.type1_str AS type1Str,
		p2.type2_str AS type2Str,
		p3.brand_str AS brandStr
	FROM
		bu_mcht_info a
	LEFT JOIN (
		SELECT
			t1.mcht_id,
			GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type1_str
		FROM
			(
			SELECT
				t1.mcht_id,
				t2.id,
				t2.NAME AS product_type_name,
				COUNT( t2.id ) AS product_type_count 
			FROM
				bu_product t1
				LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type1_id 
			WHERE
				t1.STATUS = "1"
				AND t1.audit_status = "2"  
				AND t1.sale_type = "1" 
				AND t2.STATUS = "1"
				AND t1.del_flag = "0" 
				AND t2.del_flag = "0"  
			GROUP BY
				t1.mcht_id,
				t2.id,
				t2.NAME 
			HAVING product_type_count > 0
			) t1
		<if test="type1Id != null and type1Id != ''">
			WHERE EXISTS (
					SELECT
						p1.id 
					FROM
						bu_product p1
						LEFT JOIN bu_product_type p2 ON p2.id = p1.product_type1_id
					WHERE
						p1.STATUS = "1"
						AND p1.audit_status = "2" 
						AND p1.sale_type = "1" 
						AND p2.STATUS = "1" 
						AND p1.del_flag = "0" 
						AND p2.del_flag = "0" 
						AND p1.product_type1_id = #{type1Id} 
						AND t1.mcht_id = p1.mcht_id 
				)
		</if> 
		GROUP BY
			t1.mcht_id
	) p1 ON p1.mcht_id = a.id
	LEFT JOIN (
		SELECT
			t1.mcht_id,
			GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type2_str
		FROM
			(
			SELECT
				t1.mcht_id,
				t2.id,
				t2.NAME AS product_type_name,
				COUNT( t2.id ) AS product_type_count 
			FROM
				bu_product t1
				LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type2_id 
			WHERE
				t1.STATUS = "1"
				AND t1.audit_status = "2" 
				AND t1.sale_type = "1" 
				AND t2.STATUS = "1" 
				AND t1.del_flag = "0" 
				AND t2.del_flag = "0" 
			GROUP BY
				t1.mcht_id,
				t2.id,
				t2.NAME
			HAVING product_type_count > 0 
			) t1 
		<if test="type2Id != null and type2Id != ''">
			WHERE EXISTS (
					SELECT
						p1.id 
					FROM
						bu_product p1
						LEFT JOIN bu_product_type p2 ON p2.id = p1.product_type2_id 
					WHERE
						p1.STATUS = "1" 
						AND p1.audit_status = "2" 
						AND p1.sale_type = "1" 
						AND p2.STATUS = "1" 
						AND p1.del_flag = "0" 
						AND p2.del_flag = "0" 
						AND p1.product_type2_id = #{type2Id} 
						AND t1.mcht_id = p1.mcht_id 
				)
		</if>
		GROUP BY
			t1.mcht_id
	) p2 ON p2.mcht_id = a.id
	LEFT JOIN (
		SELECT
			t1.mcht_id,
			GROUP_CONCAT( CONCAT_WS( ",", t1.product_brand_name, t1.product_brand_count ) ORDER BY t1.product_brand_id ASC SEPARATOR ";" ) AS brand_str
		FROM
			(
			SELECT
				t1.mcht_id,
				t2.product_brand_id,
				t3.name AS product_brand_name,
				COUNT( t2.product_brand_id ) AS product_brand_count 
			FROM
				bu_product t1
				LEFT JOIN bu_mcht_product_brand t2 ON t2.product_brand_id = t1.brand_id AND t2.mcht_id = t1.mcht_id
				LEFT JOIN bu_product_brand t3 ON t3.id = t1.brand_id
			WHERE
				t1.STATUS = "1" 
				AND t1.sale_type = "1" 
				AND t2.status = "1" 
				AND t2.audit_status = 3
				AND t1.del_flag = "0" 
				AND t2.del_flag = "0" 
			GROUP BY
				t1.mcht_id,
				t2.product_brand_id,
				t2.product_brand_name 
			HAVING product_brand_count > 0 
			) t1
		<if test="productBrandName != null and productBrandName != ''">
			WHERE EXISTS (
					SELECT
						p1.id
					FROM
						bu_product p1
						LEFT JOIN bu_mcht_product_brand p2 ON p2.product_brand_id = p1.brand_id AND p2.mcht_id = p1.mcht_id
						LEFT JOIN bu_product_brand p3 ON p3.id = p1.brand_id
					WHERE
						p1.STATUS = "1" 
						AND p1.sale_type = "1" 
						AND p2.status = "1" 
						AND p2.audit_status = 3
						AND p1.del_flag = "0" 
						AND p2.del_flag = "0" 
						AND p1.mcht_id = t1.mcht_id 
						and	(p3.name LIKE CONCAT("%", #{productBrandName}, "%") OR p3.name_zh LIKE CONCAT("%", #{productBrandName}, "%")
							OR p3.name_en LIKE CONCAT("%", #{productBrandName}, "%"))
				)
		</if> 
		GROUP BY
			t1.mcht_id
	) p3 ON p3.mcht_id = a.id
	WHERE a.STATUS = "1" 
	<if test="mchtCode != null and mchtCode != ''">
		and	a.mcht_code = #{mchtCode}
	</if>
	<if test="shopName != null and shopName != ''">
		and	a.shop_name LIKE CONCAT("%", #{shopName}, "%")
	</if>
	<if test="type1Id != null and type1Id != ''">
		and p1.type1_str IS NOT NULL
	</if>
	<if test="type2Id != null and type2Id != ''">
		and p2.type2_str IS NOT NULL
	</if>
	<if test="productBrandName != null and productBrandName != ''">
		and p3.brand_str IS NOT NULL
	</if>
	ORDER BY a.id
	<if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  
    <select id="selectProductStatusByCode" parameterType="java.lang.String"  resultType="java.util.HashMap">
    SELECT
		t.id ProductId,
		t.audit_status ProductAuditStatus,
		t.STATUS ProductStatus,
		t.sale_type ProductSaleType,
		mi.STATUS MchtStatus,
		mi.shop_status MchtShopStatus,
		mpb.STATUS MchtProductBrandStatus,
		mpb.audit_status MchtProductBrandAuditStatus,
		(select spa.status from bu_single_product_activity spa where  spa.product_id = t.id and spa.del_flag='0' order by spa.id desc limit 1) singleProductActivityStatus
	FROM
		bu_product t,
		bu_mcht_product_brand mpb,
		bu_mcht_info mi 
	WHERE
		t.mcht_id = mi.id
		AND t.mcht_id = mpb.mcht_id 
		AND t.brand_id = mpb.product_brand_id 
		AND t.del_flag = '0' 
		AND mi.del_flag = '0' 
		AND mpb.del_flag = '0' 
		AND t.code = #{productCode}
  </select>


	<!--查询商品流量报表数据-->
	<select id="getCommodityFlowReportData"  parameterType="java.util.HashMap"  resultMap="BaseResultMap">
		select t.id,
		t.code,
		t.name ,
		(select mi.shop_name from bu_mcht_info mi where mi.id = t.mcht_id and mi.del_flag='0' ) as shop_name ,
		IFNULL(a.member_visitors_num,0) as member_visitors_num,
		IFNULL(a.unmember_visitors_num,0) as unmember_visitors_num,
		IFNULL(a.member_page_view,0) as member_page_view,
		IFNULL(a.unmember_page_view,0) as unmember_page_view,
		IFNULL(a.add_product_amount,0) as add_product_amount,
		IFNULL(a.submit_order_amount,0) as submit_order_amount,
		IFNULL(a.payment_amount,0) as payment_amount,
		IFNULL(a.pay_money,0) as pay_money,
		a.add_product_rate as add_product_rate,
		a.submit_order_rate as submit_order_rate,
		a.payment_rate as payment_rate
		from bu_product t


		LEFT JOIN

		(select
				p_id,
				sum(member_visitors_num) as member_visitors_num,
				sum(unmember_visitors_num) as unmember_visitors_num,
				sum(member_page_view) as member_page_view,
				sum(unmember_page_view) as unmember_page_view,
				sum(add_product_amount) as add_product_amount,
				sum(submit_order_amount) as submit_order_amount,
				sum(payment_amount) as payment_amount,
				sum(pay_money) as  pay_money ,
				CONCAT(ROUND(SUM(add_product_amount)/(SUM(member_visitors_num)+SUM(unmember_visitors_num))*100,2),'%') AS add_product_rate,
				CONCAT(ROUND(SUM(submit_order_amount)/(SUM(member_visitors_num)+SUM(unmember_visitors_num))*100,2),'%') AS submit_order_rate,
				CONCAT(ROUND(SUM(payment_amount)/(SUM(member_visitors_num)+SUM(unmember_visitors_num))*100,2),'%') AS payment_rate

		from
				(
					 select
						 bmp.value_id as p_id,
						 count(DISTINCT bmp.member_id) as member_visitors_num,
							0 as unmember_visitors_num,
						 count( bmp.member_id) AS member_page_view,
							0 AS unmember_page_view,
							0 AS add_product_amount,
							0 AS submit_order_amount,
							0 AS payment_amount,
							0 as pay_money
						from
						bu_member_pv bmp
						where
						bmp.page_classify ='10'
						 and bmp.del_flag='0'
					AND bmp.create_date <![CDATA[ >= ]]>#{payBegin}
					AND bmp.create_date <![CDATA[ <= ]]>#{payEnd}
						GROUP BY bmp.value_id

				UNION

						select
						 bmp.value_id as p_id,
						 0 as member_visitors_num,
						 count( DISTINCT (bmp.device_number)) as unmember_visitors_num,
						 0 AS member_page_view,
						  count( bmp.device_number) AS unmember_page_view,
							0 AS add_product_amount,
							0 AS submit_order_amount,
							0 AS payment_amount,
							0 as pay_money
						from
						bu_member_pv bmp
						where
						 bmp.page_classify ='10'
						and  bmp.member_id is null
						and bmp.del_flag='0'
				AND bmp.create_date <![CDATA[ >= ]]>#{payBegin}
				AND bmp.create_date <![CDATA[ <= ]]>#{payEnd}
						GROUP BY bmp.value_id

				UNION

						select
						 bmp.value_id as p_id,
						 0 as member_visitors_num,
						 0 as unmember_visitors_num,
						 0 AS member_page_view,
						 0 AS unmember_page_view,

						 SUM(bsc.quantity) AS add_product_amount,-- 加购数
						 0 AS submit_order_amount,
						 0 AS payment_amount,
						 0 as pay_money
						from
						bu_member_pv bmp,bu_member_action bma,bu_shopping_cart bsc
						where
						bmp.pv_id = bma.member_pv_id
						and bma.action_item_id = bsc.id
						and action_type='14'
						and bmp.del_flag='0'
						and bma.del_flag='0'
				AND bmp.create_date <![CDATA[ >= ]]>#{payBegin}
				AND bmp.create_date <![CDATA[ <= ]]>#{payEnd}
						GROUP BY bmp.value_id

				UNION

						select
						 bmp.value_id as p_id,
						 0 as member_visitors_num,
						 0 as unmember_visitors_num,
						 0 AS member_page_view,
						 0 AS unmember_page_view,

						 0 AS add_product_amount,
						 sum(bod.quantity) AS submit_order_amount,-- 下单件数
						 0 AS payment_amount,
						 0 as pay_money
						from
						bu_member_pv bmp,bu_member_action bma,bu_shopping_cart bsc,bu_order_dtl bod
						where
						bmp.pv_id = bma.member_pv_id
						and bma.action_item_id = bsc.id
						and bsc.order_dtl_id = bod.id
						and action_type in ('14','15')
						and bmp.del_flag='0'
						and bma.del_flag='0'
						and bsc.del_flag='0'
						and bod.del_flag='0'
				AND bmp.create_date <![CDATA[ >= ]]>#{payBegin}
				AND bmp.create_date <![CDATA[ <= ]]>#{payEnd}
						GROUP BY bmp.value_id


				UNION

						select
						 bmp.value_id as p_id,
						 0 as member_visitors_num,
						 0 as unmember_visitors_num,
						 0 AS member_page_view,
						 0 AS unmember_page_view,

						 0 AS add_product_amount,
						 0 AS submit_order_amount,
						 sum(bod.quantity) AS payment_amount, -- 支付件数
						sum(bod.pay_amount) as pay_money -- 实付金额
						from
						bu_member_pv bmp,bu_member_action bma,bu_shopping_cart bsc,bu_order_dtl bod,bu_sub_order bso,bu_combine_order bco
						where
						bmp.pv_id = bma.member_pv_id
						and bma.action_item_id = bsc.id
						and bsc.order_dtl_id = bod.id
						and bod.sub_order_id = bso.id
						and bso.combine_order_id = bco.id
						and action_type in ('14','15')
						and bco.pay_status ='1'
						and bco.status = '1'
						and bmp.del_flag='0'
						and bma.del_flag='0'
						and bsc.del_flag='0'
						and bod.del_flag='0'
						and bso.del_flag='0'
						and bco.del_flag='0'
				AND bmp.create_date <![CDATA[ >= ]]>#{payBegin}
				AND bmp.create_date <![CDATA[ <= ]]>#{payEnd}
						GROUP BY bmp.value_id
				)m

		GROUP BY
		  m.p_id
		) a

		on t.id = a.p_id
		where t.del_flag='0'
		and t.status='1'
		<if test="productCode != null" >
			and t.code = #{productCode}
		</if>
		<if test="productName != null" >
			and t.name like #{productName}
		</if>
		<if test="reportColumnId != null" >
			and EXISTS (select bmp.value_id from bu_member_pv bmp where bmp.value_id = t.id and bmp.page_classify = '10' and bmp.column_type = #{reportColumnId})
		</if>
		<if test="productTypeId != null" >
			and t.product_type1_id = #{productTypeId}
		</if>
		<if test="mchtId != null" >
			and t.mcht_id = #{mchtId}
		</if>
		<if test="brandId != null" >
			and t.brand_id = #{brandId}
		</if>

		ORDER BY t.id

		<if test="limitSize!=null and limitSize!=null">
			LIMIT #{limitStart},#{limitSize}
		</if>
  </select>


	<select id="countCommodityStatisticsList" parameterType="java.util.HashMap" resultType="java.lang.Integer" >
		SELECT
		COUNT(a.id)
		FROM
		bu_mcht_info a
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type1_str
		FROM
		(
		SELECT
		t1.mcht_id,
		t2.id,
		t2.NAME AS product_type_name,
		COUNT( t2.id ) AS product_type_count
		FROM
		bu_product t1
		LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type1_id
		WHERE
		t1.STATUS = "1"
		AND t1.audit_status = "2"
		AND t1.sale_type = "1"
		AND t2.STATUS = "1"
		AND t1.del_flag = "0"
		AND t2.del_flag = "0"
		GROUP BY
		t1.mcht_id,
		t2.id,
		t2.NAME
		HAVING product_type_count > 0
		) t1
		<if test="type1Id != null and type1Id != ''">
			WHERE EXISTS (
			SELECT
			p1.id
			FROM
			bu_product p1
			LEFT JOIN bu_product_type p2 ON p2.id = p1.product_type1_id
			WHERE
			p1.STATUS = "1"
			AND p1.audit_status = "2"
			AND p1.sale_type = "1"
			AND p2.STATUS = "1"
			AND p1.del_flag = "0"
			AND p2.del_flag = "0"
			AND p1.product_type1_id = #{type1Id}
			AND t1.mcht_id = p1.mcht_id
			)
		</if>
		GROUP BY
		t1.mcht_id
		) p1 ON p1.mcht_id = a.id
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type2_str
		FROM
		(
		SELECT
		t1.mcht_id,
		t2.id,
		t2.NAME AS product_type_name,
		COUNT( t2.id ) AS product_type_count
		FROM
		bu_product t1
		LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type2_id
		WHERE
		t1.STATUS = "1"
		AND t1.audit_status = "2"
		AND t1.sale_type = "1"
		AND t2.STATUS = "1"
		AND t1.del_flag = "0"
		AND t2.del_flag = "0"
		GROUP BY
		t1.mcht_id,
		t2.id,
		t2.NAME
		HAVING product_type_count > 0
		) t1
		<if test="type2Id != null and type2Id != ''">
			WHERE EXISTS (
			SELECT
			p1.id
			FROM
			bu_product p1
			LEFT JOIN bu_product_type p2 ON p2.id = p1.product_type2_id
			WHERE
			p1.STATUS = "1"
			AND p1.audit_status = "2"
			AND p1.sale_type = "1"
			AND p2.STATUS = "1"
			AND p1.del_flag = "0"
			AND p2.del_flag = "0"
			AND p1.product_type2_id = #{type2Id}
			AND t1.mcht_id = p1.mcht_id
			)
		</if>
		GROUP BY
		t1.mcht_id
		) p2 ON p2.mcht_id = a.id
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		t1.product_brand_count  AS product_brand_count
		FROM
		(
		SELECT
		t1.mcht_id,
		COUNT( t1.id ) AS product_brand_count
		FROM
		bu_product t1
		LEFT JOIN bu_mcht_product_brand t2 ON t2.product_brand_id = t1.brand_id AND t2.mcht_id = t1.mcht_id
		LEFT JOIN bu_product_brand t3 ON t3.id = t1.brand_id
		WHERE
		t1.STATUS = "1"
		AND t1.audit_status = "2"
		AND t1.sale_type = "1"
		AND t2.status = "1"
		AND t2.audit_status = 3
		AND t1.del_flag = "0"
		AND t2.del_flag = "0"
		GROUP BY
		t1.mcht_id
		HAVING product_brand_count > 0
		) t1

		GROUP BY
		t1.mcht_id
		) p3 ON p3.mcht_id = a.id
		WHERE a.STATUS = "1"    AND a.shop_status ="1"  AND <![CDATA[p3.product_brand_count   <= 30 ]]>  AND <![CDATA[p3.product_brand_count   > 0 ]]>
		<if test="mchtCode != null and mchtCode != ''">
			and	a.mcht_code LIKE CONCAT("%", #{mchtCode}, "%")
		</if>
		<if test="shopName != null and shopName != ''">
			and	(a.shop_name LIKE CONCAT("%", #{shopName}, "%")  or a.company_name LIKE CONCAT("%", #{shopName}, "%"))
		</if>
		<if test="type1Id != null and type1Id != ''">
			and p1.type1_str IS NOT NULL
		</if>
		<if test="type2Id != null and type2Id != ''">
			and p2.type2_str IS NOT NULL
		</if>
		<if test="productBrandName != null and productBrandName != ''">
			and p3.brand_str IS NOT NULL
		</if>
		<if test="beginProductCount != null" >
			and  <![CDATA[ p3.product_brand_count>= #{beginProductCount}]]>
		</if>
		<if test="endProductCount != null" >
			and p3.product_brand_count <![CDATA[ <= ]]> #{endProductCount}
		</if>
	</select>


	<select id="selectCommodityStatisticsList" parameterType="java.util.HashMap" resultType="java.util.HashMap" >
		SELECT
		a.id,
		a.mcht_code AS mchtCode,
		a.company_name AS companyName,
		a.shop_name AS shopName,
		a.mcht_type AS mchtType,
		p1.type1_str AS type1Str,
		p2.type2_str AS type2Str,
		p3.product_brand_count AS productCount
		FROM
		bu_mcht_info a
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type1_str
		FROM
		(
		SELECT
		t1.mcht_id,
		t2.id,
		t2.NAME AS product_type_name,
		COUNT( t2.id ) AS product_type_count
		FROM
		bu_product t1
		LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type1_id
		WHERE
		t1.STATUS = "1"
		AND t1.audit_status = "2"
		AND t1.sale_type = "1"
		AND t2.STATUS = "1"
		AND t1.del_flag = "0"
		AND t2.del_flag = "0"
		GROUP BY
		t1.mcht_id,
		t2.id,
		t2.NAME
		HAVING product_type_count > 0
		) t1
		<if test="type1Id != null and type1Id != ''">
			WHERE EXISTS (
			SELECT
			p1.id
			FROM
			bu_product p1
			LEFT JOIN bu_product_type p2 ON p2.id = p1.product_type1_id
			WHERE
			p1.STATUS = "1"
			AND p1.audit_status = "2"
			AND p1.sale_type = "1"
			AND p2.STATUS = "1"
			AND p1.del_flag = "0"
			AND p2.del_flag = "0"
			AND p1.product_type1_id = #{type1Id}
			AND t1.mcht_id = p1.mcht_id
			)
		</if>
		GROUP BY
		t1.mcht_id
		) p1 ON p1.mcht_id = a.id
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type2_str
		FROM
		(
		SELECT
		t1.mcht_id,
		t2.id,
		t2.NAME AS product_type_name,
		COUNT( t2.id ) AS product_type_count
		FROM
		bu_product t1
		LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type2_id
		WHERE
		t1.STATUS = "1"
		AND t1.audit_status = "2"
		AND t1.sale_type = "1"
		AND t2.STATUS = "1"
		AND t1.del_flag = "0"
		AND t2.del_flag = "0"
		GROUP BY
		t1.mcht_id,
		t2.id,
		t2.NAME
		HAVING product_type_count > 0
		) t1
		<if test="type2Id != null and type2Id != ''">
			WHERE EXISTS (
			SELECT
			p1.id
			FROM
			bu_product p1
			LEFT JOIN bu_product_type p2 ON p2.id = p1.product_type2_id
			WHERE
			p1.STATUS = "1"
			AND p1.audit_status = "2"
			AND p1.sale_type = "1"
			AND p2.STATUS = "1"
			AND p1.del_flag = "0"
			AND p2.del_flag = "0"
			AND p1.product_type2_id = #{type2Id}
			AND t1.mcht_id = p1.mcht_id
			)
		</if>
		GROUP BY
		t1.mcht_id
		) p2 ON p2.mcht_id = a.id
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		t1.product_brand_count  AS product_brand_count
		FROM
		(
		SELECT
		t1.mcht_id,
		COUNT( t1.id ) AS product_brand_count
		FROM
		bu_product t1
		LEFT JOIN bu_mcht_product_brand t2 ON t2.product_brand_id = t1.brand_id AND t2.mcht_id = t1.mcht_id
		LEFT JOIN bu_product_brand t3 ON t3.id = t1.brand_id
		WHERE
		t1.STATUS = "1"
		AND t1.audit_status = "2"
		AND t1.sale_type = "1"
		AND t2.status = "1"
		AND t2.audit_status = 3
		AND t1.del_flag = "0"
		AND t2.del_flag = "0"
		GROUP BY
		t1.mcht_id
		HAVING product_brand_count > 0
		) t1

		GROUP BY
		t1.mcht_id
		) p3 ON p3.mcht_id = a.id
		WHERE a.STATUS = "1"  AND a.shop_status ="1"  AND <![CDATA[p3.product_brand_count   <= 30 ]]>  AND <![CDATA[p3.product_brand_count   > 0 ]]>
		<if test="mchtCode != null and mchtCode != ''">
			and	a.mcht_code = #{mchtCode}
		</if>
		<if test="shopName != null and shopName != ''">
			and	(a.shop_name LIKE CONCAT("%",#{shopName},"%")  or a.company_name LIKE CONCAT("%",#{shopName},"%"))
		</if>
		<if test="type1Id != null and type1Id != ''">
			and p1.type1_str IS NOT NULL
		</if>
		<if test="type2Id != null and type2Id != ''">
			and p2.type2_str IS NOT NULL
		</if>
		<if test="productBrandName != null and productBrandName != ''">
			and p3.brand_str IS NOT NULL
		</if>
		<if test="beginProductCount != null" >
			and  <![CDATA[ p3.product_brand_count>= #{beginProductCount}]]>
		</if>
		<if test="endProductCount != null" >
			and p3.product_brand_count <![CDATA[ <= ]]> #{endProductCount}
		</if>
		ORDER BY p3.product_brand_count  asc
		<if test="limitStart != null and limitStart>=0" >
			limit #{limitStart} , #{limitSize}
		</if>
	</select>


	<!--	查找商品销量在0-50的商家id 并进行相关过滤-->
	<select id="selectCommodityStatisticsIds"   parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
		a.id,
		a.mcht_code AS mchtCode,
		a.company_name AS companyName,
		a.shop_name AS shopName,
		p3.sale_count AS saleCount
		FROM
		bu_mcht_info a
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		t1.sale_count  AS sale_count
		FROM
		(
		SELECT
		t5.mcht_id,
		SUM( t4.`quantity`) AS sale_count
		FROM bu_order_dtl t4
		LEFT JOIN bu_sub_order t5  ON  t4.`sub_order_id`=t5.`id`
		LEFT JOIN bu_combine_order t6 ON t5.`combine_order_id`=t6.`id`
		WHERE
		t4.`del_flag`="0"
		AND t5.`del_flag`="0"
		AND t6.`del_flag`="0"
		AND t6.status="1"
		AND t4.`create_date` <![CDATA[ >= ]]> CONCAT(DATE_SUB(CURDATE(), INTERVAL 90 DAY),' 00:00:00')
		GROUP BY
		t5.mcht_id
		) t1
		) p3 ON p3.mcht_id = a.id
		WHERE
		a.STATUS = "1"
		AND
		a.shop_status ="1"
		AND
		<![CDATA[p3.sale_count   <= 50 ]]>
		AND
		<![CDATA[p3.sale_count   > 0 ]]>

		<if test="type1Id != null and type1Id != ''">
		AND EXISTS (SELECT 1
			FROM bu_order_dtl od
			LEFT JOIN bu_product p ON od.`product_id`=p.id
			LEFT JOIN bu_sub_order so ON od.`sub_order_id`=so.`id`
			LEFT JOIN bu_combine_order co ON so.`combine_order_id`=co.`id`
			WHERE p.`mcht_id` = a.id AND od.del_flag = '0' AND od.`create_date`>=CONCAT(DATE_SUB(CURDATE(), INTERVAL 90 DAY),' 00:00:00')
			AND p.product_type1_id = #{type1Id}
			<if test="type2Id != null and type2Id != ''">
			AND p.product_type2_id = #{type2Id}
			</if>
			AND so.del_flag = '0' AND co.del_flag = '0' AND  co.status="1"
		)
		</if>

		<if test="mchtCode != null and mchtCode != ''">
			and	a.mcht_code = #{mchtCode}
		</if>
		<if test="shopName != null and shopName != ''">
			and	a.shop_name LIKE CONCAT("%", #{shopName}, "%")  or a.company_name LIKE CONCAT("%", #{shopName}, "%")
		</if>
		<if test="beginProductCount != null" >
			and  <![CDATA[ p3.sale_count>= #{beginProductCount}]]>
		</if>
		<if test="endProductCount != null" >
			and p3.sale_count <![CDATA[ <= ]]> #{endProductCount}
		</if>
		order by  p3.sale_count
	</select>

	<!--根据商家id带进来查询一级二级商品总销量等-->
	<select id="selectCommoditySaleStatisticsList" parameterType="java.util.HashMap" resultType="java.util.HashMap" >
		SELECT
		a.id,
		a.mcht_code AS mchtCode,
		a.company_name AS companyName,
		a.shop_name AS shopName,
		p1.type1_str  AS type1Str ,
		p2.type2_str  AS type2Str ,
		p3.sale_count AS saleCount
		FROM
		bu_mcht_info a
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type1_str
		FROM
		(
		SELECT
		t1.mcht_id,
		t2.id,
		t2.NAME AS product_type_name,
		SUM( t3.`quantity`) AS product_type_count
		FROM
		bu_product t1
		LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type1_id
		LEFT JOIN bu_order_dtl t3  ON  t3.`product_id`=t1.`id`
		LEFT JOIN bu_sub_order t4  ON  t3.`sub_order_id`=t4.`id`
		LEFT JOIN bu_combine_order t5 ON t4.`combine_order_id`=t5.`id`
		WHERE
		t2.del_flag = "0"
		AND t3.`del_flag`="0"
		AND t4.`del_flag`="0"
		AND t5.`del_flag`="0"
		AND t5.status="1"
		AND t4.`create_date`  >= CONCAT(DATE_SUB(CURDATE(), INTERVAL 90 DAY),' 00:00:00')
		<if test="mchtIds != null and mchtIds != ''">
			AND t1.`mcht_id` IN
			<foreach item="id" index="index" collection="mchtIds" open="(" separator="," close=")">
				#{id}
			</foreach>
		</if>
		GROUP BY
		t1.mcht_id,
		t2.id,
		t2.NAME
		) t1

		GROUP BY
		t1.mcht_id
		) p1 ON p1.mcht_id = a.id

		LEFT JOIN (
		SELECT
		t1.mcht_id,
		GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type2_str
		FROM
		(
		SELECT
		t1.mcht_id,
		t2.id,
		t2.NAME AS product_type_name,
		SUM( t3.`quantity` ) AS product_type_count
		FROM
		bu_product t1
		LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type2_id
		LEFT JOIN bu_order_dtl t3  ON  t3.`product_id`=t1.`id`
		LEFT JOIN bu_sub_order t4  ON  t3.`sub_order_id`=t4.`id`
		LEFT JOIN bu_combine_order t5 ON t4.`combine_order_id`=t5.`id`
		WHERE
		t2.del_flag = "0"
		AND t3.`del_flag`="0"
		AND t4.`del_flag`="0"
		AND t5.`del_flag`="0"
		AND t5.status="1"
		AND t4.`create_date` >= CONCAT(DATE_SUB(CURDATE(), INTERVAL 90 DAY),' 00:00:00')
		<if test="mchtIds != null and mchtIds != ''">
			AND t1.`mcht_id` IN
			<foreach item="id" index="index" collection="mchtIds" open="(" separator="," close=")">
				#{id}
			</foreach>
		</if>
		GROUP BY
		t1.mcht_id,
		t2.id,
		t2.NAME
		) t1
		GROUP BY
		t1.mcht_id
		) p2 ON p2.mcht_id = a.id
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		t1.sale_count  AS sale_count
		FROM
		(
		SELECT
		t2.mcht_id,
		SUM( t1.`quantity`) AS sale_count
		FROM bu_order_dtl t1
		LEFT JOIN bu_sub_order t2  ON  t1.`sub_order_id`=t2.`id`
		LEFT JOIN bu_combine_order t3 ON t2.`combine_order_id`=t3.`id`

		WHERE t1.`del_flag`="0"
		AND t2.`del_flag`="0"
		AND t3.`del_flag`="0"
		AND t3.status="1"
		AND t2.`create_date` >= CONCAT(DATE_SUB(CURDATE(), INTERVAL 90 DAY),' 00:00:00')
		<if test="mchtIds != null and mchtIds != ''">
			AND t2.`mcht_id` IN
			<foreach item="id" index="index" collection="mchtIds" open="(" separator="," close=")">
				#{id}
			</foreach>
		</if>
		GROUP BY
		t2.mcht_id
		) t1
		) p3 ON p3.mcht_id = a.id
		WHERE
		a.STATUS = "1"
		AND
		a.shop_status ="1"
		AND
		<![CDATA[p3.sale_count   <= 50 ]]>
		AND
		<![CDATA[p3.sale_count   > 0 ]]>

		<if test="type1Id != null and type1Id != ''">
			and p1.type1_str IS NOT NULL
		</if>
		<if test="type2Id != null and type2Id != ''">
			and p2.type2_str IS NOT NULL
		</if>

		<if test="mchtIds != null and mchtIds != ''">
			AND a.`id` IN
			<foreach item="id" index="index" collection="mchtIds" open="(" separator="," close=")">
				#{id}
			</foreach>
		</if>
		order by  p3.sale_count
	</select>


	<!--	count商家商品销量-->
	<select id="countCommoditySaleStatisticsList" parameterType="java.util.HashMap" resultType="java.lang.Integer" >
		SELECT
		count(a.id)
		FROM
		bu_mcht_info a
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type1_str
		FROM
		(
		SELECT
		t1.mcht_id,
		t2.id,
		t2.NAME AS product_type_name,
		SUM( t3.`quantity`) AS product_type_count
		FROM
		bu_product t1
		LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type1_id
		LEFT JOIN bu_order_dtl t3  ON  t3.`product_id`=t1.`id`
		LEFT JOIN bu_sub_order t4  ON  t3.`sub_order_id`=t4.`id`
		LEFT JOIN bu_combine_order t5 ON t4.`combine_order_id`=t5.`id`
		WHERE
		t1.del_flag = "0"
		AND t2.del_flag = "0"
		AND t3.`del_flag`="0"
		AND t4.`del_flag`="0"
		AND t5.`del_flag`="0"
		AND t5.status="1"
		AND t4.`create_date`  >= CONCAT(DATE_SUB(CURDATE(), INTERVAL 90 DAY),' 00:00:00')
		<if test="mchtIds != null and mchtIds != ''">
		AND t1.`mcht_id` IN
		<foreach item="id" index="index" collection="mchtIds" open="(" separator="," close=")">
			#{id}
		</foreach>
		</if>
		<if test="type1Id != null and type1Id != ''">
			AND t1.product_type1_id = #{type1Id}
		</if>
		GROUP BY
		t1.mcht_id,
		t2.id,
		t2.NAME
		) t1
		GROUP BY
		t1.mcht_id
		) p1 ON p1.mcht_id = a.id

		LEFT JOIN (
		SELECT
		t1.mcht_id,
		GROUP_CONCAT( CONCAT_WS( ",", t1.id, t1.product_type_name, t1.product_type_count ) ORDER BY t1.id ASC SEPARATOR ";" ) AS type2_str
		FROM
		(
		SELECT
		t1.mcht_id,
		t2.id,
		t2.NAME AS product_type_name,
		SUM( t3.`quantity` ) AS product_type_count
		FROM
		bu_product t1
		LEFT JOIN bu_product_type t2 ON t2.id = t1.product_type2_id
		LEFT JOIN bu_order_dtl t3  ON  t3.`product_id`=t1.`id`
		LEFT JOIN bu_sub_order t4  ON  t3.`sub_order_id`=t4.`id`
		LEFT JOIN bu_combine_order t5 ON t4.`combine_order_id`=t5.`id`
		WHERE
		t1.del_flag = "0"
		AND t2.del_flag = "0"
		AND t3.`del_flag`="0"
		AND t4.`del_flag`="0"
		AND t5.`del_flag`="0"
		AND t5.status="1"
		AND t4.`create_date` >= CONCAT(DATE_SUB(CURDATE(), INTERVAL 90 DAY),' 00:00:00')
		<if test="mchtIds != null and mchtIds != ''">
		AND t1.`mcht_id` IN
			<foreach item="id" index="index" collection="mchtIds" open="(" separator="," close=")">
				#{id}
			</foreach>
		</if>
		<if test="type2Id != null and type2Id != ''">
			AND t1.product_type2_id = #{type2Id}
		</if>
		GROUP BY
		t1.mcht_id,
		t2.id,
		t2.NAME
		) t1
		GROUP BY
		t1.mcht_id
		) p2 ON p2.mcht_id = a.id
		LEFT JOIN (
		SELECT
		t1.mcht_id,
		t1.sale_count  AS sale_count
		FROM
		(
		SELECT
		t2.mcht_id,
		SUM( t1.`quantity`) AS sale_count
		FROM bu_order_dtl t1
		LEFT JOIN bu_sub_order t2  ON  t1.`sub_order_id`=t2.`id`
		LEFT JOIN bu_combine_order t3 ON t2.`combine_order_id`=t3.`id`

		WHERE t1.`del_flag`="0"
		AND t2.`del_flag`="0"
		AND t3.`del_flag`="0"
		AND t3.status="1"
		AND t2.`create_date` >= CONCAT(DATE_SUB(CURDATE(), INTERVAL 90 DAY),' 00:00:00')
		<if test="mchtIds != null and mchtIds != ''">
		AND t2.`mcht_id` IN
		<foreach item="id" index="index" collection="mchtIds" open="(" separator="," close=")">
			#{id}
		</foreach>
		</if>
		GROUP BY
		t2.mcht_id
		) t1
		) p3 ON p3.mcht_id = a.id
		WHERE
		a.STATUS = "1"
		AND
		a.shop_status ="1"
		AND
		<![CDATA[p3.sale_count   <= 50 ]]>
		AND
		<![CDATA[p3.sale_count   > 0 ]]>

		<if test="mchtCode != null and mchtCode != ''">
			and	a.mcht_code = #{mchtCode}
		</if>
		<if test="shopName != null and shopName != ''">
			and	a.shop_name LIKE CONCAT("%", #{shopName}, "%")  or a.company_name LIKE CONCAT("%", #{shopName}, "%")
		</if>
		<if test="type1Id != null and type1Id != ''">
			and p1.type1_str IS NOT NULL
		</if>
		<if test="type2Id != null and type2Id != ''">
			and p2.type2_str IS NOT NULL
		</if>
		<if test="beginProductCount != null" >
			and  <![CDATA[ p3.sale_count>= #{beginProductCount}]]>
		</if>
		<if test="EndProductCount != null" >
			and p3.sale_count <![CDATA[ <= ]]> #{EndProductCount}
		</if>

	</select>




</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.SubOrderCustomMapper">
    <resultMap id="BaseResultMap" type="com.jf.entity.SubOrderCustom" extends="com.jf.dao.SubOrderMapper.BaseResultMap">
        <result column="status_desc" property="statusDesc" jdbcType="VARCHAR"/>
        <result column="mcht_type_desc" property="mchtTypeDesc" jdbcType="VARCHAR"/>
        <result column="is_manage_self_desc" property="isManageSelfDesc" jdbcType="VARCHAR"/>
        <result column="short_name" property="shortName" jdbcType="VARCHAR"/>
        <result column="shop_name" property="shopName" jdbcType="VARCHAR"/>
        <result column="mcht_code" property="mchtCode" jdbcType="VARCHAR"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="art_brand_group" property="artBrandGroup" jdbcType="VARCHAR"/>
        <result column="payment_name" property="paymentName" jdbcType="VARCHAR"/>
        <result column="member_id" property="memberId" jdbcType="INTEGER"/>
        <result column="member_nick" property="memberNick" jdbcType="VARCHAR"/>
        <result column="combine_order_remarks" property="combineOrderRemarks" jdbcType="VARCHAR"/>
        <result column="receiver_name" property="receiverName" jdbcType="VARCHAR"/>
        <result column="receiver_phone" property="receiverPhone" jdbcType="VARCHAR"/>
        <result column="receiver_address" property="receiverAddress" jdbcType="VARCHAR"/>
        <result column="cancel_reason" property="cancelReason" jdbcType="VARCHAR"/>
        <result column="cancel_date" property="cancelDate" jdbcType="TIMESTAMP"/>
        <result column="order_create_date" property="orderCreateDate" jdbcType="TIMESTAMP"/>
        <result column="order_pay_date" property="orderPayDate" jdbcType="TIMESTAMP"/>
        <result column="express_name" property="expressName" jdbcType="VARCHAR"/>
        <result column="source_client_desc" property="sourceClientDesc" jdbcType="VARCHAR"/>
        <result column="combine_order_code" property="combineOrderCode" jdbcType="VARCHAR"/>
        <result column="activity_id_group" property="activityIdGroup" jdbcType="VARCHAR"/>
        <result column="activity_area_id_group" property="activityAreaIdGroup" jdbcType="VARCHAR"/>
        <result column="log_remarks_color" property="logRemarksColor" jdbcType="VARCHAR"/>
        <result column="log_remarks" property="logRemarks" jdbcType="VARCHAR"/>
        <result column="kdn_id" property="kdnId" jdbcType="INTEGER"/>
        <result column="order_code" property="ordercode" jdbcType="VARCHAR"/>
        <result column="quantity" property="ProductQuantity" jdbcType="VARCHAR"/>
        <result column="product_id" property="productid" jdbcType="VARCHAR"/>
        <result column="brand_code" property="brandCode" jdbcType="VARCHAR"/>
        <result column="service_order_code" property="serviceOrderCode" jdbcType="VARCHAR"/>
        <result column="overtime_follow_status_desc" property="overtimeFollowStatusDesc" jdbcType="VARCHAR"/>
        <result column="sham_follow_status_desc" property="shamFollowStatusDesc" jdbcType="VARCHAR"/>
        <result column="violate_order_id" property="violateorderid" jdbcType="VARCHAR"/>
        <result column="follow_by_name" property="followByName" jdbcType="VARCHAR"/>
        <result column="product_type_name" property="productTypename" jdbcType="VARCHAR"/>
        <result column="customer_service_order_concat" property="customerServiceOrderConcat" jdbcType="VARCHAR"/>
        <result column="order_type_desc" property="orderTypeDesc" jdbcType="VARCHAR"/>
        <result column="order_type" property="orderType" jdbcType="VARCHAR"/>
        <result column="req_imei" property="reqImei" jdbcType="VARCHAR"/>
        <result column="member_info_status" property="memberInfoStatus" jdbcType="VARCHAR"/>
        <result column="brand_product_name" property="brandProductName" jdbcType="VARCHAR"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="product_code" property="productCode" jdbcType="VARCHAR"/>
        <result column="audit_status" property="auditStatus" jdbcType="VARCHAR"/>
        <result column="audit_date" property="auditDate" jdbcType="TIMESTAMP"/>
        <result column="pic" property="pic" jdbcType="VARCHAR"/>
        <result column="member_status" property="memberStatus" jdbcType="VARCHAR"/>
        <result column="suborder_count" property="suborderCount" jdbcType="INTEGER"/>
        <collection property="orderDtlList" javaType="List" ofType="com.jf.entity.OrderDtl">
            <id column="orderdtl_id" property="id"/>
            <result column="sub_order_id" property="subOrderId"/>
        </collection>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, combine_order_id, sub_order_code, mcht_id, mcht_type, is_manage_self, amount,
    pay_amount, platform_preferential, mcht_preferential, integral_preferential, status,
    receipt_date, receiver_type, is_user_del, remarks_color, status_date, express_id,
    express_no, delivery_date, complete_date, delivery_last_date, delivery_overtime,
    follow_by, is_comment, is_allow_modify_comment,distribution_amount,freight, audit_status, audit_date, create_by, create_date,
    update_by, update_date, remarks, del_flag,
    FUN_GET_STATUS_DESC("BU_SUB_ORDER", "STATUS", a.status) status_desc,
    FUN_GET_STATUS_DESC("BU_MCHT_INFO", "MCHT_TYPE", a.mcht_type) mcht_type_desc,
    FUN_GET_STATUS_DESC("BU_MCHT_INFO", "IS_MANAGE_SELF", a.is_manage_self) is_manage_self_desc,
    (select b.short_name from bu_mcht_info b where b.id=a.mcht_id) short_name,
    (select group_concat(b.order_code SEPARATOR '<![CDATA[ <br> ]]>') from bu_violate_order b where a.id=b.sub_order_id and b.del_flag='0' and b.audit_status='1' order by b.id) order_code,
    (select sum(b.quantity) from bu_order_dtl b where b.sub_order_id=a.id) quantity,
    (select b.shop_name from bu_mcht_info b where b.id=a.mcht_id) shop_name,
    (select b.mcht_code from bu_mcht_info b where b.id=a.mcht_id) mcht_code,
    (select b.company_name from bu_mcht_info b where b.id=a.mcht_id) company_name,
	(select group_concat(CONCAT('【',b.brand_name,'】 ',b.art_no)) from bu_order_dtl b where b.sub_order_id=a.id) art_brand_group,
	(select c.name from bu_combine_order b, sys_payment c where b.id=a.combine_order_id and c.id=b.payment_id and c.del_flag=0)  payment_name,
	(select b.member_id from bu_combine_order b where b.id=a.combine_order_id)  member_id,
	(select b.member_nick from bu_combine_order b where b.id=a.combine_order_id)  member_nick,
	(select b.remarks from bu_combine_order b where b.id=a.combine_order_id)  combine_order_remarks,
	(select b.receiver_name from bu_combine_order b where b.id=a.combine_order_id)  receiver_name,
	(select b.receiver_phone from bu_combine_order b where b.id=a.combine_order_id)  receiver_phone,
	(select b.receiver_address from bu_combine_order b where b.id=a.combine_order_id)  receiver_address,
	(select b.cancel_reason from bu_combine_order b where b.id=a.combine_order_id)  cancel_reason,
	(select b.cancel_date from bu_combine_order b where b.id=a.combine_order_id)  cancel_date,
	(select b.create_date from bu_combine_order b where b.id=a.combine_order_id)  order_create_date,
	(select b.pay_date from bu_combine_order b where b.id=a.combine_order_id)  order_pay_date,
	(select b.name from bu_express b where b.id=a.express_id) express_name,
	FUN_GET_STATUS_DESC("BU_COMBINE_ORDER", "SOURCE_CLIENT", (select b.source_client from bu_combine_order b where b.id=a.combine_order_id)) source_client_desc,
	(select b.combine_order_code from bu_combine_order b where b.id=a.combine_order_id) combine_order_code,
	(select group_concat(b.activity_id) from bu_order_dtl b where b.sub_order_id=a.id and b.del_flag=0) activity_id_group,
	(select group_concat(b.activity_area_id) from bu_order_dtl b where b.sub_order_id=a.id and b.del_flag=0) activity_area_id_group,
	(select b.remarks_color from bu_remarks_log b where b.sub_order_id=a.id and b.del_flag='0' order by b.id desc limit 1) log_remarks_color,
	(select b.remarks from bu_remarks_log b where b.sub_order_id=a.id and b.del_flag='0' order by b.id desc limit 1) log_remarks,
	(select b.id from bu_kdn_wuliu_info b where b.express_id=a.express_id and b.logistic_code = a.express_no and b.status!='0' and b.del_flag='0') kdn_id,
	(select group_concat(b.product_id SEPARATOR ',') from bu_order_dtl b where b.sub_order_id=a.id) product_id,
	FUN_GET_STATUS_DESC("BU_SUB_ORDER", "OVERTIME_FOLLOW_STATUS", (select ssi.STAFF_NAME from sys_staff_info ssi,bu_order_abnormal_log oal where oal.sub_order_id=a.id and oal.abnormal_type='3' and oal.follow_by = ssi.STAFF_ID)) overtime_follow_status_desc,
  	FUN_GET_STATUS_DESC("BU_SUB_ORDER", "SHAM_FOLLOW_STATUS", (select ssi.STAFF_NAME from sys_staff_info ssi,bu_order_abnormal_log oal where oal.sub_order_id=a.id and oal.abnormal_type='4' and oal.follow_by = ssi.STAFF_ID)) sham_follow_status_desc,
    (select group_concat(b.id) from bu_violate_order b where a.id=b.sub_order_id and b.del_flag='0' and b.audit_status='1' order by b.id) violate_order_id,
    (select ssi.STAFF_NAME from sys_staff_info ssi where a.follow_by = ssi.STAFF_ID)follow_by_name,
  	(select group_concat(c.name) from bu_mcht_product_type b, bu_product_type c where a.mcht_id=b.mcht_id and b.product_type_id=c.id and b.del_flag='0' and b.is_main='1' and c.del_flag='0' and b.status='1' AND c.status='1') product_type_name,
  	(select group_concat(concat(FUN_GET_STATUS_DESC("BU_CUSTOMER_SERVICE_ORDER", "SERVICE_TYPE", cso.service_type), '|' ,FUN_GET_STATUS_DESC("BU_CUSTOMER_SERVICE_ORDER", "STATUS", cso.status), '|', cso.id) order by cso.id desc) from bu_customer_service_order cso where cso.del_flag = '0' and cso.sub_order_id = a.id order by cso.id desc ) customer_service_order_concat,
  	FUN_GET_STATUS_DESC("BU_COMBINE_ORDER", "ORDER_TYPE", (select b.order_type from bu_combine_order b where b.id = a.combine_order_id)) order_type_desc,
  	(select b.order_type from bu_combine_order b where b.id = a.combine_order_id) order_type,
  	(select mi.req_imei from bu_combine_order co, bu_member_info mi where co.del_flag = '0' and mi.del_flag = '0' and co.member_id = mi.id and co.id = a.combine_order_id) req_imei,
  	(select mi.status from bu_combine_order co, bu_member_info mi where co.del_flag = '0' and mi.del_flag = '0' and co.member_id = mi.id and co.id = a.combine_order_id) member_info_status,
  	(select group_concat(CONCAT('【',b.brand_name,'】 ',b.product_name)) from bu_order_dtl b where b.sub_order_id=a.id)brand_product_name
  </sql>
    <sql id="New_Column_List">
    id, combine_order_id, sub_order_code, mcht_id, mcht_type, is_manage_self, amount,
    pay_amount, platform_preferential, mcht_preferential, integral_preferential, status,
    receipt_date, receiver_type, is_user_del, remarks_color, status_date, express_id,
    express_no, delivery_date, complete_date, delivery_last_date, delivery_overtime,
    follow_by, is_comment, is_allow_modify_comment,distribution_amount,freight,audit_status, audit_date, create_by, create_date,
    update_by, update_date, remarks, del_flag,
    (SELECT b.product_name FROM bu_order_dtl b WHERE b.sub_order_id=a.id) product_name,
    (SELECT p.code FROM bu_order_dtl b,bu_product p WHERE b.product_id = p.id AND b.sub_order_id=a.id) product_code,
    (SELECT m.pic FROM bu_combine_order b,bu_member_college_student_certification m WHERE b.member_id = m.member_id AND b.id=a.combine_order_id) pic,
    (SELECT m.status FROM bu_combine_order b,bu_member_college_student_certification m WHERE b.member_id = m.member_id AND b.id=a.combine_order_id) member_status,
    FUN_GET_STATUS_DESC("BU_SUB_ORDER", "STATUS", a.status) status_desc,
    FUN_GET_STATUS_DESC("BU_MCHT_INFO", "MCHT_TYPE", a.mcht_type) mcht_type_desc,
    FUN_GET_STATUS_DESC("BU_MCHT_INFO", "IS_MANAGE_SELF", a.is_manage_self) is_manage_self_desc,
    (select b.short_name from bu_mcht_info b where b.id=a.mcht_id) short_name,
    (select group_concat(b.order_code SEPARATOR '<![CDATA[ <br> ]]>') from bu_violate_order b where a.id=b.sub_order_id and b.del_flag='0' and b.audit_status='1' order by b.id) order_code,
    (select sum(b.quantity) from bu_order_dtl b where b.sub_order_id=a.id) quantity,
    (select b.shop_name from bu_mcht_info b where b.id=a.mcht_id) shop_name,
    (select b.mcht_code from bu_mcht_info b where b.id=a.mcht_id) mcht_code,
    (select b.company_name from bu_mcht_info b where b.id=a.mcht_id) company_name,
	(select b.member_id from bu_combine_order b where b.id=a.combine_order_id)  member_id,
	(select b.remarks from bu_combine_order b where b.id=a.combine_order_id)  combine_order_remarks,
	(select b.receiver_name from bu_combine_order b where b.id=a.combine_order_id)  receiver_name,
	(select b.receiver_phone from bu_combine_order b where b.id=a.combine_order_id)  receiver_phone,
	(select b.receiver_address from bu_combine_order b where b.id=a.combine_order_id)  receiver_address,
	(select b.cancel_reason from bu_combine_order b where b.id=a.combine_order_id)  cancel_reason,
	(select b.cancel_date from bu_combine_order b where b.id=a.combine_order_id)  cancel_date,
	(select b.create_date from bu_combine_order b where b.id=a.combine_order_id)  order_create_date,
	(select b.pay_date from bu_combine_order b where b.id=a.combine_order_id)  order_pay_date,
	(select b.name from bu_express b where b.id=a.express_id) express_name,
	FUN_GET_STATUS_DESC("BU_COMBINE_ORDER", "SOURCE_CLIENT", (select b.source_client from bu_combine_order b where b.id=a.combine_order_id)) source_client_desc,
	(select b.combine_order_code from bu_combine_order b where b.id=a.combine_order_id) combine_order_code,
	(select group_concat(b.activity_id) from bu_order_dtl b where b.sub_order_id=a.id and b.del_flag=0) activity_id_group,
	(select group_concat(b.activity_area_id) from bu_order_dtl b where b.sub_order_id=a.id and b.del_flag=0) activity_area_id_group,
	(select b.remarks_color from bu_remarks_log b where b.sub_order_id=a.id and b.del_flag='0' order by b.id desc limit 1) log_remarks_color,
	(select b.remarks from bu_remarks_log b where b.sub_order_id=a.id and b.del_flag='0' order by b.id desc limit 1) log_remarks,
	(select b.id from bu_kdn_wuliu_info b where b.express_id=a.express_id and b.logistic_code = a.express_no and b.status!='0' and b.del_flag='0') kdn_id,
	(select group_concat(b.product_id SEPARATOR ',') from bu_order_dtl b where b.sub_order_id=a.id) product_id,
	FUN_GET_STATUS_DESC("BU_SUB_ORDER", "OVERTIME_FOLLOW_STATUS", (select ssi.STAFF_NAME from sys_staff_info ssi,bu_order_abnormal_log oal where oal.sub_order_id=a.id and oal.abnormal_type='3' and oal.follow_by = ssi.STAFF_ID)) overtime_follow_status_desc,
  	FUN_GET_STATUS_DESC("BU_SUB_ORDER", "SHAM_FOLLOW_STATUS", (select ssi.STAFF_NAME from sys_staff_info ssi,bu_order_abnormal_log oal where oal.sub_order_id=a.id and oal.abnormal_type='4' and oal.follow_by = ssi.STAFF_ID)) sham_follow_status_desc,
    (select group_concat(b.id) from bu_violate_order b where a.id=b.sub_order_id and b.del_flag='0' and b.audit_status='1' order by b.id) violate_order_id,
    (select ssi.STAFF_NAME from sys_staff_info ssi where a.follow_by = ssi.STAFF_ID)follow_by_name,
  	(select group_concat(concat(FUN_GET_STATUS_DESC("BU_CUSTOMER_SERVICE_ORDER", "SERVICE_TYPE", cso.service_type), '|' ,FUN_GET_STATUS_DESC("BU_CUSTOMER_SERVICE_ORDER", "STATUS", cso.status), '|', cso.id) order by cso.id desc) from bu_customer_service_order cso where cso.del_flag = '0' and cso.sub_order_id = a.id order by cso.id desc ) customer_service_order_concat,
  	FUN_GET_STATUS_DESC("BU_COMBINE_ORDER", "ORDER_TYPE", (select b.order_type from bu_combine_order b where b.id = a.combine_order_id)) order_type_desc,
  	(select mi.req_imei from bu_combine_order co, bu_member_info mi where co.del_flag = '0' and mi.del_flag = '0' and co.member_id = mi.id and co.id = a.combine_order_id) req_imei,
  	(select mi.status from bu_combine_order co, bu_member_info mi where co.del_flag = '0' and mi.del_flag = '0' and co.member_id = mi.id and co.id = a.combine_order_id) member_info_status,
  	(select group_concat(CONCAT('【',b.brand_name,'】 ',b.product_name)) from bu_order_dtl b where b.sub_order_id=a.id)brand_product_name
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.SubOrderExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from bu_sub_order a
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitSize}
        </if>
    </select>
   <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from bu_sub_order a
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectStudy" resultMap="BaseResultMap">
        select
        *,
        od.id as orderdtl_id
        from bu_sub_order so left join bu_order_dtl od on so.id = od.sub_order_id where so.id = 768
    </select>

    <select id="countByExample" parameterType="com.jf.entity.SubOrderExample" resultType="java.lang.Integer">
        select count(*) from bu_sub_order a
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="deliveryOvertimeCount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        t.mcht_code,
        t.shop_name,
        t.company_name,
        SUM(t.total_order_count) AS total_order_count,
        SUM(t.overtime_order_count) AS overtime_order_count,
        CONCAT(
        ROUND(
        SUM(t.overtime_order_count) * 100 / SUM(t.total_order_count),
        2
        ),
        '%'
        ) AS rate
        FROM
        (
        SELECT
        mi.id AS mcht_id,
        mi.mcht_code,
        mi.shop_name,
        mi.company_name,
        COUNT(DISTINCT so.id) AS total_order_count,
        0 AS overtime_order_count
        FROM
        bu_mcht_info mi,
        bu_sub_order so,
        bu_combine_order co
        <if test="platformContactId!=null">
            ,bu_mcht_platform_contact mpc
        </if>
        WHERE
        mi.id = so.mcht_id
        AND so.combine_order_id = co.id
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="shopName!=null">
            AND mi.shop_name = #{shopName}
        </if>
        <if test="platformContactId!=null">
            AND so.mcht_id = mpc.mcht_id AND mpc.del_flag = '0' AND mpc.status = '1' AND
            mpc.platform_contact_id=#{platformContactId}
        </if>
        GROUP BY
        mi.id
        UNION
        SELECT
        mi.id AS mcht_id,
        mi.mcht_code,
        mi.shop_name,
        mi.company_name,
        0 AS total_order_count,
        COUNT(DISTINCT so.id) AS overtime_order_count
        FROM
        bu_mcht_info mi,
        bu_sub_order so,
        bu_order_abnormal_log oal,
        bu_combine_order co
        <if test="platformContactId!=null">
            ,bu_mcht_platform_contact mpc
        </if>
        WHERE
        mi.id = so.mcht_id
        AND so.id = oal.sub_order_id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '3'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
        AND so.del_flag = '0'
        AND oal.del_flag = '0'
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="shopName!=null">
            AND mi.shop_name = #{shopName}
        </if>
        <if test="platformContactId!=null">
            AND so.mcht_id = mpc.mcht_id AND mpc.del_flag = '0' AND mpc.status = '1' AND
            mpc.platform_contact_id=#{platformContactId}
        </if>
        GROUP BY
        mi.id
        ) t
        GROUP BY
        t.mcht_id
    </select>
    <select id="falseOrderCount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        t.mcht_code,
        t.shop_name,
        t.company_name,
        SUM(t.total_order_count) AS total_order_count,
        SUM(t.delivery_order_count) AS delivery_order_count,
        SUM(t.false_order_count) AS false_order_count,
        CONCAT(
        ROUND(
        SUM(t.false_order_count) * 100 / SUM(t.delivery_order_count),
        2
        ),
        '%'
        ) AS rate
        FROM
        (
        SELECT
        mi.id AS mcht_id,
        mi.mcht_code,
        mi.shop_name,
        mi.company_name,
        COUNT(DISTINCT so.id) AS total_order_count,
        0 AS delivery_order_count,
        0 AS false_order_count
        FROM
        bu_mcht_info mi,
        bu_sub_order so,
        bu_combine_order co
        <if test="platformContactId!=null">
            ,bu_mcht_platform_contact mpc
        </if>
        WHERE
        mi.id = so.mcht_id
        AND so.combine_order_id = co.id
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="shopName!=null">
            AND mi.shop_name = #{shopName}
        </if>
        <if test="platformContactId!=null">
            AND so.mcht_id = mpc.mcht_id AND mpc.del_flag = '0' AND mpc.status = '1' AND
            mpc.platform_contact_id=#{platformContactId}
        </if>
        GROUP BY
        mi.id
        UNION
        SELECT
        mi.id AS mcht_id,
        mi.mcht_code,
        mi.shop_name,
        mi.company_name,
        0 AS total_order_count,
        COUNT(DISTINCT so.id) AS delivery_order_count,
        0 AS false_order_count
        FROM
        bu_mcht_info mi,
        bu_sub_order so,
        bu_combine_order co
        <if test="platformContactId!=null">
            ,bu_mcht_platform_contact mpc
        </if>
        WHERE
        mi.id = so.mcht_id
        AND so.combine_order_id = co.id
        AND co.`status` = '1'
        AND so.status in ('2','3','5')
        AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="shopName!=null">
            AND mi.shop_name = #{shopName}
        </if>
        <if test="platformContactId!=null">
            AND so.mcht_id = mpc.mcht_id AND mpc.del_flag = '0' AND mpc.status = '1' AND
            mpc.platform_contact_id=#{platformContactId}
        </if>
        GROUP BY
        mi.id
        UNION
        SELECT
        mi.id AS mcht_id,
        mi.mcht_code,
        mi.shop_name,
        mi.company_name,
        0 AS total_order_count,
        0 AS delivery_order_count,
        COUNT(DISTINCT so.id) AS false_order_count
        FROM
        bu_mcht_info mi,
        bu_sub_order so,
        bu_order_abnormal_log oal,
        bu_combine_order co
        <if test="platformContactId!=null">
            ,bu_mcht_platform_contact mpc
        </if>
        WHERE
        mi.id = so.mcht_id
        AND so.id = oal.sub_order_id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '4'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
        AND so.del_flag = '0'
        AND oal.del_flag = '0'
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="shopName!=null">
            AND mi.shop_name = #{shopName}
        </if>
        <if test="platformContactId!=null">
            AND so.mcht_id = mpc.mcht_id AND mpc.del_flag = '0' AND mpc.status = '1' AND
            mpc.platform_contact_id=#{platformContactId}
        </if>
        GROUP BY
        mi.id
        ) t
        GROUP BY
        t.mcht_id
    </select>
    <select id="outOfStockOrderCount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        t.mcht_code,
        t.shop_name,
        t.company_name,
        SUM(t.total_order_count) AS total_order_count,
        SUM(t.out_of_stock_order_count) AS out_of_stock_order_count,
        CONCAT(
        ROUND(
        SUM(t.out_of_stock_order_count) * 100 / SUM(t.total_order_count),
        2
        ),
        '%'
        ) AS rate
        FROM (
        SELECT
        mi.id AS mcht_id,
        mi.mcht_code,
        mi.shop_name,
        mi.company_name,
        COUNT(DISTINCT so.id) AS total_order_count,
        0 AS out_of_stock_order_count
        FROM
        bu_mcht_info mi,
        bu_sub_order so,
        bu_combine_order co
        <if test="platformContactId!=null">
            ,bu_mcht_platform_contact mpc
        </if>
        WHERE
        mi.id = so.mcht_id
        AND so.combine_order_id = co.id
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
        AND so.del_flag = '0'
        AND co.del_flag = '0'
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="shopName!=null">
            AND mi.shop_name = #{shopName}
        </if>
        <if test="platformContactId!=null">
            AND so.mcht_id = mpc.mcht_id AND mpc.del_flag = '0' AND mpc.status = '1' AND
            mpc.platform_contact_id=#{platformContactId}
        </if>
        GROUP BY
        mi.id
        UNION
        SELECT
        mi.id AS mcht_id,
        mi.mcht_code,
        mi.shop_name,
        mi.company_name,
        0 AS total_order_count,
        COUNT(DISTINCT so.id) AS out_of_stock_order_count
        FROM
        bu_mcht_info mi,
        bu_sub_order so,
        bu_order_abnormal_log oal,
        bu_combine_order co
        <if test="platformContactId!=null">
            ,bu_mcht_platform_contact mpc
        </if>
        WHERE
        mi.id = so.mcht_id
        AND so.id = oal.sub_order_id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '1'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
        AND so.del_flag = '0'
        AND oal.del_flag = '0'
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="shopName!=null">
            AND mi.shop_name = #{shopName}
        </if>
        <if test="platformContactId!=null">
            AND so.mcht_id = mpc.mcht_id AND mpc.del_flag = '0' AND mpc.status = '1' AND
            mpc.platform_contact_id=#{platformContactId}
        </if>
        GROUP BY
        mi.id) t
        GROUP BY
        t.mcht_id
    </select>
    <select id="otherExceptionOrderCount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        t.mcht_code,
        t.shop_name,
        t.company_name,
        SUM(t.total_order_count) AS total_order_count,
        SUM(t.other_exception_order_count) AS other_exception_order_count,
        CONCAT(
        ROUND(
        SUM(t.other_exception_order_count) * 100 / SUM(t.total_order_count),
        2
        ),
        '%'
        ) AS rate
        FROM (
        SELECT
        mi.id AS mcht_id,
        mi.mcht_code,
        mi.shop_name,
        mi.company_name,
        COUNT(DISTINCT so.id) AS total_order_count,
        0 AS other_exception_order_count
        FROM
        bu_mcht_info mi,
        bu_sub_order so,
        bu_combine_order co
        <if test="platformContactId!=null">
            ,bu_mcht_platform_contact mpc
        </if>
        WHERE
        mi.id = so.mcht_id
        AND so.combine_order_id = co.id
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
        AND so.del_flag = '0'
        AND co.del_flag = '0'
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="shopName!=null">
            AND mi.shop_name = #{shopName}
        </if>
        <if test="platformContactId!=null">
            AND so.mcht_id = mpc.mcht_id AND mpc.del_flag = '0' AND mpc.status = '1' AND
            mpc.platform_contact_id=#{platformContactId}
        </if>
        GROUP BY
        mi.id
        UNION
        SELECT
        mi.id AS mcht_id,
        mi.mcht_code,
        mi.shop_name,
        mi.company_name,
        0 AS total_order_count,
        COUNT(DISTINCT so.id) AS other_exception_order_count
        FROM
        bu_mcht_info mi,
        bu_sub_order so,
        bu_order_abnormal_log oal,
        bu_combine_order co
        <if test="platformContactId!=null">
            ,bu_mcht_platform_contact mpc
        </if>
        WHERE
        mi.id = so.mcht_id
        AND so.id = oal.sub_order_id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '2'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
        AND so.del_flag = '0'
        AND oal.del_flag = '0'
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="shopName!=null">
            AND mi.shop_name = #{shopName}
        </if>
        <if test="platformContactId!=null">
            AND so.mcht_id = mpc.mcht_id AND mpc.del_flag = '0' AND mpc.status = '1' AND
            mpc.platform_contact_id=#{platformContactId}
        </if>
        GROUP BY
        mi.id) t
        GROUP BY
        t.mcht_id
    </select>

    <select id="customerserviceOrderCount" parameterType="java.util.HashMap" resultType="java.util.HashMap">
SELECT
    '全部' AS name,
    SUM(t.totalorder_count) AS totalorder_count,
	SUM(t.overtimeorder_count) AS overtimeorder_count,
    SUM(t.falseorder_count) AS falseorder_count,
    SUM(t.outofstock_order_count) AS outofstock_order_count,
	 CONCAT(
			 ROUND( 
				SUM(t.overtimeorder_count) * 100 / SUM(t.totalorder_count),
			 	1
			),
			'%'
		) AS overtimeordercount_rate,
	CONCAT(
			ROUND(
				SUM(t.falseorder_count) * 100 / SUM(t.totalorder_count),
				1
			),
			'%'
		) AS falseordercount_rate,
    CONCAT(
			ROUND(
				SUM(t.outofstock_order_count) * 100 / SUM(t.totalorder_count),
			 	1
			),
			 '%' 
		) AS outofstockordercount_rate 
	FROM
	   (
	SELECT	 	
        '全部',
		COUNT(*) AS totalorder_count,
		0 AS overtimeorder_count,
        0 AS falseorder_count,
        0 AS outofstock_order_count
	   FROM		
		   bu_sub_order so,
		   bu_combine_order co,
           bu_mcht_product_type mo,
           bu_product_type po
	 WHERE		
		  so.combine_order_id = co.id
          AND mo.product_type_id=po.id
          AND mo.mcht_id=so.mcht_id
          AND po.t_level='1'
	      AND co.`status` = '1'
	      AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
	      AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
          AND po.del_flag='0'
          AND mo.del_flag='0'
          AND so.del_flag = '0'
	      AND co.del_flag = '0'
	UNION
	  SELECT
          '全部',
		  0 AS totalorder_count,
		  COUNT(*) AS overtimeorder_count,
          0 AS falseorder_count,
          0 AS outofstock_order_count
	FROM
		bu_sub_order so,
		bu_order_abnormal_log oal,
		bu_combine_order co,
        bu_mcht_product_type mo,
        bu_product_type po
	WHERE
		  so.id = oal.sub_order_id
	  AND so.combine_order_id = co.id
	  AND oal.abnormal_type = '3'
      AND mo.product_type_id=po.id
      AND mo.mcht_id=so.mcht_id
      AND po.t_level='1'
	  AND co.`status` = '1'
	  AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
	  AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
	  AND so.del_flag = '0'
	  AND oal.del_flag = '0'
	  AND co.del_flag = '0'
	  AND mo.del_flag = '0'
	  AND po.del_flag = '0'	
    UNION
		SELECT 
           '全部',        
		   0 AS totalorder_count,
           0 AS overtimeorder_count,
		   COUNT(*) AS falseorder_count,
           0 AS outofstock_order_count
		FROM
		bu_sub_order so,
		bu_order_abnormal_log oal,
		bu_combine_order co,
        bu_mcht_product_type mo,
        bu_product_type po
	WHERE
		  so.id = oal.sub_order_id
	  AND so.combine_order_id = co.id
	  AND oal.abnormal_type = '4'
      AND mo.product_type_id=po.id
      AND mo.mcht_id=so.mcht_id
      AND po.t_level='1'
	  AND co.`status` = '1'
	  AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
	  AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
	  AND so.del_flag = '0'
	  AND oal.del_flag = '0'
	  AND co.del_flag = '0'
	  AND mo.del_flag = '0'
	  AND po.del_flag = '0'	
  UNION
	 SELECT 
       '全部',    
	    0 AS totalorder_count,
        0 AS overtimeorder_count,
        0 AS falseorder_count,
	    COUNT(*) AS outofstock_order_count
	 FROM
		bu_sub_order so,
		bu_order_abnormal_log oal,
		bu_combine_order co,
        bu_mcht_product_type mo,
        bu_product_type po
	WHERE
		  so.id = oal.sub_order_id
	  AND so.combine_order_id = co.id
	  AND oal.abnormal_type = '1'
      AND mo.product_type_id=po.id
      AND mo.mcht_id=so.mcht_id
      AND po.t_level='1'
	  AND co.`status` = '1'
	  AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
	  AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
	  AND so.del_flag = '0'
	  AND oal.del_flag = '0'
	  AND co.del_flag = '0'
	  AND mo.del_flag = '0'
	  AND po.del_flag = '0'	
		) t
 UNION		
   SELECT
    t.`name`,
    SUM(t.totalorder_count) AS totalorder_count,
	SUM(t.overtimeorder_count) AS overtimeorder_count,
    SUM(t.falseorder_count) AS falseorder_count,
    SUM(t.outofstock_order_count) AS outofstock_order_count,
	 CONCAT(
			 ROUND( 
				SUM(t.overtimeorder_count) * 100 / SUM(t.totalorder_count),
			 	1
			),
			'%'
		) AS overtimeordercount_rate,
	CONCAT(
			ROUND(
				SUM(t.falseorder_count) * 100 / SUM(t.totalorder_count),
				1
			),
			'%'
		) AS falseordercount_rate,
    CONCAT(
			ROUND(
				SUM(t.outofstock_order_count) * 100 / SUM(t.totalorder_count),
			 	1
			),
			 '%' 
		) AS outofstockordercount_rate 
	FROM
	   (
		SELECT
		po.id AS po_id,
        po.`name`,	 	
		COUNT(DISTINCT so.id) AS totalorder_count,
		0 AS overtimeorder_count,
        0 AS falseorder_count,
        0 AS outofstock_order_count
	   FROM		
		   bu_sub_order so,
		   bu_combine_order co,
           bu_mcht_product_type mo,
           bu_product_type po
	 WHERE		
		  so.combine_order_id = co.id
      AND mo.product_type_id=po.id
      AND mo.mcht_id=so.mcht_id
      AND po.t_level='1'
	  AND co.`status` = '1'
	  AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
	  AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
      AND po.del_flag='0'
      AND mo.del_flag='0'
      AND so.del_flag = '0'
	  AND co.del_flag = '0'
	GROUP BY
	po.`id`
	UNION
	  SELECT
	      po.id AS po_id,
          po.`name`,
		  0 AS totalorder_count,
		  COUNT(DISTINCT so.id) AS overtimeorder_count,
          0 AS falseorder_count,
          0 AS outofstock_order_count
		FROM
		bu_sub_order so,
		bu_order_abnormal_log oal,
		bu_combine_order co,
        bu_mcht_product_type mo,
        bu_product_type po
	WHERE
		  so.id = oal.sub_order_id
	  AND so.combine_order_id = co.id
	  AND oal.abnormal_type = '3'
      AND mo.product_type_id=po.id
      AND mo.mcht_id=so.mcht_id
      AND po.t_level='1'
	  AND co.`status` = '1'
	  AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
	  AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
	  AND so.del_flag = '0'
	  AND oal.del_flag = '0'
	  AND co.del_flag = '0'
	  AND mo.del_flag = '0'
	  AND po.del_flag = '0'
	GROUP BY
	po.`id`
     UNION
		 SELECT
		  po.id AS po_id,
          po.`name`,
		  0 AS totalorder_count,
          0 AS overtimeorder_count,
		  COUNT(DISTINCT so.id) AS falseorder_count,
          0 AS outofstock_order_count
	   FROM
		bu_sub_order so,
		bu_order_abnormal_log oal,
		bu_combine_order co,
        bu_mcht_product_type mo,
        bu_product_type po
	WHERE
		  so.id = oal.sub_order_id
	  AND so.combine_order_id = co.id
	  AND oal.abnormal_type = '4'
      AND mo.product_type_id=po.id
      AND mo.mcht_id=so.mcht_id
      AND po.t_level='1'
	  AND co.`status` = '1'
	  AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
	  AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
	  AND so.del_flag = '0'
	  AND oal.del_flag = '0'
	  AND co.del_flag = '0'
	  AND mo.del_flag = '0'
	  AND po.del_flag = '0'
	GROUP BY
	po.`id`
  UNION
	SELECT
	   po.id AS po_id,
       po.`name`,
	  0 AS totalorder_count,
      0 AS overtimeorder_count,
      0 AS falseorder_count,
	  COUNT(DISTINCT so.id) AS outofstock_order_count
	 FROM
		bu_sub_order so,
		bu_order_abnormal_log oal,
		bu_combine_order co,
        bu_mcht_product_type mo,
        bu_product_type po
	WHERE
		  so.id = oal.sub_order_id
	  AND so.combine_order_id = co.id
	  AND oal.abnormal_type = '1'
      AND mo.product_type_id=po.id
      AND mo.mcht_id=so.mcht_id
      AND po.t_level='1'
	  AND co.`status` = '1'
	  AND co.pay_date <![CDATA[ >= ]]> #{payDateBegin}
	  AND co.pay_date <![CDATA[ <= ]]> #{payDateEnd}
	  AND so.del_flag = '0'
	  AND oal.del_flag = '0'
	  AND co.del_flag = '0'
	  AND mo.del_flag = '0'
	  AND po.del_flag = '0'
	GROUP BY
	po.`id`		
		) t
	GROUP BY
		t.po_id
 
   </select>
    <select id="getOrderStatisticsList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        T.*, mi.mcht_code,
        mi.company_name,
        mi.shop_name,
        (
        SELECT
        pt.`name`
        FROM
        bu_mcht_product_type mpt,
        bu_product_type pt
        WHERE
        mpt.mcht_id = T.mcht_id
        AND mpt.product_type_id = pt.id
        AND mpt.`status` = '1'
        AND mpt.is_main = '1'
        AND mpt.del_flag = '0'
        AND pt.`status` = '1'
        AND pt.del_flag = '0'
        LIMIT 1
        ) AS product_type_names,
        IFNULL(CONVERT((T.time_of_length/T.bu_sub_order_id_count/3600),DECIMAL (10, 2)),'') AS time_of_length_avg
        FROM
        (
        SELECT
        t.mcht_id,
        SUM(t.pay_order_count) AS pay_order_count,
        SUM(t.overtime_order_count) AS overtime_order_count,
        SUM(t.sham_order_count) AS sham_order_count,
        SUM(t.out_of_stock_order_count) AS out_of_stock_order_count,
        SUM(t.abnormal_order_count) AS abnormal_order_count,
        SUM(t.intervention_order_count) AS intervention_order_count,
        SUM(t.appeal_order_count) AS appeal_order_count,
        (SELECT	count(so.id)
        FROM
        bu_sub_order so,
        bu_combine_order co
        WHERE
        so.mcht_id = t.mcht_id
        AND
        so.combine_order_id = co.id
        AND co.`status` = '1'
        AND so.delivery_date IS NOT NULL
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        AND co.del_flag = '0') AS bu_sub_order_id_count,
        SUM(t.time_of_length) AS time_of_length
        FROM
        (
        SELECT
        so.mcht_id,
        COUNT(DISTINCT so.id) pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count,
        NULL AS time_of_length
        FROM
        bu_sub_order so,
        bu_combine_order co
        WHERE
        so.combine_order_id = co.id
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        AND co.del_flag = '0'
        GROUP BY
        so.mcht_id
        UNION
        SELECT
        so.mcht_id,
        0 AS pay_order_count,
        COUNT(DISTINCT so.id) AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count,
        NULL AS time_of_length
        FROM
        bu_sub_order so,
        bu_combine_order co,
        bu_order_abnormal_log oal
        WHERE
        oal.sub_order_id = so.id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '3'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        GROUP BY
        so.mcht_id
        UNION
        SELECT
        so.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        COUNT(DISTINCT so.id) AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count,
        NULL AS time_of_length
        FROM
        bu_sub_order so,
        bu_combine_order co,
        bu_order_abnormal_log oal
        WHERE
        oal.sub_order_id = so.id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '4'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        GROUP BY
        so.mcht_id
        UNION
        SELECT
        so.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        COUNT(DISTINCT so.id) AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count,
        NULL AS time_of_length
        FROM
        bu_sub_order so,
        bu_combine_order co,
        bu_order_abnormal_log oal
        WHERE
        oal.sub_order_id = so.id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '1'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        GROUP BY
        so.mcht_id
        UNION
        SELECT
        so.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        COUNT(DISTINCT so.id) AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count,
        NULL AS time_of_length
        FROM
        bu_sub_order so,
        bu_combine_order co,
        bu_order_abnormal_log oal
        WHERE
        oal.sub_order_id = so.id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '2'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        GROUP BY
        so.mcht_id
        UNION
        SELECT
        io.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        COUNT(DISTINCT io.id) AS intervention_order_count,
        0 AS appeal_order_count,
        NULL AS time_of_length
        FROM
        bu_intervention_order io
        WHERE
        io.create_date <![CDATA[ >= ]]> #{dateBegin}
        AND io.create_date <![CDATA[ <= ]]> #{dateEnd}
        AND io.del_flag = '0'
        GROUP BY
        io.mcht_id
        UNION
        SELECT
        ao.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        COUNT(DISTINCT ao.id) AS appeal_order_count,
        NULL AS time_of_length
        FROM
        bu_appeal_order ao
        WHERE
        ao.create_date <![CDATA[ >= ]]> #{dateBegin}
        AND ao.create_date <![CDATA[ <= ]]> #{dateEnd}
        AND ao.del_flag = '0'
        GROUP BY
        ao.mcht_id
        UNION
        SELECT
        so.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count,
        TIMESTAMPDIFF(
        SECOND,
        co.pay_date,
        so.delivery_date
        ) AS time_of_length
        FROM
        bu_sub_order so,
        bu_combine_order co
        WHERE
        so.combine_order_id = co.id
        AND co.`status` = '1'
        AND so.delivery_date IS NOT NULL
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        AND co.del_flag = '0'
        ) t
        GROUP BY
        t.mcht_id
        ) T,
        bu_mcht_info mi
        <if test="productTypeId!=null">
            ,bu_mcht_product_type mpt
        </if>
        WHERE
        T.mcht_id = mi.id
        AND mi.del_flag = '0'
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="companyName!=null">
            AND mi.company_name like concat('%',#{companyName},'%')
        </if>
        <if test="shopName!=null">
            AND mi.shop_name like concat('%',#{shopName},'%')
        </if>
        <if test="productTypeId!=null">
            AND mpt.mcht_id = T.mcht_id
            AND mpt.product_type_id = #{productTypeId}
            AND mpt.`status` = '1'
            AND mpt.is_main = '1'
            AND mpt.del_flag ='0'
        </if>
        limit #{limitStar},#{pageSize}
    </select>

    <select id="countOrderStatisticsList" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        (
        SELECT
        t.mcht_id,
        SUM(t.pay_order_count) AS pay_order_count,
        SUM(t.overtime_order_count) AS overtime_order_count,
        SUM(t.sham_order_count) AS sham_order_count,
        SUM(t.out_of_stock_order_count) AS out_of_stock_order_count,
        SUM(t.abnormal_order_count) AS abnormal_order_count,
        SUM(t.intervention_order_count) AS intervention_order_count,
        SUM(t.appeal_order_count) AS appeal_order_count
        FROM
        (
        SELECT
        so.mcht_id,
        COUNT(DISTINCT so.id) pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count
        FROM
        bu_sub_order so,
        bu_combine_order co
        WHERE
        so.combine_order_id = co.id
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        AND co.del_flag = '0'
        GROUP BY
        so.mcht_id
        UNION
        SELECT
        so.mcht_id,
        0 AS pay_order_count,
        COUNT(DISTINCT so.id) AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count
        FROM
        bu_sub_order so,
        bu_combine_order co,
        bu_order_abnormal_log oal
        WHERE
        oal.sub_order_id = so.id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '3'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        GROUP BY
        so.mcht_id
        UNION
        SELECT
        so.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        COUNT(DISTINCT so.id) AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count
        FROM
        bu_sub_order so,
        bu_combine_order co,
        bu_order_abnormal_log oal
        WHERE
        oal.sub_order_id = so.id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '4'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        GROUP BY
        so.mcht_id
        UNION
        SELECT
        so.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        COUNT(DISTINCT so.id) AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count
        FROM
        bu_sub_order so,
        bu_combine_order co,
        bu_order_abnormal_log oal
        WHERE
        oal.sub_order_id = so.id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '1'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        GROUP BY
        so.mcht_id
        UNION
        SELECT
        so.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        COUNT(DISTINCT so.id) AS abnormal_order_count,
        0 AS intervention_order_count,
        0 AS appeal_order_count
        FROM
        bu_sub_order so,
        bu_combine_order co,
        bu_order_abnormal_log oal
        WHERE
        oal.sub_order_id = so.id
        AND so.combine_order_id = co.id
        AND oal.abnormal_type = '2'
        AND co.`status` = '1'
        AND co.pay_date <![CDATA[ >= ]]> #{dateBegin}
        AND co.pay_date <![CDATA[ <= ]]> #{dateEnd}
        AND so.del_flag = '0'
        GROUP BY
        so.mcht_id
        UNION
        SELECT
        io.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        COUNT(DISTINCT io.id) AS intervention_order_count,
        0 AS appeal_order_count
        FROM
        bu_intervention_order io
        WHERE
        io.create_date <![CDATA[ >= ]]> #{dateBegin}
        AND io.create_date <![CDATA[ <= ]]> #{dateEnd}
        AND io.del_flag = '0'
        GROUP BY
        io.mcht_id
        UNION
        SELECT
        ao.mcht_id,
        0 AS pay_order_count,
        0 AS overtime_order_count,
        0 AS sham_order_count,
        0 AS out_of_stock_order_count,
        0 AS abnormal_order_count,
        0 AS intervention_order_count,
        COUNT(DISTINCT ao.id) AS appeal_order_count
        FROM
        bu_appeal_order ao
        WHERE
        ao.create_date <![CDATA[ >= ]]> #{dateBegin}
        AND ao.create_date <![CDATA[ <= ]]> #{dateEnd}
        AND ao.del_flag = '0'
        GROUP BY
        ao.mcht_id
        ) t
        GROUP BY
        t.mcht_id
        ) T,
        bu_mcht_info mi
        <if test="productTypeId!=null">
            ,bu_mcht_product_type mpt
        </if>
        WHERE
        T.mcht_id = mi.id
        AND mi.del_flag = '0'
        <if test="mchtCode!=null">
            AND mi.mcht_code = #{mchtCode}
        </if>
        <if test="companyName!=null">
            AND mi.company_name like concat('%',#{companyName},'%')
        </if>
        <if test="shopName!=null">
            AND mi.shop_name like concat('%',#{shopName},'%')
        </if>
        <if test="productTypeId!=null">
            AND mpt.mcht_id = T.mcht_id
            AND mpt.product_type_id = #{productTypeId}
            AND mpt.`status` = '1'
            AND mpt.is_main = '1'
            AND mpt.del_flag ='0'
        </if>

    </select>
   
       
  <select id="selectDailyCollectionSummary" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT
		t.mcht_id,
		(SELECT pt.NAME FROM bu_mcht_product_type mpt,bu_product_type pt WHERE mpt.mcht_id = m.id AND mpt.product_type_id = pt.id AND mpt.is_main = '1' AND mpt.STATUS = '1' AND mpt.del_flag = '0' AND pt.del_flag = '0' ) main_product_type,
		m.mcht_code,
		m.company_name,
		m.shop_name,
		sum( t.pay_amount ) - IFNULL(
		(
		SELECT
			sum( c.amount ) 
		FROM
			bu_customer_service_order c ,
			bu_sub_order bso
		WHERE
			c.del_flag = '0' 
			AND bso.del_flag = '0'
			AND bso.mcht_id = m.id
			AND bso.id = c.sub_order_id 
			AND c.service_type IN ( 'A', 'B' ) 
			AND c.STATUS = '1' 
			AND bso.status= '6'
			<if test="receipt_date_begin!=null and receipt_date_begin!=''">
			AND bso.receipt_date <![CDATA[ >= ]]> #{receipt_date_begin} 
			</if>
			<if test="receipt_date_end!=null and receipt_date_end!=''">
			AND bso.receipt_date <![CDATA[ <= ]]> #{receipt_date_end} 
			</if>
		),
		0 
	) sum_pay_amount  
	FROM
		bu_sub_order t,
		bu_mcht_info m 
	WHERE
		t.mcht_id = m.id 
		AND m.del_flag = '0' 
		AND m.mcht_type = '2' 
		AND t.status = '6'
		<if test="mchtCode!=null and mchtCode!=''">
		AND m.mcht_code IN
	     <foreach collection="mchtCode" item="listItem" open="(" close=")" separator="," >
           #{listItem,jdbcType=VARCHAR}
         </foreach>
		</if>
		<if test="mainProductType!=null and mainProductType!=''">
		AND EXISTS(SELECT pt.id FROM bu_mcht_product_type mpt,bu_product_type pt WHERE mpt.mcht_id = m.id AND mpt.product_type_id = pt.id AND mpt.is_main = '1' AND mpt.STATUS = '1' AND pt.id = #{mainProductType} AND mpt.del_flag = '0' AND pt.del_flag = '0')
		</if>
		<if test="companyName!=null and companyName!=''">
		AND m.company_name like #{companyName}
		</if>
		<if test="receipt_date_begin!=null and receipt_date_begin!=''">
		AND t.receipt_date <![CDATA[ >= ]]> #{receipt_date_begin} 
		</if>
		<if test="receipt_date_end!=null and receipt_date_end!=''">
		AND t.receipt_date <![CDATA[ <= ]]> #{receipt_date_end} 
		</if>
	GROUP BY
		t.mcht_id 	
		<if test="orderBy != '' and orderBy != null">
			${orderBy }
		</if>
		<if test="pageLimit != '' and pageLimit != null">
			${pageLimit }
		</if>	
	</select>
	<select id="countDailyCollectionSummary" parameterType="java.util.HashMap" resultType="java.lang.Integer">
	select
	count(1)
	from (
	SELECT
		count(t.id) 
	FROM
		bu_sub_order t,
		bu_mcht_info m 
	WHERE
		t.mcht_id = m.id 
		AND m.del_flag = '0' 
		AND m.mcht_type = '2' 
		AND t.status = '6'
		<if test="mchtCode!=null and mchtCode!=''">
		AND m.mcht_code IN
	     <foreach collection="mchtCode" item="listItem" open="(" close=")" separator="," >
           #{listItem,jdbcType=VARCHAR}
         </foreach>
		</if>
		<if test="mainProductType!=null and mainProductType!=''">
		AND EXISTS(SELECT pt.id FROM bu_mcht_product_type mpt,bu_product_type pt WHERE mpt.mcht_id = m.id AND mpt.product_type_id = pt.id AND mpt.is_main = '1' AND mpt.STATUS = '1' AND pt.id = #{mainProductType} AND mpt.del_flag = '0' AND pt.del_flag = '0')
		</if>
		<if test="companyName!=null and companyName!=''">
		AND m.company_name like #{companyName}
		</if>
		<if test="receipt_date_begin!=null and receipt_date_begin!=''">
		AND t.receipt_date <![CDATA[ >= ]]> #{receipt_date_begin} 
		</if>
		<if test="receipt_date_end!=null and receipt_date_end!=''">
		AND t.receipt_date <![CDATA[ <= ]]> #{receipt_date_end} 
		</if>
	GROUP BY
		t.mcht_id 
			) a	
	</select>

    <select id="selectSubOrderByExample" resultMap="BaseResultMap" parameterType="com.jf.entity.SubOrderExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="New_Column_List"/>
        from bu_sub_order a
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitSize}
        </if>
    </select>

    <select id="selectSubOrderByExampleAndDate" resultMap="BaseResultMap" parameterType="com.jf.entity.SubOrderExample">
        SELECT *,(SELECT COUNT(a.id)FROM bu_sub_order a,bu_combine_order b WHERE a.combine_order_id = b.id AND a.audit_status != '1' AND b.receiver_name = tab.receiver_name
        <if test="date != null">
            AND pay_date > #{date}
        </if>
        ) suborder_count
        FROM (select
        <if test="distinct">
            distinct
        </if>
        <include refid="New_Column_List"/>
        from bu_sub_order a
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by  ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitSize}
        </if>) tab
    </select>

</mapper>
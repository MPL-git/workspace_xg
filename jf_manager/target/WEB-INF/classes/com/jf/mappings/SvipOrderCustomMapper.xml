<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jf.dao.SvipOrderCustomMapper" >
  <resultMap id="BaseResultMap" type="com.jf.entity.SvipOrderCustom" extends="com.jf.dao.SvipOrderMapper.BaseResultMap" >
    <result column="member_nick" property="memberNick" jdbcType="VARCHAR" />
    <result column="member_status" property="memberStatus" jdbcType="VARCHAR" />
    <result column="member_status_desc" property="memberStatusDesc" jdbcType="VARCHAR" />
    <result column="buy_type_desc" property="buyTypeDesc" jdbcType="VARCHAR" />
    <result column="years_of_purchase_desc" property="yearsOfPurchaseDesc" jdbcType="VARCHAR" />
    <result column="payment_name" property="paymentName" jdbcType="VARCHAR" />
    <result column="svip_order_desc" property="svipOrderDesc" jdbcType="VARCHAR" />
    <result column="combine_order_code" property="combineOrderCode" jdbcType="VARCHAR" />
    <result column="combine_order_id" property="combineOrderId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_code, buy_type, member_id, svip_member_setting_id, years_of_purchase, source_client, 
    ip, payment_id, payment_no, pay_amount, status, pay_date, deal_complete_date, pay_status,
    refund_date,refund_by,create_by, create_date, update_by, update_date, remarks, del_flag,
    (select mi.nick from bu_member_info mi where mi.del_flag = '0' and mi.id = t.member_id ) member_nick,
    (select mi.status from bu_member_info mi where mi.del_flag = '0' and mi.id = t.member_id ) member_status,
    FUN_GET_STATUS_DESC("BU_MEMBER_INFO", "STATUS", (select mi.status from bu_member_info mi where mi.del_flag = '0' and mi.id = t.member_id )) member_status_desc,
    FUN_GET_STATUS_DESC("BU_SVIP_ORDER", "BUY_TYPE", t.buy_type ) buy_type_desc,
    (select sp.remarks from sys_payment sp where sp.del_flag='0' and sp.id = t.payment_id)  payment_name,
    FUN_GET_STATUS_DESC("BU_SVIP_ORDER", "STATUS", t.status ) svip_order_desc,
    (select co.combine_order_code from bu_combine_order co where co.svip_order_id = t.id and co. STATUS = '1' and co.pay_date = t.pay_date and co.del_flag = '0') combine_order_code,
    (select co.id from bu_combine_order co where co.svip_order_id = t.id and co. STATUS = '1' and co.pay_date = t.pay_date and co.del_flag = '0') combine_order_id
  </sql>
  <select id="selectByCustomExample" resultMap="BaseResultMap" parameterType="com.jf.entity.SvipOrderCustomExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bu_svip_order t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByCustomPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bu_svip_order t
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByCustomExample" parameterType="com.jf.entity.SvipOrderCustomExample" resultType="java.lang.Integer" >
    select count(*) from bu_svip_order t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByCustomExampleSelective" parameterType="map" >
    update bu_svip_order t
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderCode != null" >
        order_code = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.buyType != null" >
        buy_type = #{record.buyType,jdbcType=CHAR},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.yearsOfPurchase != null" >
        years_of_purchase = #{record.yearsOfPurchase,jdbcType=CHAR},
      </if>
      <if test="record.paymentId != null" >
        payment_id = #{record.paymentId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentNo != null" >
        payment_no = #{record.paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.payDate != null" >
        pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealCompleteDate != null" >
        deal_complete_date = #{record.dealCompleteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="countSvipOrderList" resultType="java.util.Map" parameterType="java.util.Map" >
    	SELECT
			t.each_day AS eachDay,
			ifnull(sum(t.total_count), 0) AS totalCount,
			ifnull(sum(t.combine_amount), 0.00) AS combineAmount,
			ifnull(sum(t.zfb_amount), 0.00) AS zfbAmount,
			ifnull(sum(t.zfb_count), 0) AS zfbCount,
			ifnull(sum(t.wx_amount), 0.00) AS wxAmount,
			ifnull(sum(t.wx_count), 0) AS wxCount,
			ifnull(sum(t.gzh_amount), 0.00) AS gzhAmount,
			ifnull(sum(t.gzh_count), 0) AS gzhCount
		FROM
			(
				SELECT
					DATE_FORMAT(svip.pay_date, '%Y-%m-%d') each_day,
					count(svip.id) total_count,
					SUM(svip.pay_amount) combine_amount,
					0 AS zfb_amount,
					0 AS zfb_count,
					0 AS wx_amount,
					0 AS wx_count,
					0 AS gzh_amount,
					0 AS gzh_count
				FROM
					bu_svip_order svip
				WHERE
					svip.`status` = '1'
				AND svip.del_flag = '0'
				AND svip.pay_date IS NOT NULL
				AND svip.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
				AND svip.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
				AND svip.payment_id IS NOT NULL
				GROUP BY
					each_day
				UNION
					SELECT
						DATE_FORMAT(svip.pay_date, '%Y-%m-%d') each_day,
						0 AS total_count,
						0 AS combine_amount,
						SUM(svip.pay_amount) zfb_amount,
						count(svip.id) zfb_count,
						0 AS wx_amount,
						0 AS wx_count,
						0 AS gzh_amount,
						0 AS gzh_count
					FROM
						bu_svip_order svip
					WHERE
						svip.`status` = '1'
					AND svip.del_flag = '0'
					AND svip.pay_date IS NOT NULL
					AND svip.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
					AND svip.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
					AND svip.payment_id IN (1, 6)
					GROUP BY
						each_day
					UNION
						SELECT
							DATE_FORMAT(svip.pay_date, '%Y-%m-%d') each_day,
							0 AS total_count,
							0 AS combine_amount,
							0 AS zfb_amount,
							0 AS zfb_count,
							SUM(svip.pay_amount) wx_amount,
							count(svip.id) wx_count,
							0 AS gzh_amount,
							0 AS gzh_count
						FROM
							bu_svip_order svip
						WHERE
							svip.`status` = '1'
						AND svip.del_flag = '0'
						AND svip.pay_date IS NOT NULL
						AND svip.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
						AND svip.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
						AND svip.payment_id IN (2, 5)
						GROUP BY
							each_day
						UNION
							SELECT
								DATE_FORMAT(svip.pay_date, '%Y-%m-%d') each_day,
								0 AS total_count,
								0 AS combine_amount,
								0 AS zfb_amount,
								0 AS zfb_count,
								0 AS wx_amount,
								0 AS wx_count,
								SUM(svip.pay_amount) gzh_amount,
								count(svip.id) AS gzh_count
							FROM
								bu_svip_order svip
							WHERE
								svip.`status` = '1'
							AND svip.del_flag = '0'
							AND svip.pay_date IS NOT NULL
							AND svip.pay_date <![CDATA[ >= ]]> #{payDateBegin,jdbcType=VARCHAR}
							AND svip.pay_date <![CDATA[ <= ]]> #{payDateEnd,jdbcType=VARCHAR}
							AND svip.payment_id IN (4, 7)
							GROUP BY
								each_day
			) t
		GROUP BY
			t.each_day
		ORDER BY
			t.each_day
		LIMIT 61
  </select>

    <select id="refCountSvipOrderList" resultType="java.util.Map" parameterType="java.util.Map" >
SELECT
   t.each_day AS eachDay,
   ifnull(sum(t.total_count), 0) AS totalCount,
   ifnull(sum(t.combine_amount), 0.00) AS combineAmount,
   ifnull(sum(t.zfb_amount), 0.00) AS zfbAmount,
   ifnull(sum(t.zfb_count), 0) AS zfbCount,
   ifnull(sum(t.wx_amount), 0.00) AS wxAmount,
   ifnull(sum(t.wx_count), 0) AS wxCount,
   ifnull(sum(t.gzh_amount), 0.00) AS gzhAmount,
   ifnull(sum(t.gzh_count), 0) AS gzhCount
FROM
   (
      SELECT
         DATE_FORMAT(svip.refund_date, '%Y-%m-%d') each_day,
         count(svip.id) total_count,
         SUM(svip.pay_amount) combine_amount,
         0 AS zfb_amount,
         0 AS zfb_count,
         0 AS wx_amount,
         0 AS wx_count,
         0 AS gzh_amount,
         0 AS gzh_count
      FROM
         bu_svip_order svip
      WHERE
         svip.`status` = '2'
      AND svip.del_flag = '0'
      AND svip.refund_date IS NOT NULL
      AND svip.refund_date <![CDATA[ >= ]]> #{refundDateBegin,jdbcType=VARCHAR}
      AND svip.refund_date <![CDATA[ <= ]]> #{refundDateEnd,jdbcType=VARCHAR}
      AND svip.payment_id IS NOT NULL
      GROUP BY
         each_day
      UNION
         SELECT
            DATE_FORMAT(svip.refund_date, '%Y-%m-%d') each_day,
            0 AS total_count,
            0 AS combine_amount,
            SUM(svip.pay_amount) zfb_amount,
            count(svip.id) zfb_count,
            0 AS wx_amount,
            0 AS wx_count,
            0 AS gzh_amount,
            0 AS gzh_count
         FROM
            bu_svip_order svip
         WHERE
            svip.`status` = '2'
         AND svip.del_flag = '0'
         AND svip.refund_date IS NOT NULL
         AND svip.refund_date <![CDATA[ >= ]]> #{refundDateBegin,jdbcType=VARCHAR}
         AND svip.refund_date <![CDATA[ <= ]]> #{refundDateEnd,jdbcType=VARCHAR}
         AND svip.payment_id IN (1, 6)
         GROUP BY
            each_day
         UNION
            SELECT
               DATE_FORMAT(svip.refund_date, '%Y-%m-%d') each_day,
               0 AS total_count,
               0 AS combine_amount,
               0 AS zfb_amount,
               0 AS zfb_count,
               SUM(svip.pay_amount) wx_amount,
               count(svip.id) wx_count,
               0 AS gzh_amount,
               0 AS gzh_count
            FROM
               bu_svip_order svip
            WHERE
               svip.`status` = '2'
            AND svip.del_flag = '0'
            AND svip.refund_date IS NOT NULL
            AND svip.refund_date <![CDATA[ >= ]]> #{refundDateBegin,jdbcType=VARCHAR}
            AND svip.refund_date <![CDATA[ <= ]]> #{refundDateEnd,jdbcType=VARCHAR}
            AND svip.payment_id IN (2, 5)
            GROUP BY
               each_day
            UNION
               SELECT
                  DATE_FORMAT(svip.refund_date, '%Y-%m-%d') each_day,
                  0 AS total_count,
                  0 AS combine_amount,
                  0 AS zfb_amount,
                  0 AS zfb_count,
                  0 AS wx_amount,
                  0 AS wx_count,
                  SUM(svip.pay_amount) gzh_amount,
                  count(svip.id) AS gzh_count
               FROM
                  bu_svip_order svip
               WHERE
                  svip.`status` = '2'
               AND svip.del_flag = '0'
               AND svip.refund_date IS NOT NULL
               AND svip.refund_date <![CDATA[ >= ]]> #{refundDateBegin,jdbcType=VARCHAR}
               AND svip.refund_date <![CDATA[ <= ]]> #{refundDateEnd,jdbcType=VARCHAR}
               AND svip.payment_id IN (4, 7)
               GROUP BY
                  each_day
   ) t
GROUP BY
   t.each_day
ORDER BY
   t.each_day
LIMIT 61

    </select>
  
</mapper>